[
  {
    "path": "posts/httpsrpubscomlcollazohw3/",
    "title": "HW3",
    "description": "This assignment identifies the dataset I will be using for the final project, reads it into R, cleans it, and identifies potential research questions it can help me answer.",
    "author": [
      {
        "name": "Laura Collazo",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\r\nDataset\r\nThe dataset I’ve chosen for my final project is the Program for International Student Assessment (PISA) 2018 student data. It’s a large dataset containing 1,119 variables and 612,004 observations from 80 countries.\r\nBecause of the size of this dataset, I was unable to knit my file due to issues with available memory. After many hours of trying to troubleshoot, I decided the best option to decrease the memory needed was to write a csv with only the variables I want to examine and then read this back in.\r\nRead in/clean dataset\r\n\r\n\r\n#read in SAS & examine\r\n\r\npisa <- read_sas(\"cy07_msu_stu_qqq.sas7bdat\", \"CY07MSU_FMT_STU_QQQ.SAS7BCAT\", encoding = NULL, .name_repair = \"unique\")\r\n\r\nhead(pisa)\r\n\r\ntail(pisa)\r\n\r\nunique(pisa[c(\"CNT\")])\r\n\r\n\r\n\r\nBefore moving on to cleaning the data, I spent a couple hours examining the codebook to decide which variables I wanted to explore. It took so long because every variable sounded interesting! Once I finally made my decision, I created a mini-codebook in Excel with just the details for these variables included. In this file, I used concatenate to help quickly prepare the code for the select( ) statement below.\r\n\r\n\r\n# select only desired variables and filter country for Spain\r\n\r\npisa_smaller <- pisa %>% \r\n  \r\nselect(c(CNT,\r\nST001D01T,\r\nST004D01T,\r\nST197Q01HA,\r\nST197Q02HA,\r\nST197Q04HA,\r\nST197Q07HA,\r\nST197Q08HA,\r\nST197Q09HA,\r\nST197Q12HA,\r\nST220Q01HA,\r\nST220Q02HA,\r\nST220Q03HA,\r\nST220Q04HA,\r\nST177Q01HA,\r\nST019AQ01T,\r\nST021Q01TA)) %>%\r\n  \r\nfilter(CNT == \"ESP\")\r\n  \r\n#check work\r\n \r\nhead(pisa_smaller)\r\n\r\n#write csv\r\n\r\nwrite_csv(pisa_smaller, \"pisa_smaller_2022-2-20.csv\")\r\n\r\n\r\n\r\n\r\n\r\n#read in condensed version of pisa data & examine\r\n\r\npisa <- read_csv(\"pisa_smaller_2022-2-20.csv\")\r\n\r\nhead(pisa)\r\n\r\n\r\n# A tibble: 6 x 17\r\n  CNT   ST001D01T ST004D01T ST197Q01HA ST197Q02HA ST197Q04HA\r\n  <chr>     <dbl>     <dbl>      <dbl>      <dbl>      <dbl>\r\n1 ESP          10         2          4          4          4\r\n2 ESP           9         1          3          2          3\r\n3 ESP          10         2          4          3          3\r\n4 ESP           8         2          2          1          3\r\n5 ESP          10         1         NA         NA         NA\r\n6 ESP          10         1          4          2          3\r\n# ... with 11 more variables: ST197Q07HA <dbl>, ST197Q08HA <dbl>,\r\n#   ST197Q09HA <dbl>, ST197Q12HA <dbl>, ST220Q01HA <dbl>,\r\n#   ST220Q02HA <dbl>, ST220Q03HA <dbl>, ST220Q04HA <dbl>,\r\n#   ST177Q01HA <dbl>, ST019AQ01T <dbl>, ST021Q01TA <dbl>\r\n\r\ntail(pisa)\r\n\r\n\r\n# A tibble: 6 x 17\r\n  CNT   ST001D01T ST004D01T ST197Q01HA ST197Q02HA ST197Q04HA\r\n  <chr>     <dbl>     <dbl>      <dbl>      <dbl>      <dbl>\r\n1 ESP          10         1          4          4          4\r\n2 ESP           9         2          3          3          3\r\n3 ESP          10         2          4          4          4\r\n4 ESP           9         2          2          2          2\r\n5 ESP           8         2          3          3          3\r\n6 ESP           9         1          2          2          2\r\n# ... with 11 more variables: ST197Q07HA <dbl>, ST197Q08HA <dbl>,\r\n#   ST197Q09HA <dbl>, ST197Q12HA <dbl>, ST220Q01HA <dbl>,\r\n#   ST220Q02HA <dbl>, ST220Q03HA <dbl>, ST220Q04HA <dbl>,\r\n#   ST177Q01HA <dbl>, ST019AQ01T <dbl>, ST021Q01TA <dbl>\r\n\r\nAt this point I created new variable names and added them to my codebook. Then, I again used concatenate to quickly create the code I pasted into rename(). I believe a join could have been used here instead, however, I stuck with this simpler approach for now as I’m still trying to get the basics down.\r\n\r\n\r\n#rename variables\r\n\r\npisa_tidy <- pisa %>%\r\n  \r\nrename(country=CNT,\r\ngrade=ST001D01T,\r\ngender=ST004D01T,\r\ninformed_climate_change=ST197Q01HA,\r\ninformed_global_health=ST197Q02HA,\r\ninformed_migration=ST197Q04HA,\r\ninformed_international_conflict=ST197Q07HA,\r\ninformed_world_hunger=ST197Q08HA,\r\ninformed_poverty_causes=ST197Q09HA,\r\ninformed_gender_equality=ST197Q12HA,\r\ncountries_family=ST220Q01HA,\r\ncountries_school=ST220Q02HA,\r\ncountries_neighbourhood=ST220Q03HA,\r\ncountries_friends=ST220Q04HA,\r\nlanguage_self=ST177Q01HA,\r\ncountry_born=ST019AQ01T,\r\ncountry_arrival_age=ST021Q01TA) %>%\r\n\r\n#remove NAs- the only variable it makes sense to keep NA is country_arrival_age\r\n\r\nfilter(complete.cases(.[-17])) %>%\r\n\r\n#recode values\r\n  \r\nmutate(country = recode(country, ESP = \"Spain\")) %>%\r\n  \r\nmutate(gender = recode(gender, `1` = \"Female\" , `2` = \"Male\")) %>%\r\n  \r\nmutate(country_born = recode(country_born, `1` = \"Spain\", `2` = \"other\")) %>%\r\n  \r\nmutate(informed_climate_change = recode(informed_climate_change, \r\n      `1` = \"I have never heard of this\", \r\n      `2` = \"I have heard about this but I would not be able to explain what it is really about\",\r\n      `3` = \"I know something about this and could explain the general issue\", \r\n      `4` = \"I am familiar with this and I would be able to explain this well\")) %>%\r\n\r\nmutate(informed_global_health = recode(informed_global_health, \r\n      `1` = \"I have never heard of this\", \r\n      `2` = \"I have heard about this but I would not be able to explain what it is really about\", \r\n      `3` = \"I know something about this and could explain the general issue\", \r\n      `4` = \"I am familiar with this and I would be able to explain this well\"))%>%\r\n\r\nmutate(informed_migration = recode(informed_migration, \r\n      `1` = \"I have never heard of this\", \r\n      `2` = \"I have heard about this but I would not be able to explain what it is really about\", \r\n      `3` = \"I know something about this and could explain the general issue\", \r\n      `4` = \"I am familiar with this and I would be able to explain this well\"))%>%\r\n\r\nmutate(informed_international_conflict = recode(informed_international_conflict,\r\n      `1` = \"I have never heard of this\", \r\n      `2` = \"I have heard about this but I would not be able to explain what it is really about\", \r\n      `3` = \"I know something about this and could explain the general issue\", \r\n      `4` = \"I am familiar with this and I would be able to explain this well\"))%>%\r\n\r\nmutate(informed_world_hunger = recode(informed_world_hunger, \r\n      `1` = \"I have never heard of this\", \r\n      `2` = \"I have heard about this but I would not be able to explain what it is really about\", \r\n      `3` = \"I know something about this and could explain the general issue\", \r\n      `4` = \"I am familiar with this and I would be able to explain this well\"))%>%\r\n\r\nmutate(informed_poverty_causes = recode(informed_poverty_causes, \r\n      `1` = \"I have never heard of this\", \r\n      `2` = \"I have heard about this but I would not be able to explain what it is really about\", \r\n      `3` = \"I know something about this and could explain the general issue\", \r\n      `4` = \"I am familiar with this and I would be able to explain this well\"))%>%\r\n\r\nmutate(informed_gender_equality = recode(informed_gender_equality, \r\n      `1` = \"I have never heard of this\", \r\n      `2` = \"I have heard about this but I would not be able to explain what it is really about\", \r\n      `3` = \"I know something about this and could explain the general issue\", \r\n      `4` = \"I am familiar with this and I would be able to explain this well\"))%>%\r\n\r\nmutate(countries_family = recode(countries_family, `1` = \"Yes\", `2` = \"No\")) %>%\r\n\r\nmutate(countries_school = recode(countries_school, `1` = \"Yes\", `2` = \"No\")) %>%\r\n  \r\nmutate(countries_neighbourhood = recode(countries_neighbourhood, `1` = \"Yes\", `2` = \"No\")) %>%\r\n  \r\nmutate(countries_friends = recode(countries_friends, `1` = \"Yes\", `2` = \"No\")) %>%\r\n  \r\nmutate(language_self = recode(language_self, `1` = \"One\", `2` = \"Two\", `3` = \"Three\", `4` = \"Four\")) %>%\r\n  \r\nmutate(country_arrival_age = recode(country_arrival_age, \r\n`1` = \"Age 0 - 1\",\r\n`2` = \"Age 1\",\r\n`3` = \"Age 2\",\r\n`4` = \"Age 3\",\r\n`5` = \"Age 4\",\r\n`6` = \"Age 5\",\r\n`7` = \"Age 6\",\r\n`8` = \"Age 7\",\r\n`9` = \"Age 8\",\r\n`10` = \"Age 9\",\r\n`11` = \"Age 10\",\r\n`12` = \"Age 11\",\r\n`13` = \"Age 12\",\r\n`14` = \"Age 13\",\r\n`15` = \"Age 14\",\r\n`16` = \"Age 15\",\r\n`17` = \"Age 16\"\r\n )) %>%\r\n  \r\nmutate(grade = recode(grade,\r\n`7` = \"Grade 7\",\r\n`8` = \"Grade 8\",\r\n`9` = \"Grade 9\",\r\n`10` = \"Grade 10\",\r\n`11` = \"Grade 11\",\r\n`12` = \"Grade 12\",\r\n`13` = \"Grade 13\"))\r\n\r\n\r\n\r\nTo make the above code easier to read, a better approach would have been to use mutate() with across() and case_when(). After many attempts, I was unable to get this to work, but I plan to come back to it so I can learn how to use this best approach going forward.\r\n\r\n\r\n#check work\r\npisa_tidy\r\n\r\n\r\n# A tibble: 26,573 x 17\r\n   country grade    gender informed_climate_change    informed_global~\r\n   <chr>   <chr>    <chr>  <chr>                      <chr>           \r\n 1 Spain   Grade 10 Male   I am familiar with this a~ I am familiar w~\r\n 2 Spain   Grade 9  Female I know something about th~ I have heard ab~\r\n 3 Spain   Grade 10 Male   I am familiar with this a~ I know somethin~\r\n 4 Spain   Grade 8  Male   I have heard about this b~ I have never he~\r\n 5 Spain   Grade 10 Female I am familiar with this a~ I have heard ab~\r\n 6 Spain   Grade 9  Male   I know something about th~ I have heard ab~\r\n 7 Spain   Grade 10 Male   I know something about th~ I know somethin~\r\n 8 Spain   Grade 10 Female I have heard about this b~ I have heard ab~\r\n 9 Spain   Grade 10 Male   I have heard about this b~ I know somethin~\r\n10 Spain   Grade 10 Male   I know something about th~ I know somethin~\r\n# ... with 26,563 more rows, and 12 more variables:\r\n#   informed_migration <chr>, informed_international_conflict <chr>,\r\n#   informed_world_hunger <chr>, informed_poverty_causes <chr>,\r\n#   informed_gender_equality <chr>, countries_family <chr>,\r\n#   countries_school <chr>, countries_neighbourhood <chr>,\r\n#   countries_friends <chr>, language_self <chr>, country_born <chr>,\r\n#   country_arrival_age <chr>\r\n\r\nPotential research questions\r\nMy original plan with this data was to examine differences in how students from Spain and the United States responded to certain variables. However, after examining the data in more detail I realized students from the USA did not respond to the variables I was interested in.\r\nMy new plan is to examine if students in Spain feel they are better informed on 7 different topics (all character variables):\r\nHow informed are you about the following topics? Climate change and global warming (informed_climate_change )\r\nHow informed are you about the following topics? Global health (e.g. epidemics) (informed_global_health )\r\nHow informed are you about the following topics? Migration (movement of people) (informed_migration )\r\nHow informed are you about the following topics? International conflicts (informed_international_conflict )\r\nHow informed are you about the following topics? Hunger or malnutrition in different parts of the world (informed_world_hunger )\r\nHow informed are you about the following topics? Causes of poverty (informed_poverty_causes )\r\nHow informed are you about the following topics? Equality between men and women in different parts of the world (informed_gender_equality )\r\nDepending on (all characher variables):\r\nWhether they were born in Spain or another country (country_born )\r\nWhat their arrival age in Spain was if they were born in another country (country_arrival_age )\r\nHow many languages they speak well enough to converse with others (language_self )\r\nIf they have contact with people from other countries:\r\nin their family (countries_family )\r\nat school (countries_school )\r\nin their neighborhood (countries_neighbourhood )\r\nin their circle of friends (countries_friends )\r\n\r\nEsentially, I am curious if exposure to other cultures/languages increases the liklihood that a student living in Spain feels better informed on the above topics. I would ultimately love to expand this to look at all countries who responded to the selected variables to see if what I find in Spain holds true everywhere. I think this would be a much more interesting research question! However, I believe my current R skill level requires a much simpler analysis at this time. I did leave the variable “country”  in my dataset, though, in case I reach the point where I feel good about expanding my research. The variables “grade”  and “gender”  were also left in for the same reason.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-23T19:18:08-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscommderiantothdacsshw2mdt/",
    "title": "MADT_Homework 2",
    "description": "This is homework 2 for DACSS601",
    "author": [
      {
        "name": "Meredith Derian-Toth",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\nR Markdown\n\n\nsetwd(\"~/Desktop/dacss 601/R Data\")\nlibrary(readr)\nrr_data <- read_csv(\"railroad_2012_clean_county_tidy.csv\")\nView(rr_data)\n\n\n\n#The variables in my dataset are state, county, and total_employees. #state and countar are both categorial, nominal variables. #total_employees is an integar, and a discrete variable. The value is the count of railroad employees within in specific state and county.\n\n\nlibrary(dplyr)\ndata(rr_data)\n  rr_data%>%\n  filter(state==\"AL\")%>%\n  arrange(desc(total_employees))\n\n\n# A tibble: 67 × 3\n   state county    total_employees\n   <chr> <chr>               <dbl>\n 1 AL    JEFFERSON             990\n 2 AL    MOBILE                331\n 3 AL    COLBERT               199\n 4 AL    WALKER                192\n 5 AL    ST CLAIR              162\n 6 AL    SHELBY                158\n 7 AL    BLOUNT                154\n 8 AL    BALDWIN               143\n 9 AL    CULLMAN               129\n10 AL    DALLAS                122\n# … with 57 more rows\n\nrr_data_AL <- data(rr_data)\n  rr_data%>%\n  filter(state==\"AL\")%>%\n  arrange(desc(total_employees))\n\n\n# A tibble: 67 × 3\n   state county    total_employees\n   <chr> <chr>               <dbl>\n 1 AL    JEFFERSON             990\n 2 AL    MOBILE                331\n 3 AL    COLBERT               199\n 4 AL    WALKER                192\n 5 AL    ST CLAIR              162\n 6 AL    SHELBY                158\n 7 AL    BLOUNT                154\n 8 AL    BALDWIN               143\n 9 AL    CULLMAN               129\n10 AL    DALLAS                122\n# … with 57 more rows\n\n\n\nrr_data_AK <-rr_data%>%\nselect(`state`,`total_employees`)%>%\nfilter(state==\"AK\")\n\nrr_data_AK%>%\narrange(desc(total_employees))\n\n\n# A tibble: 6 × 2\n  state total_employees\n  <chr>           <dbl>\n1 AK                 88\n2 AK                  7\n3 AK                  3\n4 AK                  2\n5 AK                  2\n6 AK                  1\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-23T19:18:15-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httprpubscomsnehalhw4/",
    "title": "DACSS 601 HW4",
    "description": "Data Visualization",
    "author": [
      {
        "name": "Snehal Prabhu",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\r\n\r\n\r\nlibrary(readxl)\r\nlibrary(tidyverse)\r\nlibrary(ggthemes)\r\n\r\n\r\n\r\nReading the Data\r\n\r\n\r\neggs <- read_excel(\"~/eggs_tidy.xlsx\")\r\nhead(eggs)\r\n\r\n\r\n# A tibble: 6 x 6\r\n  month     year large_half_dozen large_dozen extra_large_half_dozen\r\n  <chr>    <dbl>            <dbl>       <dbl>                  <dbl>\r\n1 January   2004             126         230                    132 \r\n2 February  2004             128.        226.                   134.\r\n3 March     2004             131         225                    137 \r\n4 April     2004             131         225                    137 \r\n5 May       2004             131         225                    137 \r\n6 June      2004             134.        231.                   137 \r\n# ... with 1 more variable: extra_large_dozen <dbl>\r\n\r\nsummary(eggs)\r\n\r\n\r\n    month                year      large_half_dozen  large_dozen   \r\n Length:120         Min.   :2004   Min.   :126.0    Min.   :225.0  \r\n Class :character   1st Qu.:2006   1st Qu.:129.4    1st Qu.:233.5  \r\n Mode  :character   Median :2008   Median :174.5    Median :267.5  \r\n                    Mean   :2008   Mean   :155.2    Mean   :254.2  \r\n                    3rd Qu.:2011   3rd Qu.:174.5    3rd Qu.:268.0  \r\n                    Max.   :2013   Max.   :178.0    Max.   :277.5  \r\n extra_large_half_dozen extra_large_dozen\r\n Min.   :132.0          Min.   :230.0    \r\n 1st Qu.:135.8          1st Qu.:241.5    \r\n Median :185.5          Median :285.5    \r\n Mean   :164.2          Mean   :266.8    \r\n 3rd Qu.:185.5          3rd Qu.:285.5    \r\n Max.   :188.1          Max.   :290.0    \r\n\r\nLet’s observe the change in price of eggs in the year 2004 alone\r\n\r\n\r\neggs_2004 <- eggs %>%\r\n  filter(year=='2004')\r\neggs_2004 <- pivot_longer(eggs_2004, \"large_half_dozen\":\"extra_large_dozen\", names_to = \"type\", values_to = \"cost\")\r\n\r\neggs_2004\r\n\r\n\r\n# A tibble: 48 x 4\r\n   month     year type                    cost\r\n   <chr>    <dbl> <chr>                  <dbl>\r\n 1 January   2004 large_half_dozen        126 \r\n 2 January   2004 large_dozen             230 \r\n 3 January   2004 extra_large_half_dozen  132 \r\n 4 January   2004 extra_large_dozen       230 \r\n 5 February  2004 large_half_dozen        128.\r\n 6 February  2004 large_dozen             226.\r\n 7 February  2004 extra_large_half_dozen  134.\r\n 8 February  2004 extra_large_dozen       230 \r\n 9 March     2004 large_half_dozen        131 \r\n10 March     2004 large_dozen             225 \r\n# ... with 38 more rows\r\n\r\nPlot the prices of eggs in the year 2004 in a side-by-side bar chart\r\n\r\n\r\nlibrary(ggplot2)\r\nggplot(data = eggs_2004, aes(x=month, y=cost, fill=type)) +\r\n  geom_bar(stat = \"identity\", position = 'dodge')\r\n\r\n\r\n\r\n\r\nTo see the average change in the prices of all egg categories through the years in the eggs data set calculate the mean of the prices of a year using the group by and summarize_at function\r\n\r\n\r\nlibrary(dplyr)\r\neggs_year <- eggs %>%\r\n  group_by(year) %>%\r\n  summarize_at(c(\"large_half_dozen\", \"large_dozen\", \"extra_large_half_dozen\", \"extra_large_dozen\"), mean)\r\nhead(eggs_year)\r\n\r\n\r\n# A tibble: 6 x 5\r\n   year large_half_dozen large_dozen extra_large_hal~ extra_large_doz~\r\n  <dbl>            <dbl>       <dbl>            <dbl>            <dbl>\r\n1  2004             130.        230.             136.             237.\r\n2  2005             128.        234.             136.             241 \r\n3  2006             128.        234.             136.             241.\r\n4  2007             132.        237.             139.             245.\r\n5  2008             157.        261.             166.             269.\r\n6  2009             174.        275              186.             286.\r\n\r\nLets visualize these changes with a bar chart\r\n\r\n\r\neggs_year_dozen <- pivot_longer(eggs_year, c(\"large_dozen\",\"extra_large_dozen\"), names_to = \"type\", values_to=\"cost\")\r\nhead(eggs_year_dozen)\r\n\r\n\r\n# A tibble: 6 x 5\r\n   year large_half_dozen extra_large_half_dozen type              cost\r\n  <dbl>            <dbl>                  <dbl> <chr>            <dbl>\r\n1  2004             130.                   136. large_dozen       230.\r\n2  2004             130.                   136. extra_large_doz~  237.\r\n3  2005             128.                   136. large_dozen       234.\r\n4  2005             128.                   136. extra_large_doz~  241 \r\n5  2006             128.                   136. large_dozen       234.\r\n6  2006             128.                   136. extra_large_doz~  241.\r\n\r\nggplot(data = eggs_year_dozen, aes(x=year, y=cost, fill=type)) +\r\n  geom_bar(stat = \"identity\", position = 'dodge')+\r\n  theme_bw()\r\n\r\n\r\n\r\n\r\n\r\n\r\neggs_year_halfdozen <- pivot_longer(eggs_year, c(\"large_half_dozen\",\"extra_large_half_dozen\"), names_to = \"type\", values_to=\"cost\")\r\nhead(eggs_year_halfdozen)\r\n\r\n\r\n# A tibble: 6 x 5\r\n   year large_dozen extra_large_dozen type                    cost\r\n  <dbl>       <dbl>             <dbl> <chr>                  <dbl>\r\n1  2004        230.              237. large_half_dozen        130.\r\n2  2004        230.              237. extra_large_half_dozen  136.\r\n3  2005        234.              241  large_half_dozen        128.\r\n4  2005        234.              241  extra_large_half_dozen  136.\r\n5  2006        234.              241. large_half_dozen        128.\r\n6  2006        234.              241. extra_large_half_dozen  136.\r\n\r\nggplot(data = eggs_year_halfdozen, aes(x=year, y=cost, fill=type)) +\r\n  geom_bar(stat = \"identity\", position = 'dodge')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/httprpubscomsnehalhw4/distill-preview.png",
    "last_modified": "2022-02-23T19:18:20-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomaristotle1869077/",
    "title": "Wrangling data",
    "description": "Below is my attempt to organize a dataset on employment rates across different states. As will be seen below, I attempt to organize the data but isolating the totals, and another by removing the totals rows from the data set. I was able to do some calulations (but was having errors with others).",
    "author": [
      {
        "name": "Eris Dodds",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\n#State Data looks at the overall employment rates aross different counties in different U.S. States.\nA tibble: 2,993 × 2\n…2 …6  1 NA NA\n2 NA NA\n3 STATE TOTAL 4 AE 2.0\n5 AE Total1 2\n6 AK 7.0\n7 AK 2.0\n8 AK 3.0\n9 AK 2.0\n10 AK 1.0\n# … with 2,983 more rows\n#The table itself inclues empty columns and rows which need to be reduced.\nstate<-drop_na(state)\nA tibble: 2,986 × 2\n…2 …6  1 STATE TOTAL 2 AE 2.0\n3 AE Total1 2\n4 AK 7.0\n5 AK 2.0\n6 AK 3.0\n7 AK 2.0\n8 AK 1.0\n9 AK 88.0 10 AK Total 103\n# … with 2,976 more rows\ncolnames(state) colnames(state)<-c(“State”, “Total”) state<-state[-c(1),] # A tibble: 2,985 × 2 State Total  1 AE 2.0\n2 AE Total1 2\n3 AK 7.0\n4 AK 2.0\n5 AK 3.0\n6 AK 2.0\n7 AK 1.0\n8 AK 88.0 9 AK Total 103\n10 AL 102.0 # … with 2,975 more rows > state_totals<- state[c(2, 9, 77, 79, 152, 168, 224, 282, 291, 293, 297, 365, 518, 522, 622, 659, 763, 856, 952, 1072, 1136, 1148, 1174, 1191, 1270, 1357, 1473, 1552, 1606, 1701, 1751, 1841, 1852, 1874, 1904, 1917, 1979, 2068, 2142, 2176, 2242, 2248, 2295, 2348, 2440, 2662, 2688, 2781, 2796, 2836, 2906, 2960, 2983),]\nIsolating the totaled state data from the individual county data.\nA tibble: 53 × 2\nState Total  1 AE Total1 2\n2 AK Total 103\n3 AL Total 4257 4 AP Total1 1\n5 AR Total 3871 6 AZ Total 3153 7 CA Total 13137 8 CO Total 3650 9 CT Total 2592 10 DC Total 279\n# … with 43 more rows\nstate_numbers<- state[-c(2, 9, 77, 79, 152, 168, 224, 282, 291, 293, 297, 365, 518, 522, 622, 659, 763, 856, 952, 1072, 1136, 1148, 1174, 1191, 1270, 1357, 1473, 1552, 1606, 1701, 1751, 1841, 1852, 1874, 1904, 1917, 1979, 2068, 2142, 2176, 2242, 2248, 2295, 2348, 2440, 2662, 2688, 2781, 2796, 2836, 2906, 2960, 2983),] > state_numbers # A tibble: 2,932 × 2 State Total  1 AE 2.0\n2 AK 7.0\n3 AK 2.0\n4 AK 3.0\n5 AK 2.0\n6 AK 1.0\n7 AK 88.0 8 AL 102.0 9 AL 143.0 10 AL 1.0\n# … with 2,922 more rows\n# not sure why this is happening, sadly cannot move forward with group_by() and summarise() functions for either data set.\n\nstate_numbers %>%\n+ group_by(State) %>%\n+ summarize(Ave_Total=mean(Total))\n# A tibble: 56 × 2\n   State  Ave_Total\n   <chr>      <dbl>\n 1 AE            NA\n 2 AK            NA\n 3 AL            NA\n 4 AP            NA\n 5 AR            NA\n 6 AZ            NA\n 7 CA            NA\n 8 CANADA        NA\n 9 CO            NA\n10 CT            NA\n# … with 46 more rows\nThere were 50 or more warnings (use warnings() to see the first 50)\n\nstate_totals %>%\n+     + group_by(\"State\") %>%\n+     + summarize(Ave_Total=mean(\"Total\"))\nError in UseMethod(\"group_by\") : \n  no applicable method for 'group_by' applied to an object of class \"character\"\n  \nglimpse(state_totals)\nRows: 53\nColumns: 2\n$ State <chr> \"AE Total1\", \"AK Total\", \"AL Total\", \"AP Total1\", \"AR Total\", \"AZ…\n$ Total <chr> \"2\", \"103\", \"4257\", \"1\", \"3871\", \"3153\", \"13137\", \"3650\", \"2592\",…\n\n\nggplot(data = state_totals) + geom_bar(mapping = aes(x = State, y = Total), stat = \"identity\")\n\n\n\nDistill is a publication format for scientific and technical writing, native to the web. \n\nLearn more about using Distill for R Markdown at <https://rstudio.github.io/distill>.\n\n\n\n\n\n```{.r .distill-force-highlighting-css}\n\n\n",
    "preview": {},
    "last_modified": "2022-02-23T19:19:14-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscommderiantothdacss601hw2mdt/",
    "title": "MADT_Homework 3",
    "description": "Identifying variables in WA school accountability data",
    "author": [
      {
        "name": "Meredith Derian-Toth",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\nMy research interest is in schols and districts that are lower performing. I am interested to know more about the learning environment as well as the community environment that may effect student learning and student attendance. The variables in this dataset only give us some of this information, such as student performance data, student attendance data, and some demographic data.\n\n\nlibrary(readr)\nWA_Edu_Improvment_2017_2019 <- read_csv(\"WA_School_Improvment_2017_-_2019_Runs.csv\")\nView(WA_Edu_Improvment_2017_2019)\ndim(WA_Edu_Improvment_2017_2019)\n\n\n[1] 72850    56\n\nhead(WA_Edu_Improvment_2017_2019)\n\n\n# A tibble: 6 × 56\n  `ESD Organization Id` `ESD Name`    `District Orga…` `District Code`\n                  <dbl> <chr>                    <dbl>           <dbl>\n1                100006 Puget Sound …           100229           17001\n2                100003 Educational …           100278            6037\n3                100009 Northwest Ed…           100142           31025\n4                100009 Northwest Ed…           100159           31006\n5                100009 Northwest Ed…           100142           31025\n6                100007 Educational …           100195           11001\n# … with 52 more variables: `District Name` <chr>,\n#   `School Code` <dbl>, `School Name` <chr>,\n#   `School Organization Id` <dbl>, `School Type` <chr>,\n#   `Student Group` <chr>, `Proficiency ELA Numerator` <chr>,\n#   `Proficiency ELA Denominator` <dbl>,\n#   `Proficiency ELA Rate` <chr>, `Proficiency ELA Decile` <dbl>,\n#   `Proficiency Math Numerator` <chr>, …\n\nThere are many variables in this dataset, a few that I will be focusing on are:\nDistrict code and school code, these variables are discrete integars.\nStudent group is a categorical text variable that identifies students of a particular race, ethnicity, low income status, or status as an egnlish language learner .\nProficiency ELA Rate, Proficiency Math Rate, Regular Attendance Rate, and Grade FourYear Rate are all continuous variables\nPotential research questions are:\nDo school’s with low attendance rates also have low 4-year graduation rates?\nDo school’s with low attendance rates also perform lower on ELA or Math proficiency assessments?\nIs there a relationship between school’s student group populations and their attendance rate and/or academic proficiency scores?\n\n\nlibrary(\"tidyverse\")\nWA_Edu_Improvment_2017_2019_Filtered2<-WA_Edu_Improvment_2017_2019 %>%\n  filter(!grepl('Suppress | N',\"Regular Attendance Rate\"))%>%\nggplot(aes(\"Student Group\", \"Regular Attendance Rate\")) + \n  geom_boxplot()\n\n\n\nThe above code is me trying to plot the attendance rate for the different student groups but I can’t seem to make it work. I think it’s probably because there are both integars and text in the Regular Attendance Rate column, though I can’t seem to filter out the text. I will come back to this problem.\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-23T19:18:30-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomenoh869331/",
    "title": "Homework2",
    "description": "Data Import - With eggs_tidy.xlsx (clean dataset)",
    "author": [
      {
        "name": "Eunsol Noh",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\nI did homework2 by using eggs_tidy.xlsx (clean dataset) from the example datasets.\n\n\nknitr::opts_chunk$set(echo = TRUE)\n\n#Set path\n.libPaths() #Library path\n\n\n[1] \"/Library/Frameworks/R.framework/Versions/4.1/Resources/library\"\n\nsetwd(\"/Library/Frameworks/R.framework/Versions/4.1/Resources/library\") #Set the working directory with the library path\ngetwd() # Check the working directory\n\n\n[1] \"/Library/Frameworks/R.framework/Versions/4.1/Resources/library\"\n\n#Load pacakges\nlibrary(readxl)\nlibrary(dplyr)\n\n#1. Read in a dataset.\neggs_data<-read_excel(path=\"/Users/eunsolnoh/Desktop/dacss601/eggs_tidy.xlsx\")\neggs_data\n\n\n# A tibble: 120 × 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>\n 1 January    2004             126         230                    132 \n 2 February   2004             128.        226.                   134.\n 3 March      2004             131         225                    137 \n 4 April      2004             131         225                    137 \n 5 May        2004             131         225                    137 \n 6 June       2004             134.        231.                   137 \n 7 July       2004             134.        234.                   137 \n 8 August     2004             134.        234.                   137 \n 9 September  2004             130.        234.                   136.\n10 October    2004             128.        234.                   136.\n# … with 110 more rows, and 1 more variable: extra_large_dozen <dbl>\n\n#2. Explain the variables in the dataset.\ncolnames(eggs_data)\n\n\n[1] \"month\"                  \"year\"                  \n[3] \"large_half_dozen\"       \"large_dozen\"           \n[5] \"extra_large_half_dozen\" \"extra_large_dozen\"     \n\n# Month: Character\n# Year, large_half_dozen, large_dozen, extra_large_half and extra_large_dozen: dbl (double)\n\n#3. Perform basic data-wrangling operations.\ndim(eggs_data)\n\n\n[1] 120   6\n\n#3.1\n#Filtering the data only for January \neggs_data_january<-filter(eggs_data, month == \"January\") \n\n#Arrage the filtered data from the oldest January to the latest January\neggs_data_arrange<-arrange(eggs_data_january,desc(\"year\"))\neggs_data_arrange\n\n\n# A tibble: 10 × 6\n   month    year large_half_dozen large_dozen extra_large_half_dozen\n   <chr>   <dbl>            <dbl>       <dbl>                  <dbl>\n 1 January  2004             126         230                    132 \n 2 January  2005             128.        234.                   136.\n 3 January  2006             128.        234.                   136.\n 4 January  2007             128.        234.                   136.\n 5 January  2008             132         237                    139 \n 6 January  2009             174.        278.                   186.\n 7 January  2010             174.        272.                   186.\n 8 January  2011             174.        268.                   186.\n 9 January  2012             174.        268.                   186.\n10 January  2013             178         268.                   188.\n# … with 1 more variable: extra_large_dozen <dbl>\n\n#3.2\n#Arrange the years in the order of the filtered data (the # of extra_large_dozen) from the least to the most.\n\neggs_data %>%\n  select(year, extra_large_dozen) %>%\n  group_by(year) %>%\n  arrange(desc(extra_large_dozen)) %>%\n  slice(1)\n\n\n# A tibble: 10 × 2\n# Groups:   year [10]\n    year extra_large_dozen\n   <dbl>             <dbl>\n 1  2004              241 \n 2  2005              241 \n 3  2006              242.\n 4  2007              245 \n 5  2008              286.\n 6  2009              286.\n 7  2010              286.\n 8  2011              286.\n 9  2012              290 \n10  2013              290 \n\n# If we consider that numbers to be the numbers of eggs consumed each year, we can see that there is a tendency for the number of eggs consumed to increase as the years increase (only based on the number of extra_large_dozen).\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-23T19:18:35-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomtlamkin869562/",
    "title": "HW4",
    "description": "Statistical Review and Visualization of School Compensations Data from 20218-19",
    "author": [
      {
        "name": "TLamkin",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\r\nINTRODUCTION\r\nThe Massachusetts Department of Elementary and Secondary Education publishes data related to teacher pay rates. These are made available at https://www.doe.mass.edu/SchDistrictData.html.\r\nMy goal was to examine data by providing a statistical overview and visualizations.\r\nChecking the Environment\r\nI like to verify that my working directory and library paths are the same and that I have the correct packages installed.\r\n\r\n\r\n# Verify library path\r\n\r\n.libPaths()\r\n\r\n\r\n[1] \"C:/Users/theresa/Documents/R/win-library/4.1\"\r\n[2] \"C:/Program Files/R/R-4.1.2/library\"          \r\n\r\n# set the working directory to be the same as the library path\r\n\r\nsetwd(\"C:/Users/theresa/Documents/R/win-library/4.1\")\r\n\r\n# verify the working directory\r\n\r\ngetwd()\r\n\r\n\r\n[1] \"C:/Users/theresa/Documents/R/win-library/4.1\"\r\n\r\n# Installing Tidyverse and readxl packages with explicitly defining the URL of where it lives. This is to get around a Mirror error. \r\n\r\n# install.packages(\"tidyverse\", repos = \"http://cran.us.r-project.org\")\r\n# install.packages(\"readxl\", repos = \"http://cran.us.r-project.org\")\r\n\r\n# load the necessary libraries for the processing\r\n\r\nlibrary(tidyverse)\r\nlibrary(dplyr)\r\nlibrary(readxl)\r\nlibrary(readr)\r\nlibrary(stringr)\r\nlibrary(ggplot2)\r\nlibrary(quantreg)\r\n\r\n\r\n\r\nLoading the Data\r\nLoad in the full dataset, skipping the header rows and cleaning the column names to populate spaces.\r\n\r\n\r\npreliminary_school_data_hs <-read_csv(\"c:/users/theresa/Documents/DACSS Local/DataSets/preliminary-school-ppx.csv\", skip = 3) \r\n\r\n# To create easier field names, replace the spaces with a dash in the original column names.\r\n\r\nnames(preliminary_school_data_hs) <-str_replace_all(names(preliminary_school_data_hs), c(\" \"=\"-\"))\r\n\r\n\r\n\r\nTidy-ing the Numeric data:\r\nThe teacher data included the 2018-2019 salary information for all school levels pre-k - 12. The data also included many other operational expenditures for each school.\r\nThe financial data for this analysis needed to be reduced to only relevant data: District Name School Name Represented Grades % Economically Disadvantaged Student Body Teacher Salary Guidance Dept Salary\r\nThe first step was to reduce the data to the relevant fields and clean any non-numeric values.\r\nMissing data was filled with the median for the field.\r\n\r\n\r\n# Reduce the data set to the relevant columns \r\n\r\npreliminary_school_data_g12 <- preliminary_school_data_hs %>%\r\n   select(District...2,`School-Name`, `Grade-Level`, `%-Econ-Disadv`, `Teachers-Per-100-Students`,`Avg-Teacher-Salary`,) \r\n\r\npreliminary_school_data_g12\r\n\r\n\r\n# A tibble: 3,603 x 6\r\n   District...2 `School-Name`            `Grade-Level` `%-Econ-Disadv`\r\n   <chr>        <chr>                    <chr>         <chr>          \r\n 1 Abington     Abington Early Educatio~ PK            30.7%          \r\n 2 Abington     Woodsdale Elementary Sc~ 3-4           23.9%          \r\n 3 Abington     Beaver Brook Elementary  K-2           22.7%          \r\n 4 Abington     Abington Middle School   5-8           25.9%          \r\n 5 Abington     Abington High            9-12          23.3%          \r\n 6 Acushnet     Acushnet Elementary Sch~ PK-4          26.3%          \r\n 7 Acushnet     Albert F Ford Middle Sc~ 5-8           25.1%          \r\n 8 Agawam       Agawam Early Childhood ~ PK            33.1%          \r\n 9 Agawam       Clifford M Granger       K-4           37.9%          \r\n10 Agawam       Benjamin J Phelps        K-4           28.7%          \r\n# ... with 3,593 more rows, and 2 more variables:\r\n#   `Teachers-Per-100-Students` <chr>, `Avg-Teacher-Salary` <chr>\r\n\r\n# Convert the numbers from character to numeric\r\n\r\npreliminary_school_data_g12$`Avg-Teacher-Salary`         <-          parse_number(preliminary_school_data_g12$`Avg-Teacher-Salary`) \r\npreliminary_school_data_g12$`Teachers-Per-100-Students`  <-  parse_number(preliminary_school_data_g12$`Teachers-Per-100-Students`) \r\npreliminary_school_data_g12$`%-Econ-Disadv`              <-  parse_number(preliminary_school_data_g12$`%-Econ-Disadv`) \r\npreliminary_school_data_g12\r\n\r\n\r\n# A tibble: 3,603 x 6\r\n   District...2 `School-Name`            `Grade-Level` `%-Econ-Disadv`\r\n   <chr>        <chr>                    <chr>                   <dbl>\r\n 1 Abington     Abington Early Educatio~ PK                       30.7\r\n 2 Abington     Woodsdale Elementary Sc~ 3-4                      23.9\r\n 3 Abington     Beaver Brook Elementary  K-2                      22.7\r\n 4 Abington     Abington Middle School   5-8                      25.9\r\n 5 Abington     Abington High            9-12                     23.3\r\n 6 Acushnet     Acushnet Elementary Sch~ PK-4                     26.3\r\n 7 Acushnet     Albert F Ford Middle Sc~ 5-8                      25.1\r\n 8 Agawam       Agawam Early Childhood ~ PK                       33.1\r\n 9 Agawam       Clifford M Granger       K-4                      37.9\r\n10 Agawam       Benjamin J Phelps        K-4                      28.7\r\n# ... with 3,593 more rows, and 2 more variables:\r\n#   `Teachers-Per-100-Students` <dbl>, `Avg-Teacher-Salary` <dbl>\r\n\r\n# Globally replace any value that wasn't provided (was a non-numeric), replace it with the median of all the other values in that instance. \r\n\r\npreliminary_school_data_g12 <- preliminary_school_data_g12 %>%\r\n    mutate_if(is.numeric, function(x) ifelse(is.na(x), median(x, na.rm = T), x))\r\n\r\npreliminary_school_data_g12\r\n\r\n\r\n# A tibble: 3,603 x 6\r\n   District...2 `School-Name`            `Grade-Level` `%-Econ-Disadv`\r\n   <chr>        <chr>                    <chr>                   <dbl>\r\n 1 Abington     Abington Early Educatio~ PK                       30.7\r\n 2 Abington     Woodsdale Elementary Sc~ 3-4                      23.9\r\n 3 Abington     Beaver Brook Elementary  K-2                      22.7\r\n 4 Abington     Abington Middle School   5-8                      25.9\r\n 5 Abington     Abington High            9-12                     23.3\r\n 6 Acushnet     Acushnet Elementary Sch~ PK-4                     26.3\r\n 7 Acushnet     Albert F Ford Middle Sc~ 5-8                      25.1\r\n 8 Agawam       Agawam Early Childhood ~ PK                       33.1\r\n 9 Agawam       Clifford M Granger       K-4                      37.9\r\n10 Agawam       Benjamin J Phelps        K-4                      28.7\r\n# ... with 3,593 more rows, and 2 more variables:\r\n#   `Teachers-Per-100-Students` <dbl>, `Avg-Teacher-Salary` <dbl>\r\n\r\nDescriptive Statistics:\r\nEstablishing some simple descriptive statistics for:\r\nAverage Salary\r\nTeacher to Student Ratio\r\n% Economically Disadvantaged\r\n\r\n\r\nmedian(preliminary_school_data_g12$`Avg-Teacher-Salary`,na.rm = T)\r\n\r\n\r\n[1] 79185\r\n\r\nmean(preliminary_school_data_g12$`Avg-Teacher-Salary`, na.rm = T)\r\n\r\n\r\n[1] 79050.83\r\n\r\nsd(preliminary_school_data_g12$`Avg-Teacher-Salary`, na.rm = T)\r\n\r\n\r\n[1] 8414.818\r\n\r\nmedian(preliminary_school_data_g12$`Teachers-Per-100-Students`,na.rm = T)\r\n\r\n\r\n[1] 7.9\r\n\r\nmean(preliminary_school_data_g12$`Teachers-Per-100-Students`, na.rm = T)\r\n\r\n\r\n[1] 8.115626\r\n\r\nsd(preliminary_school_data_g12$`Teachers-Per-100-Students`, na.rm = T)\r\n\r\n\r\n[1] 2.019188\r\n\r\nmedian(preliminary_school_data_g12$`%-Econ-Disadv`,na.rm = T)\r\n\r\n\r\n[1] 28.9\r\n\r\nmean(preliminary_school_data_g12$`%-Econ-Disadv`, na.rm = T)\r\n\r\n\r\n[1] 31.6776\r\n\r\nsd(preliminary_school_data_g12$`%-Econ-Disadv`, na.rm = T)\r\n\r\n\r\n[1] 17.14309\r\n\r\nGrouping and Looking for Trends:\r\nAttempt to determine if there is any correlation between the salaries given, the % of disadvantaged children and the teacher/student ratios.\r\nGraph 1: It would appear that, when looking at data grouped by grade, the teacher salary peaks when the ratio of student to teacher is around 7-8 teachers per 100 students.\r\nGraph 2: It would appear that, when looking at the data grouped by district, the salaries decrease dramatically as the ratio of teachers to students increases. That’s a bit surprising because I would think if the community has a greater number of teachers/100 students, they would also be a wealthier community.\r\nGraph 3: It would appear that, when looking at the data grouped by district, the teacher salaries are higher when the % of economic disadvantaged students is lower. This would make sense since the communities with the higher number of disadvantaged students are not communities of wealth. This appears to negatively impact their ability to compensate their teachers.\r\nGraph 4: It would appear that, when looking at the data grouped by district, the student to teacher ratio does not appear to correlate to the % of disadvantaged students.\r\nGraph 5: Not sure what this graph tells us.\r\n\r\n\r\n# Group the dataset by grade level and summarize that data by the mean of teacher salaries, median for % econ disadvanaged, and the mean teacher/student ratio\r\n\r\n\r\nby_grade <- preliminary_school_data_g12 %>%\r\n  group_by(`Grade-Level`)\r\nsummary_data <- summarize(by_grade, \r\n                          ratio_teach_stud = mean(`Teachers-Per-100-Students`),\r\n                          avg_dis= median(`%-Econ-Disadv`),\r\n                          avg_salary = mean(`Avg-Teacher-Salary`))\r\nsummary_data\r\n\r\n\r\n# A tibble: 64 x 4\r\n   `Grade-Level` ratio_teach_stud avg_dis avg_salary\r\n   <chr>                    <dbl>   <dbl>      <dbl>\r\n 1 1-12                     13.6     70.6     77074.\r\n 2 1-2                       9.6     11.5     89152 \r\n 3 1-3                       7.72    13.6     77828.\r\n 4 1-4                       6.98    67.8     74716.\r\n 5 1-5                       8.65    36.7     80028.\r\n 6 1-6                       7       35.8     77110 \r\n 7 11-12                     9.9     60.1     83307 \r\n 8 12                       16.2     60.2     63876.\r\n 9 2-11                     25.1     79.3     74759 \r\n10 2-12                     15.6     68.7     85217 \r\n# ... with 54 more rows\r\n\r\n# Graph 1: Attempt to plot that to find anything interesting\r\n\r\nggplot(data = summary_data, mapping = aes(x = ratio_teach_stud, y = avg_salary)) +\r\n  geom_point(aes(size = avg_dis), alpha = 1/3) +\r\n  geom_smooth(se = FALSE)\r\n\r\n\r\n\r\n# Do the same by district instead of by grade\r\n\r\nby_district <- preliminary_school_data_g12 %>%\r\n  group_by(`District...2`)\r\nsummary_dist <- summarize(by_district, \r\n                          ratio_med = median(`Teachers-Per-100-Students`),\r\n                          avg_dis_2 = median(`%-Econ-Disadv`),\r\n                          avg_salary_2 = mean(`Avg-Teacher-Salary`)) \r\n\r\n# Graph 2: \r\n\r\nggplot(data = summary_dist, mapping = aes(x = `ratio_med`, y = avg_salary_2)) +\r\n  geom_point(aes(size = ratio_med), alpha = 1/3) +\r\n  geom_smooth(se = FALSE)\r\n\r\n\r\n\r\n# Graph 3:\r\nggplot(data = summary_dist) + \r\n  geom_quantile(mapping = aes(x = `avg_dis_2`, y = avg_salary_2), alpha = 1/3)  \r\n\r\n\r\n\r\n# Graph 4: \r\nggplot(data = summary_dist) + \r\n  geom_jitter(mapping = aes(x = log(`avg_dis_2`), y = log(`ratio_med`)), alpha = 1/3)\r\n\r\n\r\n\r\n# Graph 5: \r\nggplot(data = summary_dist) + \r\n  geom_violin(mapping = aes(x = `avg_dis_2`, y = avg_salary_2), alpha = 1/3) \r\n\r\n\r\n\r\npreliminary_school_data_g12\r\n\r\n\r\n# A tibble: 3,603 x 6\r\n   District...2 `School-Name`            `Grade-Level` `%-Econ-Disadv`\r\n   <chr>        <chr>                    <chr>                   <dbl>\r\n 1 Abington     Abington Early Educatio~ PK                       30.7\r\n 2 Abington     Woodsdale Elementary Sc~ 3-4                      23.9\r\n 3 Abington     Beaver Brook Elementary  K-2                      22.7\r\n 4 Abington     Abington Middle School   5-8                      25.9\r\n 5 Abington     Abington High            9-12                     23.3\r\n 6 Acushnet     Acushnet Elementary Sch~ PK-4                     26.3\r\n 7 Acushnet     Albert F Ford Middle Sc~ 5-8                      25.1\r\n 8 Agawam       Agawam Early Childhood ~ PK                       33.1\r\n 9 Agawam       Clifford M Granger       K-4                      37.9\r\n10 Agawam       Benjamin J Phelps        K-4                      28.7\r\n# ... with 3,593 more rows, and 2 more variables:\r\n#   `Teachers-Per-100-Students` <dbl>, `Avg-Teacher-Salary` <dbl>\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomtlamkin869562/distill-preview.png",
    "last_modified": "2022-02-23T19:18:40-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomamarkowitzhw4/",
    "title": "HW4",
    "description": "Identifying data for Final Project, and Generating Visualuals",
    "author": [
      {
        "name": "Ari Markowitz",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\nOverview:\nThis analysis will combine country level data to see how cultural indicators drive COVID-19 vaccination rates around the world, and how different health systems, and strength of those impact that relationship. I will combine three different datasets at the country level:\n1: Cultural indicators from Geert Hofstede’s Cultural Dimensions Theory Data https://data.world/adamhelsinger/geerthofstedeculturaldimension\n2: National Vaccination Rates from Open-Source Github Repo: https://github.com/owid/covid-19-data\n3: National Health System Classification Data - TBD\n4: Global Country Indicators (Income, Income Per Capita, Government Type (indexes?), Population etc…) - TBD\nRead In Geert Hofstede’s Cultural Dimensions Theory Data From Data.World\n\n\nculture_indices <- read.csv2(\"https://query.data.world/s/c4dbzx65xq3bnkf65gnutajtb2566a\", header=TRUE, stringsAsFactors=FALSE) %>%\n      na_if(\"#NULL!\") %>%\n      mutate(country  = replace(country, country == \"U.S.A.\", \"United States\"))\nhead(df)\n\n\n                                              \n1 function (x, df1, df2, ncp, log = FALSE)    \n2 {                                           \n3     if (missing(ncp))                       \n4         .Call(C_df, x, df1, df2, log)       \n5     else .Call(C_dnf, x, df1, df2, ncp, log)\n6 }                                           \n\nRead in National Vaccination Rates from Open Source Github Repo\n\n\n\"https://github.com/owid/covid-19-data/tree/master/public/data/vaccinations/country_data\" %>%\n            read_html() %>%\n            html_nodes(xpath = '//*[@role=\"rowheader\"]') %>%\n            html_nodes('span a') %>%\n            html_attr('href') %>%\n            sub('blob/', '', .) %>%\n            paste0('https://raw.githubusercontent.com', .) %>%\n            purrr::map_df(read.csv)  ->  vaccine_data\n\nhead(vaccine_data)\n\n\n     location       date\n1 Afghanistan 2021-02-22\n2 Afghanistan 2021-02-28\n3 Afghanistan 2021-03-16\n4 Afghanistan 2021-04-07\n5 Afghanistan 2021-04-22\n6 Afghanistan 2021-05-11\n                                                 vaccine\n1                                     Oxford/AstraZeneca\n2                                     Oxford/AstraZeneca\n3                                     Oxford/AstraZeneca\n4                                     Oxford/AstraZeneca\n5                                     Oxford/AstraZeneca\n6 Oxford/AstraZeneca, Pfizer/BioNTech, Sinopharm/Beijing\n                                                                                                    source_url\n1                                                                 https://tolonews.com/index.php/health-170225\n2                                                                 https://tolonews.com/index.php/health-170355\n3                                      http://www.xinhuanet.com/english/asiapacific/2021-03/16/c_139814668.htm\n4                                      http://www.xinhuanet.com/english/asiapacific/2021-04/07/c_139864755.htm\n5 https://reliefweb.int/report/afghanistan/afghanistan-strategic-situation-report-covid-19-no-95-22-april-2021\n6                                                                                     https://covid19.who.int/\n  total_vaccinations people_vaccinated people_fully_vaccinated\n1                  0                 0                      NA\n2               8200              8200                      NA\n3              54000             54000                      NA\n4             120000            120000                      NA\n5             240000            240000                      NA\n6             504502            448878                   55624\n  total_boosters people_partly_vaccinated\n1             NA                       NA\n2             NA                       NA\n3             NA                       NA\n4             NA                       NA\n5             NA                       NA\n6             NA                       NA\n\nRead in Country Level Data from the world bank\nUsed “wbstat” package for ease of access to World Bank API - https://cran.r-project.org/web/packages/wbstats/vignettes/wbstats.html\n\n\nmy_indicators = c(\"pop\" = \"SP.POP.TOTL\",\n                  \"gdp\" = \"NY.GDP.MKTP.CD\")\n\npop_gdp <- wb_data(my_indicators, start_date = 2020, end_date = 2022) %>% mutate(gdp_per_capita = gdp/pop)\n\n\n\nHealthcare System Data\nGHED_PVT-DCHE_SHA2011 - Domestic private health expenditure (PVT-D) as percentage of current health expenditure (CHE) (%)\nGHED_GGHE-DCHE_SHA2011 - Domestic general government health expenditure (GGHE-D) as percentage of current health expenditure (CHE) (%)\nGHED_GGHE-DGGE_SHA2011 - Domestic general government health expenditure (GGHE-D) as percentage of general government expenditure (GGE) (%)\nGHED_PVT-D_pc_PPP_SHA2011 - Domestic private health expenditure (PVT-D) per capita in PPP int$\nGHED_GGHE-D_pc_PPP_SHA2011 - Domestic general government health expenditure (GGHE-D) per capita in PPP int$\nGHED_CHEGDP_SHA2011 - Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)\nGHED_EXT_pc_PPP_SHA2011 - External health expenditure (EXT) per capita in PPP int$\nGDO_q9x5_1 - Density of outpatient health centres (per 100,000 population)\nDEVICES02 - Total density per 100 000 population: Health centres\n\n\nwho_health_indicators<-fromJSON(\"https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%27health%27)\")$value\n\nHealth_System_Data <- c('GHED_PVT-DCHE_SHA2011','GHED_GGHE-DCHE_SHA2011','GHED_GGHE-DGGE_SHA2011','GHED_PVT-D_pc_PPP_SHA2011','GHED_GGHE-D_pc_PPP_SHA2011','GHED_CHEGDP_SHA2011','GHED_EXT_pc_PPP_SHA2011','GDO_q9x5_1','DEVICES02') %>%     \n            paste0('https://ghoapi.azureedge.net/api/', .) %>%\n            purrr::map_df({function(x) fromJSON(x)$value}) %>%\n            left_join(who_health_indicators %>% \n                                select(IndicatorCode,IndicatorName), by = 'IndicatorCode') %>%\n            left_join(fromJSON('https://ghoapi.azureedge.net/api/DIMENSION/COUNTRY/DimensionValues')$value[c(\"Code\",\"Title\")], by = c('SpatialDim'='Code')) %>%\n            rename(country = Title, year = TimeDim, who_indicator = IndicatorName, who_indicator_code = IndicatorCode, who_indicator_value = Value ) %>%\n            arrange(desc(year))  %>%\n            distinct(country, who_indicator, who_indicator_code,.keep_all = TRUE) %>% \n            select(country, who_indicator, who_indicator_code,who_indicator_value)\n\n\n\nJoin Datasets\n\n\n\ndf <- vaccine_data %>% \n            select(location, date, people_vaccinated, people_fully_vaccinated, people_partly_vaccinated) %>%\n            rename(country = location) %>%\n            # arrange(desc(date)) %>%\n            # distinct(country, .keep_all= TRUE) %>%\n            full_join(culture_indices %>%\n                                select(country, pdi, idv, mas, uai, ltowvs, ivr),\n                      by='country') %>%\n            full_join(pop_gdp %>%\n                            select(country, gdp, pop, gdp_per_capita),\n                      by = 'country') %>%\n            mutate(pop_vax_rate = people_vaccinated/pop, pop_part_vax_rate = people_partly_vaccinated/pop, pop_full_vax_rate = people_fully_vaccinated/pop, date = as.Date(date), year = as.integer(format(as.Date(date), format = \"%Y\")),gdp_quartile = ntile(gdp_per_capita, 4))  %>%\n            left_join(Health_System_Data, by = 'country') %>%\n            pivot_longer(c(pdi, idv, mas, uai, ltowvs, ivr),names_to = 'culture_index', values_to = \"culture_index_value\") %>%\n            mutate(culture_index_value = as.numeric(culture_index_value))\n          \nprint(head(df))\n\n\n# A tibble: 6 × 18\n  country     date       people_vaccinated people_fully_vaccinated\n  <chr>       <date>                 <int>                   <int>\n1 Afghanistan 2021-02-22                 0                      NA\n2 Afghanistan 2021-02-22                 0                      NA\n3 Afghanistan 2021-02-22                 0                      NA\n4 Afghanistan 2021-02-22                 0                      NA\n5 Afghanistan 2021-02-22                 0                      NA\n6 Afghanistan 2021-02-22                 0                      NA\n# … with 14 more variables: people_partly_vaccinated <int>,\n#   gdp <dbl>, pop <dbl>, gdp_per_capita <dbl>, pop_vax_rate <dbl>,\n#   pop_part_vax_rate <dbl>, pop_full_vax_rate <dbl>, year <int>,\n#   gdp_quartile <int>, who_indicator <chr>,\n#   who_indicator_code <chr>, who_indicator_value <chr>,\n#   culture_index <chr>, culture_index_value <dbl>\n\nDescriptive Statistics of data from most recent date\n\n\ndf %>% \n              arrange(desc(date))  %>%\n              distinct(country, .keep_all = TRUE) %>%\n              summary()\n\n\n   country               date            people_vaccinated  \n Length:278         Min.   :2021-02-01   Min.   :       47  \n Class :character   1st Qu.:2022-02-17   1st Qu.:   265860  \n Mode  :character   Median :2022-02-19   Median :  2270897  \n                    Mean   :2022-02-09   Mean   : 18811059  \n                    3rd Qu.:2022-02-21   3rd Qu.:  9643354  \n                    Max.   :2022-02-21   Max.   :962967313  \n                    NA's   :54           NA's   :89         \n people_fully_vaccinated people_partly_vaccinated      gdp           \n Min.   :       47       Min.   : NA              Min.   :4.886e+07  \n 1st Qu.:   234910       1st Qu.: NA              1st Qu.:7.780e+09  \n Median :  2038507       Median : NA              Median :3.119e+10  \n Mean   : 16083651       Mean   :NaN              Mean   :4.310e+11  \n 3rd Qu.:  8042658       3rd Qu.: NA              3rd Qu.:2.031e+11  \n Max.   :774808452       Max.   : NA              Max.   :2.095e+13  \n NA's   :85              NA's   :278              NA's   :84         \n      pop            gdp_per_capita    pop_vax_rate    \n Min.   :1.083e+04   Min.   :   239   Min.   :0.00075  \n 1st Qu.:7.828e+05   1st Qu.:  2170   1st Qu.:0.44518  \n Median :6.725e+06   Median :  5467   Median :0.67689  \n Mean   :3.581e+07   Mean   : 15312   Mean   :0.59411  \n 3rd Qu.:2.571e+07   3rd Qu.: 17700   3rd Qu.:0.77034  \n Max.   :1.411e+09   Max.   :173688   Max.   :1.23787  \n NA's   :62          NA's   :84       NA's   :128      \n pop_part_vax_rate pop_full_vax_rate      year       gdp_quartile  \n Min.   : NA       Min.   :0.00071   Min.   :2021   Min.   :1.000  \n 1st Qu.: NA       1st Qu.:0.38049   1st Qu.:2022   1st Qu.:1.000  \n Median : NA       Median :0.58409   Median :2022   Median :2.000  \n Mean   :NaN       Mean   :0.52879   Mean   :2022   Mean   :2.113  \n 3rd Qu.: NA       3rd Qu.:0.71747   3rd Qu.:2022   3rd Qu.:3.000  \n Max.   : NA       Max.   :1.21219   Max.   :2022   Max.   :4.000  \n NA's   :278       NA's   :124       NA's   :54     NA's   :84     \n who_indicator      who_indicator_code who_indicator_value\n Length:278         Length:278         Length:278         \n Class :character   Class :character   Class :character   \n Mode  :character   Mode  :character   Mode  :character   \n                                                          \n                                                          \n                                                          \n                                                          \n culture_index      culture_index_value\n Length:278         Min.   : 11.00     \n Class :character   1st Qu.: 42.50     \n Mode  :character   Median : 62.00     \n                    Mean   : 59.33     \n                    3rd Qu.: 72.50     \n                    Max.   :104.00     \n                    NA's   :200        \n\nGraph Vaccinations Over Time by Country Wealth Quartile\n\n\n# Keep only 3 names\nplot_df <- df %>%\n  arrange(gdp_per_capita) %>%\n  filter(!is.na(culture_index_value) & !is.na(pop_vax_rate)) %>%\n  select(date,pop_vax_rate, country,gdp_quartile) %>%\n  distinct()\n\np <- vector('list', 4)\ni <- 1\nquartiles <- c('1st Quartile (Poorest)','2nd Quartile','3rd Quartile','4th Quartile (Wealthiest)')\ncolors <- c('YlOrRd','BuGn','BuPu','PuRd')\nfor (var in unique(plot_df$gdp_quartile)) {\n    dev.new()\n    p[[i]] <- plot_df %>% \n              filter(gdp_quartile == var) %>% \n              ggplot(\n                aes(x=date, y=pop_vax_rate, group=country, color=country))+\n                ggtitle(quartiles[i]) +\n                theme(legend.position = \"none\") +\n                geom_line() +\n                scale_colour_brewer(palette = colors[i] ) +\n                geom_hline(yintercept = .7) +\n                ylim(0,1) +\n                xlim(as.Date(c(min(plot_df$date), max(plot_df$date)), format=\"%d/%m/%Y\") )\n    i <- i+1\n}\n\ngrid.arrange(p[[1]], p[[2]],p[[3]],p[[4]], nrow = 2,top = textGrob(\"Vaccination Progress by Country Wealth\",gp=gpar(fontsize=20,font=3)))\n\n\n\nGRID NOT PRINTING???\nThis graph shows the relationship between vaccination rate progress and national wealth, measured by GDP per capita. A reference line is included here to denote a 70% vaccination rate (“heard immunity”, more or less(. We can clearly see that the wealthiest nations achieved heard immunity much earlier than all other groups, while many 1st, 2nd and 3rd quartile countries still have not achieved heard immunity. This graph is unable to capture the impact of other confounding factors that may be impacting a nations population vaccination rate progress. Furthermore, we are unable to say if the differences we we see between income groups in vaccination progress is statistically significant.\nScatterplot between Current Vaccination Rates and National Wealth.\n\n\ncorr_df <- df %>% \n              arrange(desc(date))  %>%\n              distinct(country, .keep_all = TRUE) %>%\n              select(country, pop_vax_rate, gdp_per_capita) %>% \n              na.omit()\n\n\np <- corr_df %>% \n     ggplot() +\n    ggtitle(\"National Vaccination Rates by GDP Per Capita\") +\n     geom_point(aes(x = gdp_per_capita, y = pop_vax_rate, color = country, text = paste(\"country:\", country))) + \n     stat_smooth(aes(x = gdp_per_capita, y = pop_vax_rate), method = \"lm\", col = \"red\", se = FALSE) +\n     scale_x_log10()\n\n\nfig <- ggplotly(p)\n\nfig\n\n\n\n{\"x\":{\"data\":[{\"x\":[2.71327869584904],\"y\":[0.12334263101528],\"text\":\"gdp_per_capita:    516.7479<br />pop_vax_rate: 0.1233426310<br />country: Afghanistan<br />country: Afghanistan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"Afghanistan\",\"legendgroup\":\"Afghanistan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.7198524844048],\"y\":[0.446102060686961],\"text\":\"gdp_per_capita:   5246.2923<br />pop_vax_rate: 0.4461020607<br />country: Albania<br />country: Albania\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(246,120,102,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(246,120,102,1)\"}},\"hoveron\":\"points\",\"name\":\"Albania\",\"legendgroup\":\"Albania\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.14590290361398],\"y\":[0.648353892655829],\"text\":\"gdp_per_capita:  13992.7445<br />pop_vax_rate: 0.6483538927<br />country: Antigua and Barbuda<br />country: Antigua and Barbuda\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(244,122,94,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(244,122,94,1)\"}},\"hoveron\":\"points\",\"name\":\"Antigua and Barbuda\",\"legendgroup\":\"Antigua and Barbuda\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.93343756755538],\"y\":[0.885976992232787],\"text\":\"gdp_per_capita:   8579.0178<br />pop_vax_rate: 0.8859769922<br />country: Argentina<br />country: Argentina\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(243,124,87,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(243,124,87,1)\"}},\"hoveron\":\"points\",\"name\":\"Argentina\",\"legendgroup\":\"Argentina\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.63002269113048],\"y\":[0.360179452584575],\"text\":\"gdp_per_capita:   4266.0181<br />pop_vax_rate: 0.3601794526<br />country: Armenia<br />country: Armenia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(241,126,78,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(241,126,78,1)\"}},\"hoveron\":\"points\",\"name\":\"Armenia\",\"legendgroup\":\"Armenia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.71343041600832],\"y\":[0.856161945628537],\"text\":\"gdp_per_capita:  51692.8427<br />pop_vax_rate: 0.8561619456<br />country: Australia<br />country: Australia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(238,128,69,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(238,128,69,1)\"}},\"hoveron\":\"points\",\"name\":\"Australia\",\"legendgroup\":\"Australia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.68651830852535],\"y\":[0.760506234857223],\"text\":\"gdp_per_capita:  48586.8013<br />pop_vax_rate: 0.7605062349<br />country: Austria<br />country: Austria\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(236,130,59,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(236,130,59,1)\"}},\"hoveron\":\"points\",\"name\":\"Austria\",\"legendgroup\":\"Austria\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.62545727518532],\"y\":[0.523167511813244],\"text\":\"gdp_per_capita:   4221.4075<br />pop_vax_rate: 0.5231675118<br />country: Azerbaijan<br />country: Azerbaijan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(234,131,47,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(234,131,47,1)\"}},\"hoveron\":\"points\",\"name\":\"Azerbaijan\",\"legendgroup\":\"Azerbaijan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.30984200047059],\"y\":[0.721272485679511],\"text\":\"gdp_per_capita:  20409.9528<br />pop_vax_rate: 0.7212724857<br />country: Bahrain<br />country: Bahrain\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(231,133,32,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(231,133,32,1)\"}},\"hoveron\":\"points\",\"name\":\"Bahrain\",\"legendgroup\":\"Bahrain\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.29261349678311],\"y\":[0.622405804993513],\"text\":\"gdp_per_capita:   1961.6137<br />pop_vax_rate: 0.6224058050<br />country: Bangladesh<br />country: Bangladesh\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(229,135,2,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(229,135,2,1)\"}},\"hoveron\":\"points\",\"name\":\"Bangladesh\",\"legendgroup\":\"Bangladesh\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.18678277228642],\"y\":[0.556162591214841],\"text\":\"gdp_per_capita:  15373.8547<br />pop_vax_rate: 0.5561625912<br />country: Barbados<br />country: Barbados\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(226,137,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(226,137,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Barbados\",\"legendgroup\":\"Barbados\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.80781582003523],\"y\":[0.582182829933458],\"text\":\"gdp_per_capita:   6424.1522<br />pop_vax_rate: 0.5821828299<br />country: Belarus<br />country: Belarus\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(224,139,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(224,139,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Belarus\",\"legendgroup\":\"Belarus\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.65474766520135],\"y\":[0.796633297845266],\"text\":\"gdp_per_capita:  45159.3482<br />pop_vax_rate: 0.7966332978<br />country: Belgium<br />country: Belgium\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(221,141,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(221,141,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Belgium\",\"legendgroup\":\"Belgium\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.61438852045359],\"y\":[0.588391961189173],\"text\":\"gdp_per_capita:   4115.1770<br />pop_vax_rate: 0.5883919612<br />country: Belize<br />country: Belize\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(218,142,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(218,142,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Belize\",\"legendgroup\":\"Belize\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[5.02970625283399],\"y\":[0.734879426630988],\"text\":\"gdp_per_capita: 107079.4798<br />pop_vax_rate: 0.7348794266<br />country: Bermuda<br />country: Bermuda\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(215,144,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(215,144,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Bermuda\",\"legendgroup\":\"Bermuda\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.47723405921124],\"y\":[0.770947056292541],\"text\":\"gdp_per_capita:   3000.7793<br />pop_vax_rate: 0.7709470563<br />country: Bhutan<br />country: Bhutan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(212,146,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(212,146,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Bhutan\",\"legendgroup\":\"Bhutan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.49597422932001],\"y\":[0.588774344688084],\"text\":\"gdp_per_capita:   3133.0998<br />pop_vax_rate: 0.5887743447<br />country: Bolivia<br />country: Bolivia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(208,148,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(208,148,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Bolivia\",\"legendgroup\":\"Bolivia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.78388488459643],\"y\":[0.287548673119332],\"text\":\"gdp_per_capita:   6079.7383<br />pop_vax_rate: 0.2875486731<br />country: Bosnia and Herzegovina<br />country: Bosnia and Herzegovina\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(205,149,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(205,149,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Bosnia and Herzegovina\",\"legendgroup\":\"Bosnia and Herzegovina\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.8065123488352],\"y\":[0.590911816297241],\"text\":\"gdp_per_capita:   6404.8999<br />pop_vax_rate: 0.5909118163<br />country: Botswana<br />country: Botswana\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(202,151,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(202,151,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Botswana\",\"legendgroup\":\"Botswana\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.83230733683375],\"y\":[0.829916623450905],\"text\":\"gdp_per_capita:   6796.8445<br />pop_vax_rate: 0.8299166235<br />country: Brazil<br />country: Brazil\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(198,153,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(198,153,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Brazil\",\"legendgroup\":\"Brazil\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.9334532362321],\"y\":[0.100746830233995],\"text\":\"gdp_per_capita:    857.9327<br />pop_vax_rate: 0.1007468302<br />country: Burkina Faso<br />country: Burkina Faso\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(194,154,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(194,154,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Burkina Faso\",\"legendgroup\":\"Burkina Faso\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.37838104828079],\"y\":[0.000754281825558809],\"text\":\"gdp_per_capita:    238.9907<br />pop_vax_rate: 0.0007542818<br />country: Burundi<br />country: Burundi\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(191,156,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(191,156,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Burundi\",\"legendgroup\":\"Burundi\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.18855425519798],\"y\":[0.860963871520562],\"text\":\"gdp_per_capita:   1543.6693<br />pop_vax_rate: 0.8609638715<br />country: Cambodia<br />country: Cambodia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(187,157,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(187,157,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Cambodia\",\"legendgroup\":\"Cambodia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.63643421467104],\"y\":[0.855733964881367],\"text\":\"gdp_per_capita:  43294.6482<br />pop_vax_rate: 0.8557339649<br />country: Canada<br />country: Canada\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(183,159,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(183,159,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Canada\",\"legendgroup\":\"Canada\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.92984037948087],\"y\":[0.906740718198418],\"text\":\"gdp_per_capita:  85082.5269<br />pop_vax_rate: 0.9067407182<br />country: Cayman Islands<br />country: Cayman Islands\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(178,161,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(178,161,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Cayman Islands\",\"legendgroup\":\"Cayman Islands\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.6926670605095],\"y\":[0.154183931140321],\"text\":\"gdp_per_capita:    492.7959<br />pop_vax_rate: 0.1541839311<br />country: Central African Republic<br />country: Central African Republic\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(174,162,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(174,162,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Central African Republic\",\"legendgroup\":\"Central African Republic\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.81906334330567],\"y\":[0.0165002633956617],\"text\":\"gdp_per_capita:    659.2700<br />pop_vax_rate: 0.0165002634<br />country: Chad<br />country: Chad\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(169,163,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(169,163,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Chad\",\"legendgroup\":\"Chad\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.12161578371917],\"y\":[0.926794899553567],\"text\":\"gdp_per_capita:  13231.7042<br />pop_vax_rate: 0.9267948996<br />country: Chile<br />country: Chile\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(165,165,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(165,165,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Chile\",\"legendgroup\":\"Chile\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.72709828198258],\"y\":[0.80864245037683],\"text\":\"gdp_per_capita:   5334.5560<br />pop_vax_rate: 0.8086424504<br />country: Colombia<br />country: Colombia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(160,166,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(160,166,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Colombia\",\"legendgroup\":\"Colombia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.15249068686966],\"y\":[0.392253865305113],\"text\":\"gdp_per_capita:   1420.6617<br />pop_vax_rate: 0.3922538653<br />country: Comoros<br />country: Comoros\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(155,168,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(155,168,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Comoros\",\"legendgroup\":\"Comoros\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.08424924205798],\"y\":[0.80871354665404],\"text\":\"gdp_per_capita:  12140.8542<br />pop_vax_rate: 0.8087135467<br />country: Costa Rica<br />country: Costa Rica\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(149,169,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(149,169,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Costa Rica\",\"legendgroup\":\"Costa Rica\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.36655811945889],\"y\":[0.22035432567141],\"text\":\"gdp_per_capita:   2325.7237<br />pop_vax_rate: 0.2203543257<br />country: Cote d'Ivoire<br />country: Cote d'Ivoire\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(144,170,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(144,170,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Cote d'Ivoire\",\"legendgroup\":\"Cote d'Ivoire\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.15027008564191],\"y\":[0.569426270013837],\"text\":\"gdp_per_capita:  14134.1627<br />pop_vax_rate: 0.5694262700<br />country: Croatia<br />country: Croatia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(138,172,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(138,172,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Croatia\",\"legendgroup\":\"Croatia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.97670996276981],\"y\":[0.935804745212515],\"text\":\"gdp_per_capita:   9477.8529<br />pop_vax_rate: 0.9358047452<br />country: Cuba<br />country: Cuba\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(132,173,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(132,173,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Cuba\",\"legendgroup\":\"Cuba\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.22390393711195],\"y\":[0.687983020888436],\"text\":\"gdp_per_capita:  16745.7243<br />pop_vax_rate: 0.6879830209<br />country: Curacao<br />country: Curacao\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(125,174,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(125,174,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Curacao\",\"legendgroup\":\"Curacao\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.30932117072888],\"y\":[0.569092425546295],\"text\":\"gdp_per_capita:  20385.4907<br />pop_vax_rate: 0.5690924255<br />country: Cyprus<br />country: Cyprus\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(118,175,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(118,175,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Cyprus\",\"legendgroup\":\"Cyprus\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.78578038771763],\"y\":[0.830908645670922],\"text\":\"gdp_per_capita:  61063.3164<br />pop_vax_rate: 0.8309086457<br />country: Denmark<br />country: Denmark\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(111,176,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(111,176,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Denmark\",\"legendgroup\":\"Denmark\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.84533739571911],\"y\":[0.444875053826173],\"text\":\"gdp_per_capita:   7003.8590<br />pop_vax_rate: 0.4448750538<br />country: Dominica<br />country: Dominica\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(103,177,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(103,177,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Dominica\",\"legendgroup\":\"Dominica\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.86142668468167],\"y\":[0.65236648480665],\"text\":\"gdp_per_capita:   7268.1969<br />pop_vax_rate: 0.6523664848<br />country: Dominican Republic<br />country: Dominican Republic\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(94,178,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(94,178,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Dominican Republic\",\"legendgroup\":\"Dominican Republic\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.74821824160234],\"y\":[0.835462725853678],\"text\":\"gdp_per_capita:   5600.3896<br />pop_vax_rate: 0.8354627259<br />country: Ecuador<br />country: Ecuador\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(84,180,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(84,180,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Ecuador\",\"legendgroup\":\"Ecuador\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.57962773931599],\"y\":[0.702137198646789],\"text\":\"gdp_per_capita:   3798.6365<br />pop_vax_rate: 0.7021371986<br />country: El Salvador<br />country: El Salvador\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(73,181,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(73,181,0,1)\"}},\"hoveron\":\"points\",\"name\":\"El Salvador\",\"legendgroup\":\"El Salvador\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.85389516314705],\"y\":[0.179242115917134],\"text\":\"gdp_per_capita:   7143.2387<br />pop_vax_rate: 0.1792421159<br />country: Equatorial Guinea<br />country: Equatorial Guinea\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(59,182,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(59,182,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Equatorial Guinea\",\"legendgroup\":\"Equatorial Guinea\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.36223787010754],\"y\":[0.643712478128284],\"text\":\"gdp_per_capita:  23027.0270<br />pop_vax_rate: 0.6437124781<br />country: Estonia<br />country: Estonia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(40,183,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(40,183,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Estonia\",\"legendgroup\":\"Estonia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.97143379048687],\"y\":[0.128198309546424],\"text\":\"gdp_per_capita:    936.3405<br />pop_vax_rate: 0.1281983095<br />country: Ethiopia<br />country: Ethiopia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,183,10,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,183,10,1)\"}},\"hoveron\":\"points\",\"name\":\"Ethiopia\",\"legendgroup\":\"Ethiopia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.70394721881305],\"y\":[0.744004087260331],\"text\":\"gdp_per_capita:   5057.6319<br />pop_vax_rate: 0.7440040873<br />country: Fiji<br />country: Fiji\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,184,34,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,184,34,1)\"}},\"hoveron\":\"points\",\"name\":\"Fiji\",\"legendgroup\":\"Fiji\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.68792996894166],\"y\":[0.80795354094106],\"text\":\"gdp_per_capita:  48744.9881<br />pop_vax_rate: 0.8079535409<br />country: Finland<br />country: Finland\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,185,49,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,185,49,1)\"}},\"hoveron\":\"points\",\"name\":\"Finland\",\"legendgroup\":\"Finland\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.59140256118556],\"y\":[0.80037600245087],\"text\":\"gdp_per_capita:  39030.3604<br />pop_vax_rate: 0.8003760025<br />country: France<br />country: France\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,186,60,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,186,60,1)\"}},\"hoveron\":\"points\",\"name\":\"France\",\"legendgroup\":\"France\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.63009117084053],\"y\":[0.419748519116855],\"text\":\"gdp_per_capita:   4266.6908<br />pop_vax_rate: 0.4197485191<br />country: Georgia<br />country: Georgia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,187,70,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,187,70,1)\"}},\"hoveron\":\"points\",\"name\":\"Georgia\",\"legendgroup\":\"Georgia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.66472120800486],\"y\":[0.76151740993945],\"text\":\"gdp_per_capita:  46208.4295<br />pop_vax_rate: 0.7615174099<br />country: Germany<br />country: Germany\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,187,78,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,187,78,1)\"}},\"hoveron\":\"points\",\"name\":\"Germany\",\"legendgroup\":\"Germany\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.24606852973831],\"y\":[0.731967069536055],\"text\":\"gdp_per_capita:  17622.5410<br />pop_vax_rate: 0.7319670695<br />country: Greece<br />country: Greece\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,188,86,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,188,86,1)\"}},\"hoveron\":\"points\",\"name\":\"Greece\",\"legendgroup\":\"Greece\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.96668376365725],\"y\":[0.380869008789627],\"text\":\"gdp_per_capita:   9261.5519<br />pop_vax_rate: 0.3808690088<br />country: Grenada<br />country: Grenada\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,189,94,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,189,94,1)\"}},\"hoveron\":\"points\",\"name\":\"Grenada\",\"legendgroup\":\"Grenada\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.66307301665416],\"y\":[0.420920561955918],\"text\":\"gdp_per_capita:   4603.3396<br />pop_vax_rate: 0.4209205620<br />country: Guatemala<br />country: Guatemala\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,189,101,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,189,101,1)\"}},\"hoveron\":\"points\",\"name\":\"Guatemala\",\"legendgroup\":\"Guatemala\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.07701809912762],\"y\":[0.268925450125152],\"text\":\"gdp_per_capita:   1194.0379<br />pop_vax_rate: 0.2689254501<br />country: Guinea<br />country: Guinea\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,190,108,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,190,108,1)\"}},\"hoveron\":\"points\",\"name\":\"Guinea\",\"legendgroup\":\"Guinea\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.86184503936935],\"y\":[0.261280753334099],\"text\":\"gdp_per_capita:    727.5202<br />pop_vax_rate: 0.2612807533<br />country: Guinea-Bissau<br />country: Guinea-Bissau\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,190,114,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,190,114,1)\"}},\"hoveron\":\"points\",\"name\":\"Guinea-Bissau\",\"legendgroup\":\"Guinea-Bissau\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.84235577836811],\"y\":[0.546662106720538],\"text\":\"gdp_per_capita:   6955.9392<br />pop_vax_rate: 0.5466621067<br />country: Guyana<br />country: Guyana\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,120,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,191,120,1)\"}},\"hoveron\":\"points\",\"name\":\"Guyana\",\"legendgroup\":\"Guyana\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.10461273536903],\"y\":[0.0131685652652792],\"text\":\"gdp_per_capita:   1272.3680<br />pop_vax_rate: 0.0131685653<br />country: Haiti<br />country: Haiti\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,127,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,191,127,1)\"}},\"hoveron\":\"points\",\"name\":\"Haiti\",\"legendgroup\":\"Haiti\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.37821840952435],\"y\":[0.535007947815805],\"text\":\"gdp_per_capita:   2389.0124<br />pop_vax_rate: 0.5350079478<br />country: Honduras<br />country: Honduras\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,132,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,132,1)\"}},\"hoveron\":\"points\",\"name\":\"Honduras\",\"legendgroup\":\"Honduras\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.2035969099484],\"y\":[0.655370904913278],\"text\":\"gdp_per_capita:  15980.7409<br />pop_vax_rate: 0.6553709049<br />country: Hungary<br />country: Hungary\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,138,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,138,1)\"}},\"hoveron\":\"points\",\"name\":\"Hungary\",\"legendgroup\":\"Hungary\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.7728362465415],\"y\":[0.843741556935253],\"text\":\"gdp_per_capita:  59270.1801<br />pop_vax_rate: 0.8437415569<br />country: Iceland<br />country: Iceland\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,144,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,144,1)\"}},\"hoveron\":\"points\",\"name\":\"Iceland\",\"legendgroup\":\"Iceland\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.28504120983961],\"y\":[0.697800183439272],\"text\":\"gdp_per_capita:   1927.7078<br />pop_vax_rate: 0.6978001834<br />country: India<br />country: India\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,149,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,149,1)\"}},\"hoveron\":\"points\",\"name\":\"India\",\"legendgroup\":\"India\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.58766477551802],\"y\":[0.693519928211246],\"text\":\"gdp_per_capita:   3869.5884<br />pop_vax_rate: 0.6935199282<br />country: Indonesia<br />country: Indonesia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,193,155,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,193,155,1)\"}},\"hoveron\":\"points\",\"name\":\"Indonesia\",\"legendgroup\":\"Indonesia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.61761494007344],\"y\":[0.241801486098466],\"text\":\"gdp_per_capita:   4145.8629<br />pop_vax_rate: 0.2418014861<br />country: Iraq<br />country: Iraq\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,193,160,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,193,160,1)\"}},\"hoveron\":\"points\",\"name\":\"Iraq\",\"legendgroup\":\"Iraq\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.9307848782973],\"y\":[0.810076793032007],\"text\":\"gdp_per_capita:  85267.7647<br />pop_vax_rate: 0.8100767930<br />country: Ireland<br />country: Ireland\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,193,165,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,193,165,1)\"}},\"hoveron\":\"points\",\"name\":\"Ireland\",\"legendgroup\":\"Ireland\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.64511701259871],\"y\":[0.726723518753594],\"text\":\"gdp_per_capita:  44168.9436<br />pop_vax_rate: 0.7267235188<br />country: Israel<br />country: Israel\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,193,170,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,193,170,1)\"}},\"hoveron\":\"points\",\"name\":\"Israel\",\"legendgroup\":\"Israel\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.50125404751023],\"y\":[0.849479203109419],\"text\":\"gdp_per_capita:  31714.2209<br />pop_vax_rate: 0.8494792031<br />country: Italy<br />country: Italy\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,175,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,175,1)\"}},\"hoveron\":\"points\",\"name\":\"Italy\",\"legendgroup\":\"Italy\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.66880791314497],\"y\":[0.257309548518301],\"text\":\"gdp_per_capita:   4664.5302<br />pop_vax_rate: 0.2573095485<br />country: Jamaica<br />country: Jamaica\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,180,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,180,1)\"}},\"hoveron\":\"points\",\"name\":\"Jamaica\",\"legendgroup\":\"Jamaica\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.60415315079748],\"y\":[0.807609960903007],\"text\":\"gdp_per_capita:  40193.2524<br />pop_vax_rate: 0.8076099609<br />country: Japan<br />country: Japan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,185,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,185,1)\"}},\"hoveron\":\"points\",\"name\":\"Japan\",\"legendgroup\":\"Japan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.63172432845742],\"y\":[0.455469688742877],\"text\":\"gdp_per_capita:   4282.7658<br />pop_vax_rate: 0.4554696887<br />country: Jordan<br />country: Jordan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,190,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,190,1)\"}},\"hoveron\":\"points\",\"name\":\"Jordan\",\"legendgroup\":\"Jordan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.96010118127455],\"y\":[0.498465483373537],\"text\":\"gdp_per_capita:   9122.2334<br />pop_vax_rate: 0.4984654834<br />country: Kazakhstan<br />country: Kazakhstan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,194,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,191,194,1)\"}},\"hoveron\":\"points\",\"name\":\"Kazakhstan\",\"legendgroup\":\"Kazakhstan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.27382985678744],\"y\":[0.158918270527214],\"text\":\"gdp_per_capita:   1878.5807<br />pop_vax_rate: 0.1589182705<br />country: Kenya<br />country: Kenya\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,199,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,191,199,1)\"}},\"hoveron\":\"points\",\"name\":\"Kenya\",\"legendgroup\":\"Kenya\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.21841478325763],\"y\":[0.624374194196541],\"text\":\"gdp_per_capita:   1653.5403<br />pop_vax_rate: 0.6243741942<br />country: Kiribati<br />country: Kiribati\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,190,203,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,190,203,1)\"}},\"hoveron\":\"points\",\"name\":\"Kiribati\",\"legendgroup\":\"Kiribati\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.63815346553033],\"y\":[0.50589057654201],\"text\":\"gdp_per_capita:   4346.6379<br />pop_vax_rate: 0.5058905765<br />country: Kosovo<br />country: Kosovo\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,190,207,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,190,207,1)\"}},\"hoveron\":\"points\",\"name\":\"Kosovo\",\"legendgroup\":\"Kosovo\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.39465774161552],\"y\":[0.79214356514586],\"text\":\"gdp_per_capita:  24811.7697<br />pop_vax_rate: 0.7921435651<br />country: Kuwait<br />country: Kuwait\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,189,211,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,189,211,1)\"}},\"hoveron\":\"points\",\"name\":\"Kuwait\",\"legendgroup\":\"Kuwait\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.2486169419417],\"y\":[0.705485215203613],\"text\":\"gdp_per_capita:  17726.2529<br />pop_vax_rate: 0.7054852152<br />country: Latvia<br />country: Latvia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,188,215,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,188,215,1)\"}},\"hoveron\":\"points\",\"name\":\"Latvia\",\"legendgroup\":\"Latvia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.66741070248818],\"y\":[0.363510084768137],\"text\":\"gdp_per_capita:   4649.5476<br />pop_vax_rate: 0.3635100848<br />country: Lebanon<br />country: Lebanon\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,187,219,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,187,219,1)\"}},\"hoveron\":\"points\",\"name\":\"Lebanon\",\"legendgroup\":\"Lebanon\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.56811893790496],\"y\":[0.309826237792134],\"text\":\"gdp_per_capita:   3699.2948<br />pop_vax_rate: 0.3098262378<br />country: Libya<br />country: Libya\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,186,223,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,186,223,1)\"}},\"hoveron\":\"points\",\"name\":\"Libya\",\"legendgroup\":\"Libya\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.3060740476285],\"y\":[0.696189930940709],\"text\":\"gdp_per_capita:  20233.6413<br />pop_vax_rate: 0.6961899309<br />country: Lithuania<br />country: Lithuania\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,185,227,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,185,227,1)\"}},\"hoveron\":\"points\",\"name\":\"Lithuania\",\"legendgroup\":\"Lithuania\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[5.06451265633625],\"y\":[0.757232216994188],\"text\":\"gdp_per_capita: 116014.6025<br />pop_vax_rate: 0.7572322170<br />country: Luxembourg<br />country: Luxembourg\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,184,230,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,184,230,1)\"}},\"hoveron\":\"points\",\"name\":\"Luxembourg\",\"legendgroup\":\"Luxembourg\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.80401706052389],\"y\":[0.0792054137085006],\"text\":\"gdp_per_capita:    636.8205<br />pop_vax_rate: 0.0792054137<br />country: Malawi<br />country: Malawi\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,182,234,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,182,234,1)\"}},\"hoveron\":\"points\",\"name\":\"Malawi\",\"legendgroup\":\"Malawi\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.01754871562636],\"y\":[0.824126757963712],\"text\":\"gdp_per_capita:  10412.3490<br />pop_vax_rate: 0.8241267580<br />country: Malaysia<br />country: Malaysia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,181,237,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,181,237,1)\"}},\"hoveron\":\"points\",\"name\":\"Malaysia\",\"legendgroup\":\"Malaysia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.84036369178135],\"y\":[0.736431211635729],\"text\":\"gdp_per_capita:   6924.1057<br />pop_vax_rate: 0.7364312116<br />country: Maldives<br />country: Maldives\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,180,240,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,180,240,1)\"}},\"hoveron\":\"points\",\"name\":\"Maldives\",\"legendgroup\":\"Maldives\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.93573544665017],\"y\":[0.0558203183138038],\"text\":\"gdp_per_capita:    862.4530<br />pop_vax_rate: 0.0558203183<br />country: Mali<br />country: Mali\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,178,243,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,178,243,1)\"}},\"hoveron\":\"points\",\"name\":\"Mali\",\"legendgroup\":\"Mali\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.44536508601346],\"y\":[0.892684923422523],\"text\":\"gdp_per_capita:  27884.6428<br />pop_vax_rate: 0.8926849234<br />country: Malta<br />country: Malta\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,176,246,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,176,246,1)\"}},\"hoveron\":\"points\",\"name\":\"Malta\",\"legendgroup\":\"Malta\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.23095730084317],\"y\":[0.32695444398085],\"text\":\"gdp_per_capita:   1701.9912<br />pop_vax_rate: 0.3269544440<br />country: Mauritania<br />country: Mauritania\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,175,249,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,175,249,1)\"}},\"hoveron\":\"points\",\"name\":\"Mauritania\",\"legendgroup\":\"Mauritania\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.92060700876064],\"y\":[0.659647878611574],\"text\":\"gdp_per_capita:   8329.2713<br />pop_vax_rate: 0.6596478786<br />country: Mexico<br />country: Mexico\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,173,251,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,173,251,1)\"}},\"hoveron\":\"points\",\"name\":\"Mexico\",\"legendgroup\":\"Mexico\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[5.23977028781933],\"y\":[0.735781265926001],\"text\":\"gdp_per_capita: 173688.1894<br />pop_vax_rate: 0.7357812659<br />country: Monaco<br />country: Monaco\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,171,253,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,171,253,1)\"}},\"hoveron\":\"points\",\"name\":\"Monaco\",\"legendgroup\":\"Monaco\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.60862769768491],\"y\":[0.692707361028243],\"text\":\"gdp_per_capita:   4060.9505<br />pop_vax_rate: 0.6927073610<br />country: Mongolia<br />country: Mongolia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,169,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,169,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Mongolia\",\"legendgroup\":\"Mongolia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.88520015206003],\"y\":[0.463979102084963],\"text\":\"gdp_per_capita:   7677.1522<br />pop_vax_rate: 0.4639791021<br />country: Montenegro<br />country: Montenegro\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,166,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,166,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Montenegro\",\"legendgroup\":\"Montenegro\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.49250770275856],\"y\":[0.672539006319005],\"text\":\"gdp_per_capita:   3108.1910<br />pop_vax_rate: 0.6725390063<br />country: Morocco<br />country: Morocco\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,164,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,164,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Morocco\",\"legendgroup\":\"Morocco\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.16660896996707],\"y\":[0.428871261670279],\"text\":\"gdp_per_capita:   1467.6043<br />pop_vax_rate: 0.4288712617<br />country: Myanmar<br />country: Myanmar\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(52,162,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(52,162,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Myanmar\",\"legendgroup\":\"Myanmar\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.02449667632506],\"y\":[0.716632822595533],\"text\":\"gdp_per_capita:  10580.2682<br />pop_vax_rate: 0.7166328226<br />country: Nauru<br />country: Nauru\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(75,159,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(75,159,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Nauru\",\"legendgroup\":\"Nauru\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.06263569595352],\"y\":[0.733496339063634],\"text\":\"gdp_per_capita:   1155.1429<br />pop_vax_rate: 0.7334963391<br />country: Nepal<br />country: Nepal\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(92,157,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(92,157,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Nepal\",\"legendgroup\":\"Nepal\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.71930738946264],\"y\":[0.770877865258685],\"text\":\"gdp_per_capita:  52397.1167<br />pop_vax_rate: 0.7708778653<br />country: Netherlands<br />country: Netherlands\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(106,154,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(106,154,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Netherlands\",\"legendgroup\":\"Netherlands\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.61743511724836],\"y\":[0.835212123596169],\"text\":\"gdp_per_capita:  41441.4667<br />pop_vax_rate: 0.8352121236<br />country: New Zealand<br />country: New Zealand\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(119,152,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(119,152,255,1)\"}},\"hoveron\":\"points\",\"name\":\"New Zealand\",\"legendgroup\":\"New Zealand\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.27995451224671],\"y\":[0.810826660934457],\"text\":\"gdp_per_capita:   1905.2612<br />pop_vax_rate: 0.8108266609<br />country: Nicaragua<br />country: Nicaragua\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(130,149,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(130,149,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Nicaragua\",\"legendgroup\":\"Nicaragua\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.32161758143362],\"y\":[0.0831154231428629],\"text\":\"gdp_per_capita:   2097.0925<br />pop_vax_rate: 0.0831154231<br />country: Nigeria<br />country: Nigeria\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(140,146,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(140,146,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Nigeria\",\"legendgroup\":\"Nigeria\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.77212084129658],\"y\":[0.410515934381681],\"text\":\"gdp_per_capita:   5917.2626<br />pop_vax_rate: 0.4105159344<br />country: North Macedonia<br />country: North Macedonia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(150,143,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(150,143,255,1)\"}},\"hoveron\":\"points\",\"name\":\"North Macedonia\",\"legendgroup\":\"North Macedonia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.82820653613906],\"y\":[0.804389833580414],\"text\":\"gdp_per_capita:  67329.6778<br />pop_vax_rate: 0.8043898336<br />country: Norway<br />country: Norway\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(158,140,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(158,140,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Norway\",\"legendgroup\":\"Norway\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.16093007604825],\"y\":[0.62761723894974],\"text\":\"gdp_per_capita:  14485.3861<br />pop_vax_rate: 0.6276172389<br />country: Oman<br />country: Oman\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(167,138,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(167,138,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Oman\",\"legendgroup\":\"Oman\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.0751306263703],\"y\":[0.56276155191644],\"text\":\"gdp_per_capita:   1188.8598<br />pop_vax_rate: 0.5627615519<br />country: Pakistan<br />country: Pakistan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(174,135,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(174,135,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Pakistan\",\"legendgroup\":\"Pakistan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.09725159162359],\"y\":[0.740152657106941],\"text\":\"gdp_per_capita:  12509.8353<br />pop_vax_rate: 0.7401526571<br />country: Panama<br />country: Panama\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(181,132,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(181,132,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Panama\",\"legendgroup\":\"Panama\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.44047103097253],\"y\":[0.0337361226248675],\"text\":\"gdp_per_capita:   2757.2175<br />pop_vax_rate: 0.0337361226<br />country: Papua New Guinea<br />country: Papua New Guinea\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(188,129,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(188,129,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Papua New Guinea\",\"legendgroup\":\"Papua New Guinea\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.69906317313053],\"y\":[0.527315833231686],\"text\":\"gdp_per_capita:   5001.0728<br />pop_vax_rate: 0.5273158332<br />country: Paraguay<br />country: Paraguay\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(195,126,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(195,126,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Paraguay\",\"legendgroup\":\"Paraguay\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.78723898736062],\"y\":[0.766145304694193],\"text\":\"gdp_per_capita:   6126.8745<br />pop_vax_rate: 0.7661453047<br />country: Peru<br />country: Peru\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(200,123,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(200,123,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Peru\",\"legendgroup\":\"Peru\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.19648002028023],\"y\":[0.592583603371544],\"text\":\"gdp_per_capita:  15720.9947<br />pop_vax_rate: 0.5925836034<br />country: Poland<br />country: Poland\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(206,121,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(206,121,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Poland\",\"legendgroup\":\"Poland\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.34588902369059],\"y\":[0.935742478529074],\"text\":\"gdp_per_capita:  22176.2967<br />pop_vax_rate: 0.9357424785<br />country: Portugal<br />country: Portugal\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(211,118,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(211,118,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Portugal\",\"legendgroup\":\"Portugal\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.60936423178401],\"y\":[0.735794566806109],\"text\":\"gdp_per_capita:   4067.8435<br />pop_vax_rate: 0.7357945668<br />country: Samoa<br />country: Samoa\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(216,115,252,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(216,115,252,1)\"}},\"hoveron\":\"points\",\"name\":\"Samoa\",\"legendgroup\":\"Samoa\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.30341889901915],\"y\":[0.740873399671458],\"text\":\"gdp_per_capita:  20110.3162<br />pop_vax_rate: 0.7408733997<br />country: Saudi Arabia<br />country: Saudi Arabia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(221,113,250,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(221,113,250,1)\"}},\"hoveron\":\"points\",\"name\":\"Saudi Arabia\",\"legendgroup\":\"Saudi Arabia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.16785793458481],\"y\":[0.085918240221979],\"text\":\"gdp_per_capita:   1471.8310<br />pop_vax_rate: 0.0859182402<br />country: Senegal<br />country: Senegal\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(225,111,247,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(225,111,247,1)\"}},\"hoveron\":\"points\",\"name\":\"Senegal\",\"legendgroup\":\"Senegal\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.88764602200016],\"y\":[0.483779333154223],\"text\":\"gdp_per_capita:   7720.5106<br />pop_vax_rate: 0.4837793332<br />country: Serbia<br />country: Serbia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(229,108,245,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(229,108,245,1)\"}},\"hoveron\":\"points\",\"name\":\"Serbia\",\"legendgroup\":\"Serbia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.70703898511976],\"y\":[0.185635926355634],\"text\":\"gdp_per_capita:    509.3766<br />pop_vax_rate: 0.1856359264<br />country: Sierra Leone<br />country: Sierra Leone\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(233,106,242,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(233,106,242,1)\"}},\"hoveron\":\"points\",\"name\":\"Sierra Leone\",\"legendgroup\":\"Sierra Leone\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.77668485900315],\"y\":[0.870345757427222],\"text\":\"gdp_per_capita:  59797.7522<br />pop_vax_rate: 0.8703457574<br />country: Singapore<br />country: Singapore\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(236,105,238,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(236,105,238,1)\"}},\"hoveron\":\"points\",\"name\":\"Singapore\",\"legendgroup\":\"Singapore\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.40683524144485],\"y\":[0.601665804813616],\"text\":\"gdp_per_capita:  25517.3307<br />pop_vax_rate: 0.6016658048<br />country: Slovenia<br />country: Slovenia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(239,103,235,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(239,103,235,1)\"}},\"hoveron\":\"points\",\"name\":\"Slovenia\",\"legendgroup\":\"Slovenia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.35229853912254],\"y\":[0.29244785828051],\"text\":\"gdp_per_capita:   2250.6012<br />pop_vax_rate: 0.2924478583<br />country: Solomon Islands<br />country: Solomon Islands\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(242,101,232,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(242,101,232,1)\"}},\"hoveron\":\"points\",\"name\":\"Solomon Islands\",\"legendgroup\":\"Solomon Islands\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.75249923850955],\"y\":[0.347729127046981],\"text\":\"gdp_per_capita:   5655.8677<br />pop_vax_rate: 0.3477291270<br />country: South Africa<br />country: South Africa\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(244,100,228,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(244,100,228,1)\"}},\"hoveron\":\"points\",\"name\":\"South Africa\",\"legendgroup\":\"South Africa\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.43237904943537],\"y\":[0.866661582709607],\"text\":\"gdp_per_capita:  27063.1939<br />pop_vax_rate: 0.8666615827<br />country: Spain<br />country: Spain\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(247,99,224,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(247,99,224,1)\"}},\"hoveron\":\"points\",\"name\":\"Spain\",\"legendgroup\":\"Spain\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.56592729161316],\"y\":[0.768708745836945],\"text\":\"gdp_per_capita:   3680.6735<br />pop_vax_rate: 0.7687087458<br />country: Sri Lanka<br />country: Sri Lanka\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(249,98,220,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(249,98,220,1)\"}},\"hoveron\":\"points\",\"name\":\"Sri Lanka\",\"legendgroup\":\"Sri Lanka\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.69166537733975],\"y\":[0.453195689305427],\"text\":\"gdp_per_capita:   4916.6057<br />pop_vax_rate: 0.4531956893<br />country: Suriname<br />country: Suriname\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(251,97,216,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(251,97,216,1)\"}},\"hoveron\":\"points\",\"name\":\"Suriname\",\"legendgroup\":\"Suriname\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.71828912973366],\"y\":[0.753256743023238],\"text\":\"gdp_per_capita:  52274.4088<br />pop_vax_rate: 0.7532567430<br />country: Sweden<br />country: Sweden\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(252,97,212,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(252,97,212,1)\"}},\"hoveron\":\"points\",\"name\":\"Sweden\",\"legendgroup\":\"Sweden\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.94000337802552],\"y\":[0.703467310478209],\"text\":\"gdp_per_capita:  87097.0365<br />pop_vax_rate: 0.7034673105<br />country: Switzerland<br />country: Switzerland\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(254,97,208,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(254,97,208,1)\"}},\"hoveron\":\"points\",\"name\":\"Switzerland\",\"legendgroup\":\"Switzerland\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.93406290881705],\"y\":[0.488561638191075],\"text\":\"gdp_per_capita:    859.1380<br />pop_vax_rate: 0.4885616382<br />country: Tajikistan<br />country: Tajikistan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,97,203,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,97,203,1)\"}},\"hoveron\":\"points\",\"name\":\"Tajikistan\",\"legendgroup\":\"Tajikistan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.85654003645265],\"y\":[0.761860068208044],\"text\":\"gdp_per_capita:   7186.8741<br />pop_vax_rate: 0.7618600682<br />country: Thailand<br />country: Thailand\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,97,199,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,97,199,1)\"}},\"hoveron\":\"points\",\"name\":\"Thailand\",\"legendgroup\":\"Thailand\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.66509515833709],\"y\":[0.717787638248957],\"text\":\"gdp_per_capita:   4624.8234<br />pop_vax_rate: 0.7177876382<br />country: Tonga<br />country: Tonga\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,97,194,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,97,194,1)\"}},\"hoveron\":\"points\",\"name\":\"Tonga\",\"legendgroup\":\"Tonga\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.18824305399304],\"y\":[0.528581462831844],\"text\":\"gdp_per_capita:  15425.6351<br />pop_vax_rate: 0.5285814628<br />country: Trinidad and Tobago<br />country: Trinidad and Tobago\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,98,189,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,98,189,1)\"}},\"hoveron\":\"points\",\"name\":\"Trinidad and Tobago\",\"legendgroup\":\"Trinidad and Tobago\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.54673903222153],\"y\":[0.602921762933703],\"text\":\"gdp_per_capita:   3521.5919<br />pop_vax_rate: 0.6029217629<br />country: Tunisia<br />country: Tunisia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,99,184,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,99,184,1)\"}},\"hoveron\":\"points\",\"name\":\"Tunisia\",\"legendgroup\":\"Tunisia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.93127645228538],\"y\":[0.683361685753531],\"text\":\"gdp_per_capita:   8536.4333<br />pop_vax_rate: 0.6833616858<br />country: Turkey<br />country: Turkey\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,100,179,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,100,179,1)\"}},\"hoveron\":\"points\",\"name\":\"Turkey\",\"legendgroup\":\"Turkey\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.37803298845656],\"y\":[0.802779069166796],\"text\":\"gdp_per_capita:  23879.9266<br />pop_vax_rate: 0.8027790692<br />country: Turks and Caicos Islands<br />country: Turks and Caicos Islands\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,101,174,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,101,174,1)\"}},\"hoveron\":\"points\",\"name\":\"Turks and Caicos Islands\",\"legendgroup\":\"Turks and Caicos Islands\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.61732643808475],\"y\":[0.528324287652646],\"text\":\"gdp_per_capita:   4143.1098<br />pop_vax_rate: 0.5283242877<br />country: Tuvalu<br />country: Tuvalu\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,102,169,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,102,169,1)\"}},\"hoveron\":\"points\",\"name\":\"Tuvalu\",\"legendgroup\":\"Tuvalu\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.54694746016856],\"y\":[0.355634149307439],\"text\":\"gdp_per_capita:   3523.2824<br />pop_vax_rate: 0.3556341493<br />country: Ukraine<br />country: Ukraine\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,103,163,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,103,163,1)\"}},\"hoveron\":\"points\",\"name\":\"Ukraine\",\"legendgroup\":\"Ukraine\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.55972180409624],\"y\":[1.0000073808946],\"text\":\"gdp_per_capita:  36284.5552<br />pop_vax_rate: 1.0000073809<br />country: United Arab Emirates<br />country: United Arab Emirates\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,105,158,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,105,158,1)\"}},\"hoveron\":\"points\",\"name\":\"United Arab Emirates\",\"legendgroup\":\"United Arab Emirates\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.61341015338102],\"y\":[0.782167073198654],\"text\":\"gdp_per_capita:  41059.1688<br />pop_vax_rate: 0.7821670732<br />country: United Kingdom<br />country: United Kingdom\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,106,152,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,106,152,1)\"}},\"hoveron\":\"points\",\"name\":\"United Kingdom\",\"legendgroup\":\"United Kingdom\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.8034123429123],\"y\":[0.767235199979575],\"text\":\"gdp_per_capita:  63593.4436<br />pop_vax_rate: 0.7672352000<br />country: United States<br />country: United States\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,108,147,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,108,147,1)\"}},\"hoveron\":\"points\",\"name\":\"United States\",\"legendgroup\":\"United States\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.18860261722431],\"y\":[0.851975414302851],\"text\":\"gdp_per_capita:  15438.4117<br />pop_vax_rate: 0.8519754143<br />country: Uruguay<br />country: Uruguay\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,108,145,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,108,145,1)\"}},\"hoveron\":\"points\",\"name\":\"Uruguay\",\"legendgroup\":\"Uruguay\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.24321101562164],\"y\":[0.535423119561931],\"text\":\"gdp_per_capita:   1750.6971<br />pop_vax_rate: 0.5354231196<br />country: Uzbekistan<br />country: Uzbekistan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,108,145,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,108,145,1)\"}},\"hoveron\":\"points\",\"name\":\"Uzbekistan\",\"legendgroup\":\"Uzbekistan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.45789540963276],\"y\":[0.361084160833469],\"text\":\"gdp_per_capita:   2870.0893<br />pop_vax_rate: 0.3610841608<br />country: Vanuatu<br />country: Vanuatu\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,108,145,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,108,145,1)\"}},\"hoveron\":\"points\",\"name\":\"Vanuatu\",\"legendgroup\":\"Vanuatu\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.44493811088901],\"y\":[0.816587816981063],\"text\":\"gdp_per_capita:   2785.7242<br />pop_vax_rate: 0.8165878170<br />country: Vietnam<br />country: Vietnam\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,108,145,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,108,145,1)\"}},\"hoveron\":\"points\",\"name\":\"Vietnam\",\"legendgroup\":\"Vietnam\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.08440103075645],\"y\":[0.29214440735664],\"text\":\"gdp_per_capita:   1214.5098<br />pop_vax_rate: 0.2921444074<br />country: Zimbabwe<br />country: Zimbabwe\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,108,145,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,108,145,1)\"}},\"hoveron\":\"points\",\"name\":\"Zimbabwe\",\"legendgroup\":\"Zimbabwe\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2.37838104828079,2.41460116523698,2.45082128219316,2.48704139914934,2.52326151610553,2.55948163306171,2.5957017500179,2.63192186697408,2.66814198393026,2.70436210088645,2.74058221784263,2.77680233479882,2.813022451755,2.84924256871118,2.88546268566737,2.92168280262355,2.95790291957974,2.99412303653592,3.0303431534921,3.06656327044829,3.10278338740447,3.13900350436066,3.17522362131684,3.21144373827302,3.24766385522921,3.28388397218539,3.32010408914158,3.35632420609776,3.39254432305395,3.42876444001013,3.46498455696631,3.5012046739225,3.53742479087868,3.57364490783487,3.60986502479105,3.64608514174723,3.68230525870342,3.7185253756596,3.75474549261579,3.79096560957197,3.82718572652815,3.86340584348434,3.89962596044052,3.93584607739671,3.97206619435289,4.00828631130907,4.04450642826526,4.08072654522144,4.11694666217763,4.15316677913381,4.18938689608999,4.22560701304618,4.26182713000236,4.29804724695855,4.33426736391473,4.37048748087092,4.4067075978271,4.44292771478328,4.47914783173947,4.51536794869565,4.55158806565183,4.58780818260802,4.6240282995642,4.66024841652039,4.69646853347657,4.73268865043276,4.76890876738894,4.80512888434512,4.84134900130131,4.87756911825749,4.91378923521368,4.95000935216986,4.98622946912604,5.02244958608223,5.05866970303841,5.0948898199946,5.13110993695078,5.16733005390696,5.20355017086315,5.23977028781933],\"y\":[0.156489876930264,0.166880104458601,0.177270331986939,0.187660559515276,0.198050787043614,0.208441014571952,0.218831242100289,0.229221469628627,0.239611697156964,0.250001924685302,0.260392152213639,0.270782379741977,0.281172607270314,0.291562834798652,0.301953062326989,0.312343289855327,0.322733517383665,0.333123744912002,0.34351397244034,0.353904199968677,0.364294427497015,0.374684655025352,0.38507488255369,0.395465110082027,0.405855337610365,0.416245565138702,0.42663579266704,0.437026020195377,0.447416247723715,0.457806475252052,0.46819670278039,0.478586930308728,0.488977157837065,0.499367385365403,0.50975761289374,0.520147840422078,0.530538067950415,0.540928295478753,0.55131852300709,0.561708750535428,0.572098978063765,0.582489205592103,0.59287943312044,0.603269660648778,0.613659888177115,0.624050115705453,0.634440343233791,0.644830570762128,0.655220798290466,0.665611025818803,0.676001253347141,0.686391480875478,0.696781708403816,0.707171935932153,0.717562163460491,0.727952390988828,0.738342618517166,0.748732846045503,0.759123073573841,0.769513301102179,0.779903528630516,0.790293756158854,0.800683983687191,0.811074211215529,0.821464438743866,0.831854666272204,0.842244893800541,0.852635121328879,0.863025348857216,0.873415576385554,0.883805803913891,0.894196031442229,0.904586258970567,0.914976486498904,0.925366714027242,0.935756941555579,0.946147169083917,0.956537396612254,0.966927624140592,0.977317851668929],\"text\":[\"gdp_per_capita: 2.378381<br />pop_vax_rate: 0.1564899\",\"gdp_per_capita: 2.414601<br />pop_vax_rate: 0.1668801\",\"gdp_per_capita: 2.450821<br />pop_vax_rate: 0.1772703\",\"gdp_per_capita: 2.487041<br />pop_vax_rate: 0.1876606\",\"gdp_per_capita: 2.523262<br />pop_vax_rate: 0.1980508\",\"gdp_per_capita: 2.559482<br />pop_vax_rate: 0.2084410\",\"gdp_per_capita: 2.595702<br />pop_vax_rate: 0.2188312\",\"gdp_per_capita: 2.631922<br />pop_vax_rate: 0.2292215\",\"gdp_per_capita: 2.668142<br />pop_vax_rate: 0.2396117\",\"gdp_per_capita: 2.704362<br />pop_vax_rate: 0.2500019\",\"gdp_per_capita: 2.740582<br />pop_vax_rate: 0.2603922\",\"gdp_per_capita: 2.776802<br />pop_vax_rate: 0.2707824\",\"gdp_per_capita: 2.813022<br />pop_vax_rate: 0.2811726\",\"gdp_per_capita: 2.849243<br />pop_vax_rate: 0.2915628\",\"gdp_per_capita: 2.885463<br />pop_vax_rate: 0.3019531\",\"gdp_per_capita: 2.921683<br />pop_vax_rate: 0.3123433\",\"gdp_per_capita: 2.957903<br />pop_vax_rate: 0.3227335\",\"gdp_per_capita: 2.994123<br />pop_vax_rate: 0.3331237\",\"gdp_per_capita: 3.030343<br />pop_vax_rate: 0.3435140\",\"gdp_per_capita: 3.066563<br />pop_vax_rate: 0.3539042\",\"gdp_per_capita: 3.102783<br />pop_vax_rate: 0.3642944\",\"gdp_per_capita: 3.139004<br />pop_vax_rate: 0.3746847\",\"gdp_per_capita: 3.175224<br />pop_vax_rate: 0.3850749\",\"gdp_per_capita: 3.211444<br />pop_vax_rate: 0.3954651\",\"gdp_per_capita: 3.247664<br />pop_vax_rate: 0.4058553\",\"gdp_per_capita: 3.283884<br />pop_vax_rate: 0.4162456\",\"gdp_per_capita: 3.320104<br />pop_vax_rate: 0.4266358\",\"gdp_per_capita: 3.356324<br />pop_vax_rate: 0.4370260\",\"gdp_per_capita: 3.392544<br />pop_vax_rate: 0.4474162\",\"gdp_per_capita: 3.428764<br />pop_vax_rate: 0.4578065\",\"gdp_per_capita: 3.464985<br />pop_vax_rate: 0.4681967\",\"gdp_per_capita: 3.501205<br />pop_vax_rate: 0.4785869\",\"gdp_per_capita: 3.537425<br />pop_vax_rate: 0.4889772\",\"gdp_per_capita: 3.573645<br />pop_vax_rate: 0.4993674\",\"gdp_per_capita: 3.609865<br />pop_vax_rate: 0.5097576\",\"gdp_per_capita: 3.646085<br />pop_vax_rate: 0.5201478\",\"gdp_per_capita: 3.682305<br />pop_vax_rate: 0.5305381\",\"gdp_per_capita: 3.718525<br />pop_vax_rate: 0.5409283\",\"gdp_per_capita: 3.754745<br />pop_vax_rate: 0.5513185\",\"gdp_per_capita: 3.790966<br />pop_vax_rate: 0.5617088\",\"gdp_per_capita: 3.827186<br />pop_vax_rate: 0.5720990\",\"gdp_per_capita: 3.863406<br />pop_vax_rate: 0.5824892\",\"gdp_per_capita: 3.899626<br />pop_vax_rate: 0.5928794\",\"gdp_per_capita: 3.935846<br />pop_vax_rate: 0.6032697\",\"gdp_per_capita: 3.972066<br />pop_vax_rate: 0.6136599\",\"gdp_per_capita: 4.008286<br />pop_vax_rate: 0.6240501\",\"gdp_per_capita: 4.044506<br />pop_vax_rate: 0.6344403\",\"gdp_per_capita: 4.080727<br />pop_vax_rate: 0.6448306\",\"gdp_per_capita: 4.116947<br />pop_vax_rate: 0.6552208\",\"gdp_per_capita: 4.153167<br />pop_vax_rate: 0.6656110\",\"gdp_per_capita: 4.189387<br />pop_vax_rate: 0.6760013\",\"gdp_per_capita: 4.225607<br />pop_vax_rate: 0.6863915\",\"gdp_per_capita: 4.261827<br />pop_vax_rate: 0.6967817\",\"gdp_per_capita: 4.298047<br />pop_vax_rate: 0.7071719\",\"gdp_per_capita: 4.334267<br />pop_vax_rate: 0.7175622\",\"gdp_per_capita: 4.370487<br />pop_vax_rate: 0.7279524\",\"gdp_per_capita: 4.406708<br />pop_vax_rate: 0.7383426\",\"gdp_per_capita: 4.442928<br />pop_vax_rate: 0.7487328\",\"gdp_per_capita: 4.479148<br />pop_vax_rate: 0.7591231\",\"gdp_per_capita: 4.515368<br />pop_vax_rate: 0.7695133\",\"gdp_per_capita: 4.551588<br />pop_vax_rate: 0.7799035\",\"gdp_per_capita: 4.587808<br />pop_vax_rate: 0.7902938\",\"gdp_per_capita: 4.624028<br />pop_vax_rate: 0.8006840\",\"gdp_per_capita: 4.660248<br />pop_vax_rate: 0.8110742\",\"gdp_per_capita: 4.696469<br />pop_vax_rate: 0.8214644\",\"gdp_per_capita: 4.732689<br />pop_vax_rate: 0.8318547\",\"gdp_per_capita: 4.768909<br />pop_vax_rate: 0.8422449\",\"gdp_per_capita: 4.805129<br />pop_vax_rate: 0.8526351\",\"gdp_per_capita: 4.841349<br />pop_vax_rate: 0.8630253\",\"gdp_per_capita: 4.877569<br />pop_vax_rate: 0.8734156\",\"gdp_per_capita: 4.913789<br />pop_vax_rate: 0.8838058\",\"gdp_per_capita: 4.950009<br />pop_vax_rate: 0.8941960\",\"gdp_per_capita: 4.986229<br />pop_vax_rate: 0.9045863\",\"gdp_per_capita: 5.022450<br />pop_vax_rate: 0.9149765\",\"gdp_per_capita: 5.058670<br />pop_vax_rate: 0.9253667\",\"gdp_per_capita: 5.094890<br />pop_vax_rate: 0.9357569\",\"gdp_per_capita: 5.131110<br />pop_vax_rate: 0.9461472\",\"gdp_per_capita: 5.167330<br />pop_vax_rate: 0.9565374\",\"gdp_per_capita: 5.203550<br />pop_vax_rate: 0.9669276\",\"gdp_per_capita: 5.239770<br />pop_vax_rate: 0.9773179\"],\"type\":\"scatter\",\"mode\":\"lines\",\"name\":\"fitted values\",\"line\":{\"width\":3.77952755905512,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":45.4063926940639,\"r\":7.30593607305936,\"b\":41.8264840182648,\"l\":48.9497716894977},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"title\":{\"text\":\"National Vaccination Rates by GDP Per Capita\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.5342465753425},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2.23531158630386,5.38283974979626],\"tickmode\":\"array\",\"ticktext\":[\"1e+03\",\"1e+04\",\"1e+05\"],\"tickvals\":[3,4,5],\"categoryorder\":\"array\",\"categoryarray\":[\"1e+03\",\"1e+04\",\"1e+05\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"gdp_per_capita\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.0492083731278935,1.04997003584806],\"tickmode\":\"array\",\"ticktext\":[\"0.00\",\"0.25\",\"0.50\",\"0.75\",\"1.00\"],\"tickvals\":[0,0.25,0.5,0.75,1],\"categoryorder\":\"array\",\"categoryarray\":[\"0.00\",\"0.25\",\"0.50\",\"0.75\",\"1.00\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"pop_vax_rate\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895},\"title\":{\"text\":\"country\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"888b592782ef\":{\"x\":{},\"y\":{},\"colour\":{},\"text\":{},\"type\":\"scatter\"},\"888b310546a3\":{\"x\":{},\"y\":{}}},\"cur_data\":\"888b592782ef\",\"visdat\":{\"888b592782ef\":[\"function (y) \",\"x\"],\"888b310546a3\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\nHere we see a positive relationship between GDP per Capita and national vaccination rates. This implies (as would be expected) that wealthier nations have an easier time getting their population vaccinated, or are able to get their population vaccinated more quickly, given that many vaccination campaigns are still in progress. This visualization does not provide us with any statistical verification of the relationship that it presented visually.\nScatterplot between Current Vaccination Rates and Colectivist/Individualist Index.\n\n\ncorr_df <- df %>% \n              arrange(desc(date))  %>%\n              filter(culture_index == 'idv') %>%\n              distinct(country, .keep_all = TRUE) %>%\n              select(country, pop_vax_rate, culture_index_value) %>% \n              na.omit()\n\n\np <- corr_df %>% \n     ggplot() +\n    ggtitle(\"National Vaccination Rates by Collectivist/Individualist Index\") +\n     geom_point(aes(x = culture_index_value, y = pop_vax_rate, color = country, text = paste(\"country:\", country))) + \n     stat_smooth(aes(x = culture_index_value, y = pop_vax_rate), method = \"lm\", col = \"red\", se = FALSE) \n\n\nfig <- ggplotly(p)\n\nfig\n\n\n\n{\"x\":{\"data\":[{\"x\":[46],\"y\":[0.885976992232787],\"text\":\"culture_index_value: 46<br />pop_vax_rate: 0.8859770<br />country: Argentina<br />country: Argentina\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"Argentina\",\"legendgroup\":\"Argentina\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[90],\"y\":[0.856161945628537],\"text\":\"culture_index_value: 90<br />pop_vax_rate: 0.8561619<br />country: Australia<br />country: Australia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(244,123,91,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(244,123,91,1)\"}},\"hoveron\":\"points\",\"name\":\"Australia\",\"legendgroup\":\"Australia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[55],\"y\":[0.760506234857223],\"text\":\"culture_index_value: 55<br />pop_vax_rate: 0.7605062<br />country: Austria<br />country: Austria\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(239,127,70,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(239,127,70,1)\"}},\"hoveron\":\"points\",\"name\":\"Austria\",\"legendgroup\":\"Austria\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[20],\"y\":[0.622405804993513],\"text\":\"culture_index_value: 20<br />pop_vax_rate: 0.6224058<br />country: Bangladesh<br />country: Bangladesh\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(233,132,42,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(233,132,42,1)\"}},\"hoveron\":\"points\",\"name\":\"Bangladesh\",\"legendgroup\":\"Bangladesh\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[75],\"y\":[0.796633297845266],\"text\":\"culture_index_value: 75<br />pop_vax_rate: 0.7966333<br />country: Belgium<br />country: Belgium\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(227,137,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(227,137,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Belgium\",\"legendgroup\":\"Belgium\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[38],\"y\":[0.829916623450905],\"text\":\"culture_index_value: 38<br />pop_vax_rate: 0.8299166<br />country: Brazil<br />country: Brazil\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(220,141,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(220,141,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Brazil\",\"legendgroup\":\"Brazil\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[80],\"y\":[0.855733964881367],\"text\":\"culture_index_value: 80<br />pop_vax_rate: 0.8557340<br />country: Canada<br />country: Canada\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(213,145,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(213,145,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Canada\",\"legendgroup\":\"Canada\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[23],\"y\":[0.926794899553567],\"text\":\"culture_index_value: 23<br />pop_vax_rate: 0.9267949<br />country: Chile<br />country: Chile\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(205,150,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(205,150,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Chile\",\"legendgroup\":\"Chile\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[13],\"y\":[0.80864245037683],\"text\":\"culture_index_value: 13<br />pop_vax_rate: 0.8086425<br />country: Colombia<br />country: Colombia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(196,154,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(196,154,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Colombia\",\"legendgroup\":\"Colombia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[15],\"y\":[0.80871354665404],\"text\":\"culture_index_value: 15<br />pop_vax_rate: 0.8087135<br />country: Costa Rica<br />country: Costa Rica\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(187,158,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(187,158,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Costa Rica\",\"legendgroup\":\"Costa Rica\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[33],\"y\":[0.569426270013837],\"text\":\"culture_index_value: 33<br />pop_vax_rate: 0.5694263<br />country: Croatia<br />country: Croatia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(176,161,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(176,161,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Croatia\",\"legendgroup\":\"Croatia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[74],\"y\":[0.830908645670922],\"text\":\"culture_index_value: 74<br />pop_vax_rate: 0.8309086<br />country: Denmark<br />country: Denmark\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(165,165,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(165,165,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Denmark\",\"legendgroup\":\"Denmark\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[8],\"y\":[0.835462725853678],\"text\":\"culture_index_value:  8<br />pop_vax_rate: 0.8354627<br />country: Ecuador<br />country: Ecuador\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(153,168,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(153,168,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Ecuador\",\"legendgroup\":\"Ecuador\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19],\"y\":[0.702137198646789],\"text\":\"culture_index_value: 19<br />pop_vax_rate: 0.7021372<br />country: El Salvador<br />country: El Salvador\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(139,171,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(139,171,0,1)\"}},\"hoveron\":\"points\",\"name\":\"El Salvador\",\"legendgroup\":\"El Salvador\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[60],\"y\":[0.643712478128284],\"text\":\"culture_index_value: 60<br />pop_vax_rate: 0.6437125<br />country: Estonia<br />country: Estonia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(124,174,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(124,174,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Estonia\",\"legendgroup\":\"Estonia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[63],\"y\":[0.80795354094106],\"text\":\"culture_index_value: 63<br />pop_vax_rate: 0.8079535<br />country: Finland<br />country: Finland\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(105,177,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(105,177,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Finland\",\"legendgroup\":\"Finland\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[71],\"y\":[0.80037600245087],\"text\":\"culture_index_value: 71<br />pop_vax_rate: 0.8003760<br />country: France<br />country: France\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(83,180,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(83,180,0,1)\"}},\"hoveron\":\"points\",\"name\":\"France\",\"legendgroup\":\"France\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[67],\"y\":[0.76151740993945],\"text\":\"culture_index_value: 67<br />pop_vax_rate: 0.7615174<br />country: Germany<br />country: Germany\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(49,182,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(49,182,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Germany\",\"legendgroup\":\"Germany\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[35],\"y\":[0.731967069536055],\"text\":\"culture_index_value: 35<br />pop_vax_rate: 0.7319671<br />country: Greece<br />country: Greece\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,184,35,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,184,35,1)\"}},\"hoveron\":\"points\",\"name\":\"Greece\",\"legendgroup\":\"Greece\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[6],\"y\":[0.420920561955918],\"text\":\"culture_index_value:  6<br />pop_vax_rate: 0.4209206<br />country: Guatemala<br />country: Guatemala\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,186,65,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,186,65,1)\"}},\"hoveron\":\"points\",\"name\":\"Guatemala\",\"legendgroup\":\"Guatemala\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[80],\"y\":[0.655370904913278],\"text\":\"culture_index_value: 80<br />pop_vax_rate: 0.6553709<br />country: Hungary<br />country: Hungary\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,188,86,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,188,86,1)\"}},\"hoveron\":\"points\",\"name\":\"Hungary\",\"legendgroup\":\"Hungary\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[48],\"y\":[0.697800183439272],\"text\":\"culture_index_value: 48<br />pop_vax_rate: 0.6978002<br />country: India<br />country: India\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,190,103,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,190,103,1)\"}},\"hoveron\":\"points\",\"name\":\"India\",\"legendgroup\":\"India\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[14],\"y\":[0.693519928211246],\"text\":\"culture_index_value: 14<br />pop_vax_rate: 0.6935199<br />country: Indonesia<br />country: Indonesia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,119,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,191,119,1)\"}},\"hoveron\":\"points\",\"name\":\"Indonesia\",\"legendgroup\":\"Indonesia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[70],\"y\":[0.810076793032007],\"text\":\"culture_index_value: 70<br />pop_vax_rate: 0.8100768<br />country: Ireland<br />country: Ireland\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,134,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,134,1)\"}},\"hoveron\":\"points\",\"name\":\"Ireland\",\"legendgroup\":\"Ireland\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[54],\"y\":[0.726723518753594],\"text\":\"culture_index_value: 54<br />pop_vax_rate: 0.7267235<br />country: Israel<br />country: Israel\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,148,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,148,1)\"}},\"hoveron\":\"points\",\"name\":\"Israel\",\"legendgroup\":\"Israel\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[76],\"y\":[0.849479203109419],\"text\":\"culture_index_value: 76<br />pop_vax_rate: 0.8494792<br />country: Italy<br />country: Italy\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,193,161,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,193,161,1)\"}},\"hoveron\":\"points\",\"name\":\"Italy\",\"legendgroup\":\"Italy\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[39],\"y\":[0.257309548518301],\"text\":\"culture_index_value: 39<br />pop_vax_rate: 0.2573095<br />country: Jamaica<br />country: Jamaica\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,193,173,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,193,173,1)\"}},\"hoveron\":\"points\",\"name\":\"Jamaica\",\"legendgroup\":\"Jamaica\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[46],\"y\":[0.807609960903007],\"text\":\"culture_index_value: 46<br />pop_vax_rate: 0.8076100<br />country: Japan<br />country: Japan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,192,185,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,192,185,1)\"}},\"hoveron\":\"points\",\"name\":\"Japan\",\"legendgroup\":\"Japan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[70],\"y\":[0.705485215203613],\"text\":\"culture_index_value: 70<br />pop_vax_rate: 0.7054852<br />country: Latvia<br />country: Latvia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,196,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,191,196,1)\"}},\"hoveron\":\"points\",\"name\":\"Latvia\",\"legendgroup\":\"Latvia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[60],\"y\":[0.696189930940709],\"text\":\"culture_index_value: 60<br />pop_vax_rate: 0.6961899<br />country: Lithuania<br />country: Lithuania\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,190,207,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,190,207,1)\"}},\"hoveron\":\"points\",\"name\":\"Lithuania\",\"legendgroup\":\"Lithuania\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[60],\"y\":[0.757232216994188],\"text\":\"culture_index_value: 60<br />pop_vax_rate: 0.7572322<br />country: Luxembourg<br />country: Luxembourg\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,188,217,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,188,217,1)\"}},\"hoveron\":\"points\",\"name\":\"Luxembourg\",\"legendgroup\":\"Luxembourg\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[26],\"y\":[0.824126757963712],\"text\":\"culture_index_value: 26<br />pop_vax_rate: 0.8241268<br />country: Malaysia<br />country: Malaysia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,185,226,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,185,226,1)\"}},\"hoveron\":\"points\",\"name\":\"Malaysia\",\"legendgroup\":\"Malaysia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[59],\"y\":[0.892684923422523],\"text\":\"culture_index_value: 59<br />pop_vax_rate: 0.8926849<br />country: Malta<br />country: Malta\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,182,235,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,182,235,1)\"}},\"hoveron\":\"points\",\"name\":\"Malta\",\"legendgroup\":\"Malta\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[30],\"y\":[0.659647878611574],\"text\":\"culture_index_value: 30<br />pop_vax_rate: 0.6596479<br />country: Mexico<br />country: Mexico\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,178,242,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,178,242,1)\"}},\"hoveron\":\"points\",\"name\":\"Mexico\",\"legendgroup\":\"Mexico\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[46],\"y\":[0.672539006319005],\"text\":\"culture_index_value: 46<br />pop_vax_rate: 0.6725390<br />country: Morocco<br />country: Morocco\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,174,249,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,174,249,1)\"}},\"hoveron\":\"points\",\"name\":\"Morocco\",\"legendgroup\":\"Morocco\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[80],\"y\":[0.770877865258685],\"text\":\"culture_index_value: 80<br />pop_vax_rate: 0.7708779<br />country: Netherlands<br />country: Netherlands\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,169,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,169,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Netherlands\",\"legendgroup\":\"Netherlands\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[79],\"y\":[0.835212123596169],\"text\":\"culture_index_value: 79<br />pop_vax_rate: 0.8352121<br />country: New Zealand<br />country: New Zealand\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(6,164,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(6,164,255,1)\"}},\"hoveron\":\"points\",\"name\":\"New Zealand\",\"legendgroup\":\"New Zealand\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[69],\"y\":[0.804389833580414],\"text\":\"culture_index_value: 69<br />pop_vax_rate: 0.8043898<br />country: Norway<br />country: Norway\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(84,158,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(84,158,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Norway\",\"legendgroup\":\"Norway\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[14],\"y\":[0.56276155191644],\"text\":\"culture_index_value: 14<br />pop_vax_rate: 0.5627616<br />country: Pakistan<br />country: Pakistan\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(118,152,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(118,152,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Pakistan\",\"legendgroup\":\"Pakistan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[11],\"y\":[0.740152657106941],\"text\":\"culture_index_value: 11<br />pop_vax_rate: 0.7401527<br />country: Panama<br />country: Panama\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(144,145,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(144,145,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Panama\",\"legendgroup\":\"Panama\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[16],\"y\":[0.766145304694193],\"text\":\"culture_index_value: 16<br />pop_vax_rate: 0.7661453<br />country: Peru<br />country: Peru\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(165,138,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(165,138,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Peru\",\"legendgroup\":\"Peru\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[60],\"y\":[0.592583603371544],\"text\":\"culture_index_value: 60<br />pop_vax_rate: 0.5925836<br />country: Poland<br />country: Poland\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(184,131,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(184,131,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Poland\",\"legendgroup\":\"Poland\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[27],\"y\":[0.935742478529074],\"text\":\"culture_index_value: 27<br />pop_vax_rate: 0.9357425<br />country: Portugal<br />country: Portugal\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(199,124,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(199,124,255,1)\"}},\"hoveron\":\"points\",\"name\":\"Portugal\",\"legendgroup\":\"Portugal\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[25],\"y\":[0.483779333154223],\"text\":\"culture_index_value: 25<br />pop_vax_rate: 0.4837793<br />country: Serbia<br />country: Serbia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(212,118,254,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(212,118,254,1)\"}},\"hoveron\":\"points\",\"name\":\"Serbia\",\"legendgroup\":\"Serbia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[20],\"y\":[0.870345757427222],\"text\":\"culture_index_value: 20<br />pop_vax_rate: 0.8703458<br />country: Singapore<br />country: Singapore\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(223,112,248,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(223,112,248,1)\"}},\"hoveron\":\"points\",\"name\":\"Singapore\",\"legendgroup\":\"Singapore\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[27],\"y\":[0.601665804813616],\"text\":\"culture_index_value: 27<br />pop_vax_rate: 0.6016658<br />country: Slovenia<br />country: Slovenia\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(233,106,241,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(233,106,241,1)\"}},\"hoveron\":\"points\",\"name\":\"Slovenia\",\"legendgroup\":\"Slovenia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[51],\"y\":[0.866661582709607],\"text\":\"culture_index_value: 51<br />pop_vax_rate: 0.8666616<br />country: Spain<br />country: Spain\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(241,102,233,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(241,102,233,1)\"}},\"hoveron\":\"points\",\"name\":\"Spain\",\"legendgroup\":\"Spain\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[47],\"y\":[0.453195689305427],\"text\":\"culture_index_value: 47<br />pop_vax_rate: 0.4531957<br />country: Suriname<br />country: Suriname\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(247,99,224,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(247,99,224,1)\"}},\"hoveron\":\"points\",\"name\":\"Suriname\",\"legendgroup\":\"Suriname\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[71],\"y\":[0.753256743023238],\"text\":\"culture_index_value: 71<br />pop_vax_rate: 0.7532567<br />country: Sweden<br />country: Sweden\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(251,97,215,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(251,97,215,1)\"}},\"hoveron\":\"points\",\"name\":\"Sweden\",\"legendgroup\":\"Sweden\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[68],\"y\":[0.703467310478209],\"text\":\"culture_index_value: 68<br />pop_vax_rate: 0.7034673<br />country: Switzerland<br />country: Switzerland\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,97,204,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,97,204,1)\"}},\"hoveron\":\"points\",\"name\":\"Switzerland\",\"legendgroup\":\"Switzerland\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[20],\"y\":[0.761860068208044],\"text\":\"culture_index_value: 20<br />pop_vax_rate: 0.7618601<br />country: Thailand<br />country: Thailand\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,98,193,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,98,193,1)\"}},\"hoveron\":\"points\",\"name\":\"Thailand\",\"legendgroup\":\"Thailand\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[16],\"y\":[0.528581462831844],\"text\":\"culture_index_value: 16<br />pop_vax_rate: 0.5285815<br />country: Trinidad and Tobago<br />country: Trinidad and Tobago\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,99,180,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,99,180,1)\"}},\"hoveron\":\"points\",\"name\":\"Trinidad and Tobago\",\"legendgroup\":\"Trinidad and Tobago\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[37],\"y\":[0.683361685753531],\"text\":\"culture_index_value: 37<br />pop_vax_rate: 0.6833617<br />country: Turkey<br />country: Turkey\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,102,168,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,102,168,1)\"}},\"hoveron\":\"points\",\"name\":\"Turkey\",\"legendgroup\":\"Turkey\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[91],\"y\":[0.767235199979575],\"text\":\"culture_index_value: 91<br />pop_vax_rate: 0.7672352<br />country: United States<br />country: United States\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,105,154,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,105,154,1)\"}},\"hoveron\":\"points\",\"name\":\"United States\",\"legendgroup\":\"United States\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[36],\"y\":[0.851975414302851],\"text\":\"culture_index_value: 36<br />pop_vax_rate: 0.8519754<br />country: Uruguay<br />country: Uruguay\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,108,145,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,108,145,1)\"}},\"hoveron\":\"points\",\"name\":\"Uruguay\",\"legendgroup\":\"Uruguay\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[20],\"y\":[0.816587816981063],\"text\":\"culture_index_value: 20<br />pop_vax_rate: 0.8165878<br />country: Vietnam<br />country: Vietnam\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,108,145,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,108,145,1)\"}},\"hoveron\":\"points\",\"name\":\"Vietnam\",\"legendgroup\":\"Vietnam\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[6,7.07594936708861,8.15189873417722,9.22784810126582,10.3037974683544,11.379746835443,12.4556962025316,13.5316455696203,14.6075949367089,15.6835443037975,16.7594936708861,17.8354430379747,18.9113924050633,19.9873417721519,21.0632911392405,22.1392405063291,23.2151898734177,24.2911392405063,25.3670886075949,26.4430379746835,27.5189873417722,28.5949367088608,29.6708860759494,30.746835443038,31.8227848101266,32.8987341772152,33.9746835443038,35.0506329113924,36.126582278481,37.2025316455696,38.2784810126582,39.3544303797468,40.4303797468354,41.506329113924,42.5822784810127,43.6582278481013,44.7341772151899,45.8101265822785,46.8860759493671,47.9620253164557,49.0379746835443,50.1139240506329,51.1898734177215,52.2658227848101,53.3417721518987,54.4177215189873,55.4936708860759,56.5696202531646,57.6455696202532,58.7215189873418,59.7974683544304,60.873417721519,61.9493670886076,63.0253164556962,64.1012658227848,65.1772151898734,66.253164556962,67.3291139240506,68.4050632911392,69.4810126582279,70.5569620253165,71.6329113924051,72.7088607594937,73.7848101265823,74.8607594936709,75.9367088607595,77.0126582278481,78.0886075949367,79.1645569620253,80.2405063291139,81.3164556962025,82.3924050632911,83.4683544303797,84.5443037974683,85.620253164557,86.6962025316456,87.7721518987342,88.8481012658228,89.9240506329114,91],\"y\":[0.683496963696252,0.684872545535793,0.686248127375335,0.687623709214876,0.688999291054418,0.690374872893959,0.691750454733501,0.693126036573042,0.694501618412584,0.695877200252125,0.697252782091667,0.698628363931208,0.70000394577075,0.701379527610291,0.702755109449833,0.704130691289374,0.705506273128916,0.706881854968457,0.708257436807999,0.70963301864754,0.711008600487082,0.712384182326623,0.713759764166165,0.715135346005707,0.716510927845248,0.71788650968479,0.719262091524331,0.720637673363873,0.722013255203414,0.723388837042956,0.724764418882497,0.726140000722039,0.72751558256158,0.728891164401122,0.730266746240663,0.731642328080205,0.733017909919746,0.734393491759288,0.735769073598829,0.737144655438371,0.738520237277912,0.739895819117454,0.741271400956995,0.742646982796537,0.744022564636079,0.74539814647562,0.746773728315162,0.748149310154703,0.749524891994245,0.750900473833786,0.752276055673328,0.753651637512869,0.755027219352411,0.756402801191952,0.757778383031494,0.759153964871035,0.760529546710577,0.761905128550118,0.76328071038966,0.764656292229201,0.766031874068743,0.767407455908284,0.768783037747826,0.770158619587367,0.771534201426909,0.77290978326645,0.774285365105992,0.775660946945533,0.777036528785075,0.778412110624616,0.779787692464158,0.781163274303699,0.782538856143241,0.783914437982782,0.785290019822324,0.786665601661866,0.788041183501407,0.789416765340949,0.79079234718049,0.792167929020032],\"text\":[\"culture_index_value:  6.000000<br />pop_vax_rate: 0.6834970\",\"culture_index_value:  7.075949<br />pop_vax_rate: 0.6848725\",\"culture_index_value:  8.151899<br />pop_vax_rate: 0.6862481\",\"culture_index_value:  9.227848<br />pop_vax_rate: 0.6876237\",\"culture_index_value: 10.303797<br />pop_vax_rate: 0.6889993\",\"culture_index_value: 11.379747<br />pop_vax_rate: 0.6903749\",\"culture_index_value: 12.455696<br />pop_vax_rate: 0.6917505\",\"culture_index_value: 13.531646<br />pop_vax_rate: 0.6931260\",\"culture_index_value: 14.607595<br />pop_vax_rate: 0.6945016\",\"culture_index_value: 15.683544<br />pop_vax_rate: 0.6958772\",\"culture_index_value: 16.759494<br />pop_vax_rate: 0.6972528\",\"culture_index_value: 17.835443<br />pop_vax_rate: 0.6986284\",\"culture_index_value: 18.911392<br />pop_vax_rate: 0.7000039\",\"culture_index_value: 19.987342<br />pop_vax_rate: 0.7013795\",\"culture_index_value: 21.063291<br />pop_vax_rate: 0.7027551\",\"culture_index_value: 22.139241<br />pop_vax_rate: 0.7041307\",\"culture_index_value: 23.215190<br />pop_vax_rate: 0.7055063\",\"culture_index_value: 24.291139<br />pop_vax_rate: 0.7068819\",\"culture_index_value: 25.367089<br />pop_vax_rate: 0.7082574\",\"culture_index_value: 26.443038<br />pop_vax_rate: 0.7096330\",\"culture_index_value: 27.518987<br />pop_vax_rate: 0.7110086\",\"culture_index_value: 28.594937<br />pop_vax_rate: 0.7123842\",\"culture_index_value: 29.670886<br />pop_vax_rate: 0.7137598\",\"culture_index_value: 30.746835<br />pop_vax_rate: 0.7151353\",\"culture_index_value: 31.822785<br />pop_vax_rate: 0.7165109\",\"culture_index_value: 32.898734<br />pop_vax_rate: 0.7178865\",\"culture_index_value: 33.974684<br />pop_vax_rate: 0.7192621\",\"culture_index_value: 35.050633<br />pop_vax_rate: 0.7206377\",\"culture_index_value: 36.126582<br />pop_vax_rate: 0.7220133\",\"culture_index_value: 37.202532<br />pop_vax_rate: 0.7233888\",\"culture_index_value: 38.278481<br />pop_vax_rate: 0.7247644\",\"culture_index_value: 39.354430<br />pop_vax_rate: 0.7261400\",\"culture_index_value: 40.430380<br />pop_vax_rate: 0.7275156\",\"culture_index_value: 41.506329<br />pop_vax_rate: 0.7288912\",\"culture_index_value: 42.582278<br />pop_vax_rate: 0.7302667\",\"culture_index_value: 43.658228<br />pop_vax_rate: 0.7316423\",\"culture_index_value: 44.734177<br />pop_vax_rate: 0.7330179\",\"culture_index_value: 45.810127<br />pop_vax_rate: 0.7343935\",\"culture_index_value: 46.886076<br />pop_vax_rate: 0.7357691\",\"culture_index_value: 47.962025<br />pop_vax_rate: 0.7371447\",\"culture_index_value: 49.037975<br />pop_vax_rate: 0.7385202\",\"culture_index_value: 50.113924<br />pop_vax_rate: 0.7398958\",\"culture_index_value: 51.189873<br />pop_vax_rate: 0.7412714\",\"culture_index_value: 52.265823<br />pop_vax_rate: 0.7426470\",\"culture_index_value: 53.341772<br />pop_vax_rate: 0.7440226\",\"culture_index_value: 54.417722<br />pop_vax_rate: 0.7453981\",\"culture_index_value: 55.493671<br />pop_vax_rate: 0.7467737\",\"culture_index_value: 56.569620<br />pop_vax_rate: 0.7481493\",\"culture_index_value: 57.645570<br />pop_vax_rate: 0.7495249\",\"culture_index_value: 58.721519<br />pop_vax_rate: 0.7509005\",\"culture_index_value: 59.797468<br />pop_vax_rate: 0.7522761\",\"culture_index_value: 60.873418<br />pop_vax_rate: 0.7536516\",\"culture_index_value: 61.949367<br />pop_vax_rate: 0.7550272\",\"culture_index_value: 63.025316<br />pop_vax_rate: 0.7564028\",\"culture_index_value: 64.101266<br />pop_vax_rate: 0.7577784\",\"culture_index_value: 65.177215<br />pop_vax_rate: 0.7591540\",\"culture_index_value: 66.253165<br />pop_vax_rate: 0.7605295\",\"culture_index_value: 67.329114<br />pop_vax_rate: 0.7619051\",\"culture_index_value: 68.405063<br />pop_vax_rate: 0.7632807\",\"culture_index_value: 69.481013<br />pop_vax_rate: 0.7646563\",\"culture_index_value: 70.556962<br />pop_vax_rate: 0.7660319\",\"culture_index_value: 71.632911<br />pop_vax_rate: 0.7674075\",\"culture_index_value: 72.708861<br />pop_vax_rate: 0.7687830\",\"culture_index_value: 73.784810<br />pop_vax_rate: 0.7701586\",\"culture_index_value: 74.860759<br />pop_vax_rate: 0.7715342\",\"culture_index_value: 75.936709<br />pop_vax_rate: 0.7729098\",\"culture_index_value: 77.012658<br />pop_vax_rate: 0.7742854\",\"culture_index_value: 78.088608<br />pop_vax_rate: 0.7756609\",\"culture_index_value: 79.164557<br />pop_vax_rate: 0.7770365\",\"culture_index_value: 80.240506<br />pop_vax_rate: 0.7784121\",\"culture_index_value: 81.316456<br />pop_vax_rate: 0.7797877\",\"culture_index_value: 82.392405<br />pop_vax_rate: 0.7811633\",\"culture_index_value: 83.468354<br />pop_vax_rate: 0.7825389\",\"culture_index_value: 84.544304<br />pop_vax_rate: 0.7839144\",\"culture_index_value: 85.620253<br />pop_vax_rate: 0.7852900\",\"culture_index_value: 86.696203<br />pop_vax_rate: 0.7866656\",\"culture_index_value: 87.772152<br />pop_vax_rate: 0.7880412\",\"culture_index_value: 88.848101<br />pop_vax_rate: 0.7894168\",\"culture_index_value: 89.924051<br />pop_vax_rate: 0.7907923\",\"culture_index_value: 91.000000<br />pop_vax_rate: 0.7921679\"],\"type\":\"scatter\",\"mode\":\"lines\",\"name\":\"fitted values\",\"line\":{\"width\":3.77952755905512,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":45.4063926940639,\"r\":7.30593607305936,\"b\":41.8264840182648,\"l\":43.1050228310502},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"title\":{\"text\":\"National Vaccination Rates by Collectivist/Individualist Index\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.5342465753425},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1.75,95.25],\"tickmode\":\"array\",\"ticktext\":[\"25\",\"50\",\"75\"],\"tickvals\":[25,50,75],\"categoryorder\":\"array\",\"categoryarray\":[\"25\",\"50\",\"75\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"culture_index_value\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.223387902017762,0.969664125029613],\"tickmode\":\"array\",\"ticktext\":[\"0.4\",\"0.6\",\"0.8\"],\"tickvals\":[0.4,0.6,0.8],\"categoryorder\":\"array\",\"categoryarray\":[\"0.4\",\"0.6\",\"0.8\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"pop_vax_rate\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895},\"title\":{\"text\":\"country\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"888b157d3b99\":{\"x\":{},\"y\":{},\"colour\":{},\"text\":{},\"type\":\"scatter\"},\"888b50d3c4d4\":{\"x\":{},\"y\":{}}},\"cur_data\":\"888b157d3b99\",\"visdat\":{\"888b157d3b99\":[\"function (y) \",\"x\"],\"888b50d3c4d4\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\nThis scatterplot shows that as countries become more individualistic, and less collectivist, they appear to have more success vaccinating their population. This relationship does not appear to be that strong, and we are unable to verify if it is statistically significant or not. For my final project, I hope to include a button in this graph that allows the user to rapidly switch between the 6 cultural indices.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-23T19:18:47-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomry0531869698/",
    "title": "Roy Yoon HW #2",
    "description": "Read in a dataset",
    "author": [
      {
        "name": "Roy Yoon",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\nPackages Used\nPackages installed for Homework Assignment Number Two:\n\n\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n\n\nDataset Used\nI used clean data set “railroad_2012_clean_county”.\nThe data is already in a tidy data format.\nTidy Data:\nEach variable has it’s own column\nEach observation has it’s own row\nEach value has it’s own cell\n\n\nrailroad_2012 <- read_excel(\"railroad_2012_clean_county.xlsx\")\nhead(railroad_2012)\n\n\n# A tibble: 6 × 3\n  state county               total_employees\n  <chr> <chr>                          <dbl>\n1 AE    APO                                2\n2 AK    ANCHORAGE                          7\n3 AK    FAIRBANKS NORTH STAR               2\n4 AK    JUNEAU                             3\n5 AK    MATANUSKA-SUSITNA                  2\n6 AK    SITKA                              1\n\nDataset Dimension\nThese are the dimensions of the data set railroad_2012:\n\n\ndim(railroad_2012)\n\n\n[1] 2930    3\n\nThere are 2930 rows and 3 columns\nColumn Names\nRailroad_2012 has three variables(columns) state, county, and total_employees\n\n\ncolnames(railroad_2012)\n\n\n[1] \"state\"           \"county\"          \"total_employees\"\n\nFilter\nThe following is a filter of showing how many counties have more than 100 employees for the railroad in 2012:\n\n\nOneHundred_More <- filter(railroad_2012,total_employees > 100 )\n\nOneHundred_More\n\n\n# A tibble: 530 × 3\n   state county     total_employees\n   <chr> <chr>                <dbl>\n 1 AL    AUTAUGA                102\n 2 AL    BALDWIN                143\n 3 AL    BLOUNT                 154\n 4 AL    COLBERT                199\n 5 AL    CULLMAN                129\n 6 AL    DALLAS                 122\n 7 AL    ELMORE                 116\n 8 AL    JEFFERSON              990\n 9 AL    LAUDERDALE             117\n10 AL    MOBILE                 331\n# … with 520 more rows\n\n\n\n100 * (530/2930)\n\n\n[1] 18.08874\n\nThere are 530 out of 2930 (18.09%) Counties that have more than 100 employees for the railroad in 2012.\nConclusion\nDataset name: railroad_2012_clean_county\nDimensions: 2930 rows and 3 columns\nColumn Names: state, county, total_employees\nCounties with More than 100 employees: 18.09%, 530 out of 2930\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-23T19:18:54-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomlcollazohw4/",
    "title": "HW4",
    "description": "This assignment includes descriptive statistics and visualizations for the variables I've selected for my final project.",
    "author": [
      {
        "name": "Laura Collazo",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\r\nDataset\r\nThe dataset I’ve chosen for my final project is the Program for International Student Assessment (PISA) 2018 student data. It’s a large dataset containing 1,119 variables and 612,004 observations of 15 year old students from 80 countries.\r\nRead in Dataset\r\nNote: The dataset orginally read in was a very large SAS file. However, my computer’s memory was not sufficient to knit the file. As a workaround I had to write a csv containing a limited number of variables and then read this back in.\r\n\r\n\r\n#read in SAS & examine\r\n\r\npisa <- read_sas(\"cy07_msu_stu_qqq.sas7bdat\", \"CY07MSU_FMT_STU_QQQ.SAS7BCAT\", encoding = NULL, .name_repair = \"unique\")\r\n\r\nhead(pisa)\r\n\r\ntail(pisa)\r\n\r\nunique(pisa[c(\"CNT\")])\r\n\r\n# select only desired variables and filter country for Spain\r\n\r\npisa_smaller <- pisa %>% \r\n  \r\nselect(c(CNT,\r\nST001D01T,\r\nST004D01T,\r\nST197Q01HA,\r\nST197Q02HA,\r\nST197Q04HA,\r\nST197Q07HA,\r\nST197Q08HA,\r\nST197Q09HA,\r\nST197Q12HA,\r\nST220Q01HA,\r\nST220Q02HA,\r\nST220Q03HA,\r\nST220Q04HA,\r\nST177Q01HA,\r\nST019AQ01T,\r\nST021Q01TA)) %>%\r\n  \r\nfilter(CNT == \"ESP\")\r\n  \r\n#check work\r\n \r\nhead(pisa_smaller)\r\n\r\n#write csv\r\n\r\nwrite_csv(pisa_smaller, \"pisa_smaller_2022-2-20.csv\")\r\n\r\n\r\n\r\n\r\n\r\npisa <- read_csv(\"pisa_smaller_2022-2-20.csv\")\r\n\r\nhead(pisa)\r\n\r\n\r\n# A tibble: 6 x 17\r\n  CNT   ST001D01T ST004D01T ST197Q01HA ST197Q02HA ST197Q04HA\r\n  <chr>     <dbl>     <dbl>      <dbl>      <dbl>      <dbl>\r\n1 ESP          10         2          4          4          4\r\n2 ESP           9         1          3          2          3\r\n3 ESP          10         2          4          3          3\r\n4 ESP           8         2          2          1          3\r\n5 ESP          10         1         NA         NA         NA\r\n6 ESP          10         1          4          2          3\r\n# ... with 11 more variables: ST197Q07HA <dbl>, ST197Q08HA <dbl>,\r\n#   ST197Q09HA <dbl>, ST197Q12HA <dbl>, ST220Q01HA <dbl>,\r\n#   ST220Q02HA <dbl>, ST220Q03HA <dbl>, ST220Q04HA <dbl>,\r\n#   ST177Q01HA <dbl>, ST019AQ01T <dbl>, ST021Q01TA <dbl>\r\n\r\ntail(pisa)\r\n\r\n\r\n# A tibble: 6 x 17\r\n  CNT   ST001D01T ST004D01T ST197Q01HA ST197Q02HA ST197Q04HA\r\n  <chr>     <dbl>     <dbl>      <dbl>      <dbl>      <dbl>\r\n1 ESP          10         1          4          4          4\r\n2 ESP           9         2          3          3          3\r\n3 ESP          10         2          4          4          4\r\n4 ESP           9         2          2          2          2\r\n5 ESP           8         2          3          3          3\r\n6 ESP           9         1          2          2          2\r\n# ... with 11 more variables: ST197Q07HA <dbl>, ST197Q08HA <dbl>,\r\n#   ST197Q09HA <dbl>, ST197Q12HA <dbl>, ST220Q01HA <dbl>,\r\n#   ST220Q02HA <dbl>, ST220Q03HA <dbl>, ST220Q04HA <dbl>,\r\n#   ST177Q01HA <dbl>, ST019AQ01T <dbl>, ST021Q01TA <dbl>\r\n\r\n#remove unneeded variables\r\n\r\npisa_tidy <- pisa %>%\r\n  \r\nselect(-c(\"ST001D01T\", \"ST004D01T\", \"ST220Q01HA\", \"ST220Q02HA\", \"ST220Q03HA\", \"ST220Q04HA\", \"ST019AQ01T\", \"ST021Q01TA\")) %>%\r\n  \r\n#rename variables\r\n  \r\nrename(country=CNT,\r\ninformed_climate_change=ST197Q01HA,\r\ninformed_global_health=ST197Q02HA,\r\ninformed_migration=ST197Q04HA,\r\ninformed_international_conflict=ST197Q07HA,\r\ninformed_world_hunger=ST197Q08HA,\r\ninformed_poverty_causes=ST197Q09HA,\r\ninformed_gender_equality=ST197Q12HA,\r\nlanguage_self=ST177Q01HA) %>%\r\n\r\n#remove NAs\r\n\r\ndrop_na %>%\r\n\r\n#recode values (I still need to come back to this and learn to use across() to recode all variables beginning with \"informed_\")\r\n  \r\nmutate(country = recode(country, ESP = \"Spain\")) %>%\r\n  \r\nmutate(informed_climate_change = recode(informed_climate_change, \r\n      `1` = \"Not informed\", \r\n      `2` = \"Not well informed\",\r\n      `3` = \"Informed\", \r\n      `4` = \"Well informed\")) %>%\r\n\r\nmutate(informed_global_health = recode(informed_global_health, \r\n      `1` = \"Not informed\", \r\n      `2` = \"Not well informed\",\r\n      `3` = \"Informed\", \r\n      `4` = \"Well informed\")) %>%\r\n\r\nmutate(informed_migration = recode(informed_migration, \r\n      `1` = \"Not informed\", \r\n      `2` = \"Not well informed\",\r\n      `3` = \"Informed\", \r\n      `4` = \"Well informed\")) %>%\r\n\r\nmutate(informed_international_conflict = recode(informed_international_conflict,\r\n      `1` = \"Not informed\", \r\n      `2` = \"Not well informed\",\r\n      `3` = \"Informed\", \r\n      `4` = \"Well informed\")) %>%\r\n\r\nmutate(informed_world_hunger = recode(informed_world_hunger, \r\n      `1` = \"Not informed\", \r\n      `2` = \"Not well informed\",\r\n      `3` = \"Informed\", \r\n      `4` = \"Well informed\")) %>%\r\n\r\nmutate(informed_poverty_causes = recode(informed_poverty_causes, \r\n      `1` = \"Not informed\", \r\n      `2` = \"Not well informed\",\r\n      `3` = \"Informed\", \r\n      `4` = \"Well informed\")) %>%\r\n\r\nmutate(informed_gender_equality = recode(informed_gender_equality, \r\n      `1` = \"Not informed\", \r\n      `2` = \"Not well informed\",\r\n      `3` = \"Informed\", \r\n      `4` = \"Well informed\")) %>%\r\n  \r\nmutate(language_self = recode(language_self, `1` = \"One\", `2` = \"Two\", `3` = \"Three\", `4` = \"Four or more\"))\r\n  \r\npisa_tidy\r\n\r\n\r\n# A tibble: 28,022 x 9\r\n   country informed_climate_change informed_global_h~ informed_migrat~\r\n   <chr>   <chr>                   <chr>              <chr>           \r\n 1 Spain   Well informed           Well informed      Well informed   \r\n 2 Spain   Informed                Not well informed  Informed        \r\n 3 Spain   Well informed           Informed           Informed        \r\n 4 Spain   Not well informed       Not informed       Informed        \r\n 5 Spain   Well informed           Not well informed  Informed        \r\n 6 Spain   Informed                Not well informed  Not well inform~\r\n 7 Spain   Informed                Informed           Informed        \r\n 8 Spain   Not well informed       Not well informed  Informed        \r\n 9 Spain   Not well informed       Informed           Informed        \r\n10 Spain   Informed                Informed           Informed        \r\n# ... with 28,012 more rows, and 5 more variables:\r\n#   informed_international_conflict <chr>,\r\n#   informed_world_hunger <chr>, informed_poverty_causes <chr>,\r\n#   informed_gender_equality <chr>, language_self <chr>\r\n\r\nResearch Question\r\nThe more I work with this data, the more my research question has narrowed. As I’m now a little less in panic mode working in R, I can also hear my undergrad professors stressing the importance of paring research questions down to be very specific. This is hard as I want to explore all the things, but I’m remembering there is plenty to dig into even in specific questions.\r\nAs of now, my research question is to explore if students in Spain feel they are better informed on 7 different topics depending on how many languages they speak well enough to converse with someone else.\r\nHow informed are you about the following topics? Climate change and global warming (informed_climate_change)\r\nHow informed are you about the following topics? Global health (e.g. epidemics) (informed_global_health)\r\nHow informed are you about the following topics? Migration (movement of people) (informed_migration)\r\nHow informed are you about the following topics? International conflicts (informed_international_conflict)\r\nHow informed are you about the following topics? Hunger or malnutrition in different parts of the world (informed_world_hunger)\r\nHow informed are you about the following topics? Causes of poverty (informed_poverty_causes)\r\nHow informed are you about the following topics? Equality between men and women in different parts of the world (informed_gender_equality)\r\nHow many languages they speak well enough to converse with others (language_self)\r\nI would love to expand this to look at all countries who responded to these variables to see if what I observe in Spain holds true elsewhere. I think this would be a much more interesting research question! Right now I’m trying to focus on the basics of R, so want to keep things on the simpler side. I did leave the variable “country” in my dataset, though, so if/when my comfort level with R increases, I can dig into things deeper.\r\nUnivariate Visualizations\r\nMy dataset is comprised of all character variables, so I have created frequencies for each as well as univariate plots showing count. These plots don’t directly answer my research question, but they do provide a general overview of each individual variable before they are grouped to explore my research question. The question asked of each participant has been included before each variable’s frequency and plot.\r\nHow informed are you about the following topics? Climate change and global warming\r\n\r\n\r\n#frequency of informed_climate_change\r\n\r\nselect(pisa_tidy, \"informed_climate_change\") %>%\r\n  group_by(informed_climate_change) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\n\r\n# A tibble: 4 x 3\r\n  informed_climate_change count frequency\r\n  <chr>                   <int>     <dbl>\r\n1 Not informed              541      1.93\r\n2 Not well informed        4000     14.3 \r\n3 Well informed            6858     24.5 \r\n4 Informed                16623     59.3 \r\n\r\n#plot for informed_climate_change\r\n\r\n  ggplot(pisa_tidy, aes(x = fct_relevel(informed_climate_change, \"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\"))) + \r\n  geom_bar (fill = \"turquoise3\", color = \"black\") +\r\n  labs(x = \"Climate Change\",\r\n       y = \"Count\",\r\n       title = \"Participants by how informed on climate change\")\r\n\r\n\r\n\r\n\r\nHow informed are you about the following topics? Global health (e.g. epidemics)\r\n\r\n\r\n#frequency of informed_global_health\r\n\r\nselect(pisa_tidy, \"informed_global_health\") %>%\r\n  group_by(informed_global_health) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\n\r\n# A tibble: 4 x 3\r\n  informed_global_health count frequency\r\n  <chr>                  <int>     <dbl>\r\n1 Not informed             467      1.67\r\n2 Well informed           3991     14.2 \r\n3 Not well informed       7249     25.9 \r\n4 Informed               16315     58.2 \r\n\r\n#plot for informed_global_health\r\n\r\n  ggplot(pisa_tidy, aes(x = fct_relevel(informed_global_health, \"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\"))) + \r\n  geom_bar (fill = \"turquoise3\", color = \"black\") +\r\n  labs(x = \"Global Health\",\r\n       y = \"Count\",\r\n       title = \"Participants by how informed on global health\")\r\n\r\n\r\n\r\n\r\nHow informed are you about the following topics? Migration (movement of people)\r\n\r\n\r\n#frequency of informed_migration\r\n\r\nselect(pisa_tidy, \"informed_migration\") %>%\r\n  group_by(informed_migration) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\n\r\n# A tibble: 4 x 3\r\n  informed_migration count frequency\r\n  <chr>              <int>     <dbl>\r\n1 Not informed         450      1.61\r\n2 Well informed       5457     19.5 \r\n3 Not well informed   5532     19.7 \r\n4 Informed           16583     59.2 \r\n\r\n#plot for informed_migration\r\n\r\n  ggplot(pisa_tidy, aes(x = fct_relevel(informed_migration, \"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\"))) + \r\n  geom_bar (fill = \"turquoise3\", color = \"black\") +\r\n  labs(x = \"Migration\",\r\n       y = \"Count\",\r\n       title = \"Participants by how informed on migration\")\r\n\r\n\r\n\r\n\r\nHow informed are you about the following topics? International conflicts\r\n\r\n\r\n#frequency of informed_international_conflict\r\n\r\nselect(pisa_tidy, \"informed_international_conflict\") %>%\r\n  group_by(informed_international_conflict) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\n\r\n# A tibble: 4 x 3\r\n  informed_international_conflict count frequency\r\n  <chr>                           <int>     <dbl>\r\n1 Not informed                      733      2.62\r\n2 Well informed                    5182     18.5 \r\n3 Not well informed                8349     29.8 \r\n4 Informed                        13758     49.1 \r\n\r\n#plot for informed_international_conflict\r\n\r\n  ggplot(pisa_tidy, aes(x = fct_relevel(informed_international_conflict, \"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\"))) + \r\n  geom_bar (fill = \"turquoise3\", color = \"black\") +\r\n  labs(x = \"International Conflict\",\r\n       y = \"Count\",\r\n       title = \"Participants by how informed on international conflict\")\r\n\r\n\r\n\r\n\r\nHow informed are you about the following topics? Hunger or malnutrition in different parts of the world\r\n\r\n\r\n#frequency of informed_world_hunger\r\n\r\nselect(pisa_tidy, \"informed_world_hunger\") %>%\r\n  group_by(informed_world_hunger) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\n\r\n# A tibble: 4 x 3\r\n  informed_world_hunger count frequency\r\n  <chr>                 <int>     <dbl>\r\n1 Not informed            345      1.23\r\n2 Not well informed      4331     15.5 \r\n3 Well informed          6887     24.6 \r\n4 Informed              16459     58.7 \r\n\r\n#plot for informed_world_hunger\r\n\r\n  ggplot(pisa_tidy, aes(x = fct_relevel(informed_world_hunger, \"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\"))) + \r\n  geom_bar (fill = \"turquoise3\", color = \"black\") +\r\n  labs(x = \"World Hunger\",\r\n       y = \"Count\",\r\n       title = \"Participants by how informed on world hunger\")\r\n\r\n\r\n\r\n\r\nHow informed are you about the following topics? Causes of poverty\r\n\r\n\r\n#frequency of informed_poverty_causes\r\n\r\nselect(pisa_tidy,\"informed_poverty_causes\") %>%\r\n  group_by(informed_poverty_causes) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\n\r\n# A tibble: 4 x 3\r\n  informed_poverty_causes count frequency\r\n  <chr>                   <int>     <dbl>\r\n1 Not informed              391      1.40\r\n2 Not well informed        5230     18.7 \r\n3 Well informed            7034     25.1 \r\n4 Informed                15367     54.8 \r\n\r\n#plot for informed_poverty_causes\r\n\r\n  ggplot(pisa_tidy, aes(x = fct_relevel(informed_poverty_causes, \"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\"))) + \r\n  geom_bar (fill = \"turquoise3\", color = \"black\") +\r\n  labs(x = \"Poverty Causes\",\r\n       y = \"Count\",\r\n       title = \"Participants by how informed on poverty causes\")\r\n\r\n\r\n\r\n\r\nHow informed are you about the following topics? Equality between men and women in different parts of the world\r\n\r\n\r\n#frequency of informed_gender_equality\r\n\r\nselect(pisa_tidy, \"informed_gender_equality\") %>%\r\n  group_by(informed_gender_equality) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\n\r\n# A tibble: 4 x 3\r\n  informed_gender_equality count frequency\r\n  <chr>                    <int>     <dbl>\r\n1 Not informed               365      1.30\r\n2 Not well informed         1671      5.96\r\n3 Informed                 11550     41.2 \r\n4 Well informed            14436     51.5 \r\n\r\n#plot for informed_gender_equality\r\n\r\n  ggplot(pisa_tidy, aes(x = fct_relevel(informed_gender_equality, \"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\"))) + \r\n  geom_bar (fill = \"turquoise3\", color = \"black\") +\r\n  labs(x = \"Gender Equality\",\r\n       y = \"Count\",\r\n       title = \"Participants by how informed on gender equality\")\r\n\r\n\r\n\r\n\r\nHow many languages do you speak well enough to converse with others?\r\n\r\n\r\n#frequency of language_self\r\n\r\nselect(pisa_tidy, \"language_self\") %>%\r\n  group_by(language_self) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\n\r\n# A tibble: 4 x 3\r\n  language_self count frequency\r\n  <chr>         <int>     <dbl>\r\n1 Four or more   2924      10.4\r\n2 One            3996      14.3\r\n3 Three         10370      37.0\r\n4 Two           10732      38.3\r\n\r\n# plot for language_self\r\n\r\n  ggplot(pisa_tidy, aes(x = fct_relevel(language_self, \"One\", \"Two\", \"Three\", \"Four or more\"))) + \r\n  geom_bar (fill = \"turquoise3\", color = \"black\") +\r\n  labs(x = \"Languages Spoken\",\r\n       y = \"Count\",\r\n       title = \"Participants by languages spoken\")\r\n\r\n\r\n\r\n\r\nThoughts on Univariate Visualizations\r\nIt’s clear after viewing these visualizations the majority of students feel informed on each topic. The one topic that stood out is gender equality as this is the only one where more students responded they feel well informed on this topic compared to just informed. Living in Spain, I know there has been a huge push in more recent years to increase education on gender equality in the country. Although it doesn’t fit with my current research question, it would be interesting to explore this variable over time using PISA datasets from previous years.\r\nWhen it comes to the number of languages spoken, I wish the dataset included a follow-up question on which languages. Many regions of Spain have a regional language so children are educated in both this language and Spanish. However, 37% of students responded that they speak three languages and 10.4% speak four or more languages, so even taking into account that speaking two languages is normal for many students in Spain, 47.4% have learned additional languages well enough to converse with others\r\nBivariate Visualizations\r\nThere are seven initial groupings I need to create to explore my research question. Therefore, the following visualizations look at how informed a student in Spain feels they are on a specific topic by how many languages they speak well enough to converse with someone.\r\n\r\n\r\n#language_self & informed_climate_change\r\n\r\nlanguage_climate_change <- select(pisa_tidy, \"language_self\", \"informed_climate_change\") %>%\r\n  group_by(language_self, informed_climate_change) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\nlanguage_climate_change\r\n\r\n\r\n# A tibble: 16 x 4\r\n# Groups:   language_self [4]\r\n   language_self informed_climate_change count frequency\r\n   <chr>         <chr>                   <int>     <dbl>\r\n 1 Four or more  Not informed               94      3.21\r\n 2 Three         Not informed              134      1.29\r\n 3 Two           Not informed              142      1.32\r\n 4 One           Not informed              171      4.28\r\n 5 Four or more  Not well informed         329     11.3 \r\n 6 One           Well informed             593     14.8 \r\n 7 One           Not well informed         957     23.9 \r\n 8 Four or more  Well informed             964     33.0 \r\n 9 Three         Not well informed        1196     11.5 \r\n10 Two           Not well informed        1518     14.1 \r\n11 Four or more  Informed                 1537     52.6 \r\n12 One           Informed                 2275     56.9 \r\n13 Two           Well informed            2332     21.7 \r\n14 Three         Well informed            2969     28.6 \r\n15 Three         Informed                 6071     58.5 \r\n16 Two           Informed                 6740     62.8 \r\n\r\nggplot(language_climate_change, \r\n       aes(x = factor (language_self, levels = c(\"One\", \"Two\", \"Three\", \"Four or more\")),\r\n           y = frequency, \r\n           fill = factor(informed_climate_change, \r\n                         levels = c(\"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\")))) + \r\n  geom_bar(stat = \"identity\", position = \"fill\") + \r\n  labs(y = \"Frequency\", fill = \"Climate Change\", x = \"Languages Spoken\", title = \"Informed on climate change by number of languages\r\n       spoken\")\r\n\r\n\r\n\r\n#language_self & informed_global_health\r\n\r\nlanguage_global_health <- select(pisa_tidy, \"language_self\", \"informed_global_health\") %>%\r\n  group_by(language_self, informed_global_health) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\nlanguage_global_health\r\n\r\n\r\n# A tibble: 16 x 4\r\n# Groups:   language_self [4]\r\n   language_self informed_global_health count frequency\r\n   <chr>         <chr>                  <int>     <dbl>\r\n 1 Four or more  Not informed              69      2.36\r\n 2 One           Not informed             126      3.15\r\n 3 Three         Not informed             133      1.28\r\n 4 Two           Not informed             139      1.30\r\n 5 One           Well informed            420     10.5 \r\n 6 Four or more  Not well informed        602     20.6 \r\n 7 Four or more  Well informed            650     22.2 \r\n 8 One           Not well informed       1303     32.6 \r\n 9 Two           Well informed           1338     12.5 \r\n10 Three         Well informed           1583     15.3 \r\n11 Four or more  Informed                1603     54.8 \r\n12 One           Informed                2147     53.7 \r\n13 Three         Not well informed       2450     23.6 \r\n14 Two           Not well informed       2894     27.0 \r\n15 Three         Informed                6204     59.8 \r\n16 Two           Informed                6361     59.3 \r\n\r\nggplot(language_global_health, \r\n       aes(x = factor (language_self, levels = c(\"One\", \"Two\", \"Three\", \"Four or more\")),\r\n           y = frequency, \r\n           fill = factor(informed_global_health, \r\n                         levels = c(\"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\")))) + \r\n  geom_bar(stat = \"identity\", position = \"fill\") + \r\n  labs(y = \"Frequency\", fill = \"Global Health\", x = \"Languages Spoken\", title = \"Informed on global health by number of languages spoken\")\r\n\r\n\r\n\r\n#language_self & informed_migration\r\n\r\nlanguage_migration <- select(pisa_tidy, \"language_self\", \"informed_migration\") %>%\r\n  group_by(language_self, informed_migration) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(informed_migration)\r\n\r\nlanguage_migration\r\n\r\n\r\n# A tibble: 16 x 4\r\n# Groups:   language_self [4]\r\n   language_self informed_migration count frequency\r\n   <chr>         <chr>              <int>     <dbl>\r\n 1 Four or more  Informed            1538     52.6 \r\n 2 One           Informed            2301     57.6 \r\n 3 Three         Informed            6196     59.7 \r\n 4 Two           Informed            6548     61.0 \r\n 5 Four or more  Not informed          81      2.77\r\n 6 One           Not informed         134      3.35\r\n 7 Three         Not informed         122      1.18\r\n 8 Two           Not informed         113      1.05\r\n 9 Four or more  Not well informed    455     15.6 \r\n10 One           Not well informed    948     23.7 \r\n11 Three         Not well informed   1881     18.1 \r\n12 Two           Not well informed   2248     20.9 \r\n13 Four or more  Well informed        850     29.1 \r\n14 One           Well informed        613     15.3 \r\n15 Three         Well informed       2171     20.9 \r\n16 Two           Well informed       1823     17.0 \r\n\r\nggplot(language_migration, \r\n       aes(x = factor (language_self, levels = c(\"One\", \"Two\", \"Three\", \"Four or more\")),\r\n           y = frequency, \r\n           fill = factor(informed_migration, \r\n                         levels = c(\"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\")))) + \r\n  geom_bar(stat = \"identity\", position = \"fill\") + \r\n  labs(y = \"Frequency\", fill = \"Migration\", x = \"Languages Spoken\", title = \"Informed on migration by number of languages spoken\")\r\n\r\n\r\n\r\n#language_self & informed_international_conflict\r\n\r\nlanguage_international_conflict <- select(pisa_tidy, \"language_self\", \"informed_international_conflict\") %>%\r\n  group_by(language_self, informed_international_conflict) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\nlanguage_international_conflict\r\n\r\n\r\n# A tibble: 16 x 4\r\n# Groups:   language_self [4]\r\n   language_self informed_international_conflict count frequency\r\n   <chr>         <chr>                           <int>     <dbl>\r\n 1 Four or more  Not informed                       90      3.08\r\n 2 One           Not informed                      195      4.88\r\n 3 Three         Not informed                      222      2.14\r\n 4 Two           Not informed                      226      2.11\r\n 5 One           Well informed                     530     13.3 \r\n 6 Four or more  Not well informed                 680     23.3 \r\n 7 Four or more  Well informed                     821     28.1 \r\n 8 Four or more  Informed                         1333     45.6 \r\n 9 One           Not well informed                1480     37.0 \r\n10 Two           Well informed                    1710     15.9 \r\n11 One           Informed                         1791     44.8 \r\n12 Three         Well informed                    2121     20.5 \r\n13 Three         Not well informed                2870     27.7 \r\n14 Two           Not well informed                3319     30.9 \r\n15 Three         Informed                         5157     49.7 \r\n16 Two           Informed                         5477     51.0 \r\n\r\nggplot(language_international_conflict, \r\n       aes(x = factor (language_self, levels = c(\"One\", \"Two\", \"Three\", \"Four or more\")),\r\n           y = frequency, \r\n           fill = factor(informed_international_conflict, \r\n                         levels = c(\"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\")))) + \r\n  geom_bar(stat = \"identity\", position = \"fill\") + \r\n  labs(y = \"Frequency\", fill = \"International Conflict\", x = \"Languages Spoken\", title = \"Informed on international conflict by number of languages spoken\")\r\n\r\n\r\n\r\n#language_self & informed_world_hunger\r\n\r\nlanguage_world_hunger <- select(pisa_tidy, \"language_self\", \"informed_world_hunger\") %>%\r\n  group_by(language_self, informed_world_hunger) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\nlanguage_world_hunger\r\n\r\n\r\n# A tibble: 16 x 4\r\n# Groups:   language_self [4]\r\n   language_self informed_world_hunger count frequency\r\n   <chr>         <chr>                 <int>     <dbl>\r\n 1 Four or more  Not informed             61     2.09 \r\n 2 Two           Not informed             92     0.857\r\n 3 Three         Not informed             95     0.916\r\n 4 One           Not informed             97     2.43 \r\n 5 Four or more  Not well informed       381    13.0  \r\n 6 One           Not well informed       780    19.5  \r\n 7 One           Well informed           793    19.8  \r\n 8 Four or more  Well informed           954    32.6  \r\n 9 Three         Not well informed      1453    14.0  \r\n10 Four or more  Informed               1528    52.3  \r\n11 Two           Not well informed      1717    16.0  \r\n12 One           Informed               2326    58.2  \r\n13 Two           Well informed          2409    22.4  \r\n14 Three         Well informed          2731    26.3  \r\n15 Three         Informed               6091    58.7  \r\n16 Two           Informed               6514    60.7  \r\n\r\nggplot(language_world_hunger, \r\n       aes(x = factor (language_self, levels = c(\"One\", \"Two\", \"Three\", \"Four or more\")),\r\n           y = frequency, \r\n           fill = factor(informed_world_hunger, \r\n                         levels = c(\"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\")))) + \r\n  geom_bar(stat = \"identity\", position = \"fill\") + \r\n  labs(y = \"Frequency\", fill = \"World Hunger\", x = \"Languages Spoken\", title = \"Informed on world hunger by number of languages spoken\")\r\n\r\n\r\n\r\n#language_self & informed_poverty_causes\r\n\r\nlanguage_poverty_causes <- select(pisa_tidy, \"language_self\", \"informed_poverty_causes\") %>%\r\n  group_by(language_self, informed_poverty_causes) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\nlanguage_poverty_causes\r\n\r\n\r\n# A tibble: 16 x 4\r\n# Groups:   language_self [4]\r\n   language_self informed_poverty_causes count frequency\r\n   <chr>         <chr>                   <int>     <dbl>\r\n 1 Four or more  Not informed               62     2.12 \r\n 2 Two           Not informed              106     0.988\r\n 3 One           Not informed              108     2.70 \r\n 4 Three         Not informed              115     1.11 \r\n 5 Four or more  Not well informed         434    14.8  \r\n 6 One           Well informed             825    20.6  \r\n 7 One           Not well informed         894    22.4  \r\n 8 Four or more  Well informed             998    34.1  \r\n 9 Four or more  Informed                 1430    48.9  \r\n10 Three         Not well informed        1789    17.3  \r\n11 Two           Not well informed        2113    19.7  \r\n12 One           Informed                 2169    54.3  \r\n13 Two           Well informed            2409    22.4  \r\n14 Three         Well informed            2802    27.0  \r\n15 Three         Informed                 5664    54.6  \r\n16 Two           Informed                 6104    56.9  \r\n\r\nggplot(language_poverty_causes, \r\n       aes(x = factor (language_self, levels = c(\"One\", \"Two\", \"Three\", \"Four or more\")),\r\n           y = frequency, \r\n           fill = factor(informed_poverty_causes, \r\n                         levels = c(\"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\")))) + \r\n  geom_bar(stat = \"identity\", position = \"fill\") + \r\n  labs(y = \"Frequency\", fill = \"Poverty Causes\", x = \"Languages Spoken\", title = \"Informed on poverty causes by number of languages spoken\")\r\n\r\n\r\n\r\n#language_self & informed_gender_equality\r\n\r\nlanguage_gender_equality <- select(pisa_tidy, \"language_self\", \"informed_gender_equality\") %>%\r\n  group_by(language_self, informed_gender_equality) %>%\r\nsummarise(count = n()) %>%\r\n  mutate(frequency = count/sum(count) * 100) %>%\r\n  arrange(count)\r\n\r\nlanguage_gender_equality\r\n\r\n\r\n# A tibble: 16 x 4\r\n# Groups:   language_self [4]\r\n   language_self informed_gender_equality count frequency\r\n   <chr>         <chr>                    <int>     <dbl>\r\n 1 Four or more  Not informed                72     2.46 \r\n 2 Two           Not informed                80     0.745\r\n 3 Three         Not informed                90     0.868\r\n 4 One           Not informed               123     3.08 \r\n 5 Four or more  Not well informed          154     5.27 \r\n 6 One           Not well informed          393     9.83 \r\n 7 Three         Not well informed          490     4.73 \r\n 8 Two           Not well informed          634     5.91 \r\n 9 Four or more  Informed                   966    33.0  \r\n10 One           Well informed             1634    40.9  \r\n11 Four or more  Well informed             1732    59.2  \r\n12 One           Informed                  1846    46.2  \r\n13 Three         Informed                  4004    38.6  \r\n14 Two           Informed                  4734    44.1  \r\n15 Two           Well informed             5284    49.2  \r\n16 Three         Well informed             5786    55.8  \r\n\r\nggplot(language_gender_equality, \r\n       aes(x = factor (language_self, levels = c(\"One\", \"Two\", \"Three\", \"Four or more\")),\r\n           y = frequency, \r\n           fill = factor(informed_gender_equality, \r\n                         levels = c(\"Not informed\", \"Not well informed\", \"Informed\", \"Well informed\")))) + \r\n  geom_bar(stat = \"identity\", position = \"fill\") + \r\n  labs(y = \"Frequency\", fill = \"Gender Equality\", x = \"Languages Spoken\", title = \"Informed on gender equality by number of languages spoken\")\r\n\r\n\r\n\r\n\r\nThoughts on Bivariate Visualizations\r\nIn each of the above visualizations, it’s evident that the more languages a student speaks the more well informed they feel about the given topic. Interestingly, if you look at informed and well informed together, in three of the seven topics (climate change, world hunger and gender equality) students who speak four or more languages felt slightly less informed overall than students speaking three languages. Calculating this difference would be a helpful statistic to include in my analysis.\r\nImproving Visualizations\r\nI would like to add percentages to my visualizations as this would aid myself and a “naive viewer” in understanding what they are seeing without having to read the tibbles that display this information. I also don’t love the titles of each visualization and believe they could be improved.\r\nI imagine there are other styles of visualizations that could also be created. I still feel pretty uncertain on plotting, though, so poco a poco (little by little).\r\nUnanswered Questions\r\nAlthough it’s clear there is a positive correlation between the number of languages spoken and how informed students feel they are on these seven topics (variables), I don’t believe this analysis alone is enough to conclude that more languages you speak the better informed you are on these topics. There are many other variables that could be at play.\r\nThings I would want to explore further are:\r\nWhere does the student live (urban or rural city)?\r\nDoes the student attend a public, semi-private or private school?\r\nHow informed do the student’s parents feel on these topics?\r\nWhat are the parents’ education levels?\r\nWhat is the family’s income level?\r\nFor instance, I hypothesize that students attending private schools in urban cities would speak more languages, and if this is the case, these variables combined with family income and/or parents level of education could be what impacts how informed a student is on certain topics and not the number of languages the student speaks. I will have to do some investigating in the original dataset to see if any of these other variables are available. I believe there is also a parent questionnaire, so it’s possible I could join datasets to explore things further. A challenge with this could be the size of the datasets, though, and the limited memory available on my computer to work with them.\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomlcollazohw4/distill-preview.png",
    "last_modified": "2022-02-23T19:18:59-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomnorthonum869986/",
    "title": "HW4 - ATP Tennis Statiistics",
    "description": "Expanded analysis of match statitistics spanning multiple decades of ATP Professional Tennis seasons.",
    "author": [
      {
        "name": "Jason O'Connell",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\r\nHW4 Overview\r\nThis is homework assignment #4 for Jason O’Connell. I have found some interesting data on profession tennis on github and I think I will use this for my final project.\r\nFor this homework I will bring in a few data file from various years and try somethings to compare the data between files\r\nInitialize Libraries\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(readr)\r\nlibrary(readxl)\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\n\r\n\r\n\r\nRead the data\r\nFirst read ATP data files, here I am using only the results from 1980, 1990, 2000, 2010 from GITHUB source\r\n\r\n\r\nATP1980 <- read.csv(\"https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_1980.csv\")\r\nATP1990 <- read.csv(\"https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_1990.csv\")\r\nATP2000 <- read.csv(\"https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_2000.csv\")\r\nATP2010 <- read.csv(\"https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_2010.csv\")\r\n\r\n\r\n\r\nIncluding Improved HW3 Plot\r\nFirst I will improve on my visuals from last HW and look at them with the new data from this homework.\r\n\r\n\r\n# ATP1980 %>%\r\n#   drop_na(winner_ht, loser_ht) %>%\r\n#   group_by(winner_ht, loser_ht) %>%\r\n#   summarise(winner_ht,loser_ht, count = n())\r\n\r\nggplot( ATP1980 %>%\r\n          drop_na(winner_ht, loser_ht) %>%\r\n          mutate(ht_diff=winner_ht-loser_ht) %>%\r\n          group_by(surface, ht_diff) %>%\r\n          summarise(surface, ht_diff, count = n()), aes(x=ht_diff, y=count)) + \r\n  geom_point(aes(color=surface)) +\r\n  geom_smooth(aes(color=surface)) +\r\n  labs(title=\"1980 Match Winner vs. Loser Height Differance by Surface\", x=\"Height Difference\", y=\"Number of Matches\")\r\n\r\n\r\n\r\n\r\nInsights\r\nThis graphs is a huge improvement over what I was doing in the last HW. Learning geom_smooth() in tutorial 6 really helps. I can quickly see the blank surface data is sort of noise that I should eliminate. Also can see pretty easily the the data is skewed toward the taller player winning but also the more matches are played on clay then hard, then carpet?, and finally grass. I am not sure they even play on carpet anymore - we will check in the 2010 file.\r\nIn the other files missing court surface isn’t an issue. Let’e redo 1980 eliminating the missing surface rows and inlcude the other years with the same plot:\r\n1980\r\n\r\n\r\nggplot( ATP1980 %>%\r\n          drop_na(winner_ht, loser_ht) %>%\r\n          filter(!grepl('clay|hard|carpet|grass', surface)) %>%\r\n          mutate(ht_diff=winner_ht-loser_ht) %>%\r\n          group_by(surface, ht_diff) %>%\r\n          summarise(surface, ht_diff, count = n()), aes(x=ht_diff, y=count)) + \r\n  geom_point(aes(color=surface)) +\r\n  geom_smooth(aes(color=surface)) +\r\n  labs(title=\"1980 Match Winner vs. Loser Height Differance by Surface\", x=\"Height Difference\", y=\"Number of Matches\")\r\n\r\n\r\n\r\n\r\nWell can’t figure out why that didn’t work? I am hoping to eliminate the null or blank surface using grepl.\r\n1990\r\n\r\n\r\nggplot( ATP1990 %>%\r\n          drop_na(winner_ht, loser_ht) %>%\r\n          mutate(ht_diff=winner_ht-loser_ht) %>%\r\n          group_by(surface, ht_diff) %>%\r\n          summarise(surface, ht_diff, count = n()), aes(x=ht_diff, y=count)) + \r\n  geom_point(aes(color=surface)) +\r\n  geom_smooth(aes(color=surface)) +\r\n  labs(title=\"1990 Match Winner vs. Loser Height Differance by Surface\", x=\"Height Difference\", y=\"Number of Matches\")\r\n\r\n\r\n\r\n\r\nThat one looks pretty good.\r\n2000\r\n\r\n\r\nggplot( ATP2000 %>%\r\n          drop_na(winner_ht, loser_ht) %>%\r\n          mutate(ht_diff=winner_ht-loser_ht) %>%\r\n          group_by(surface, ht_diff) %>%\r\n          summarise(surface, ht_diff, count = n()), aes(x=ht_diff, y=count)) + \r\n  geom_point(aes(color=surface)) +\r\n  geom_smooth(aes(color=surface)) +\r\n  labs(title=\"2000 Match Winner vs. Loser Height Differance by Surface\", x=\"Height Difference\", y=\"Number of Matches\")\r\n\r\n\r\n\r\n\r\nSame for this one.\r\n2010\r\n\r\n\r\nggplot( ATP2010 %>%\r\n          drop_na(winner_ht, loser_ht) %>%\r\n          filter(!grepl('clay|hard|grass', surface)) %>%\r\n          mutate(ht_diff=winner_ht-loser_ht) %>%\r\n          group_by(surface, ht_diff) %>%\r\n          summarise(surface, ht_diff, count = n()), aes(x=ht_diff, y=count)) +\r\n  geom_point(aes(color=surface)) +\r\n  geom_smooth(aes(color=surface)) +\r\n  labs(title=\"2010 Match Winner vs. Loser Height Differance by Surface\", x=\"Height Difference\", y=\"Number of Matches\")\r\n\r\n\r\n\r\n\r\nHmmm I’ve got a weird outlier - let’s get rid of that.\r\n2010v2\r\n\r\n\r\nggplot( ATP2010 %>%\r\n          drop_na(winner_ht, loser_ht) %>%\r\n          filter(!grepl('clay|hard|grass', surface)) %>%\r\n          mutate(ht_diff=winner_ht-loser_ht) %>%\r\n         filter(ht_diff < 100) %>%\r\n          group_by(surface, ht_diff) %>%\r\n          summarise(surface, ht_diff, count = n()), aes(x=ht_diff, y=count)) +\r\n  geom_point(aes(color=surface)) +\r\n  geom_smooth(aes(color=surface)) +\r\n  labs(title=\"2010 Match Winner vs. Loser Height Differance by Surface\", x=\"Height Difference\", y=\"Number of Matches\")\r\n\r\n\r\n\r\n\r\nEliminated the outlier but geom_smooth still didn’t work for this one weird.\r\nCombine the data and compare years\r\nNow I will combine the data sets and see what it looks like over the decades. First let’s look at the violin chart.\r\n\r\n\r\nggplot( bind_rows(mutate(ATP1980,season = \"1980\"),mutate(ATP1990, season = \"1990\"), mutate(ATP2000, season = \"2000\"), mutate(ATP2010, season = \"2010\")) %>%\r\n         drop_na(winner_ht, loser_ht) %>%\r\n         mutate(ht_diff=winner_ht-loser_ht) %>%\r\n         filter(ht_diff < 100) %>%\r\n         group_by(season, ht_diff) %>%\r\n         summarise(season, ht_diff, count = n()), aes(x=season, y=ht_diff, fill=season)) + \r\n  geom_violin() +\r\n  labs(title=\"Match Winner vs. Loser Height Differance by Season\", x=\"Season\", y=\"Height Differance\")\r\n\r\n\r\n\r\n\r\nCombined Data Files - Second try\r\n\r\n\r\nggplot( bind_rows(mutate(ATP1980,season = \"1980\"),mutate(ATP1990, season = \"1990\"), mutate(ATP2000, season = \"2000\"), mutate(ATP2010, season = \"2010\")) %>%\r\n         drop_na(winner_ht, loser_ht) %>%\r\n         mutate(ht_diff=winner_ht-loser_ht) %>%\r\n         filter(ht_diff < 100) %>%\r\n         group_by(season, ht_diff) %>%\r\n         summarise(season, ht_diff, count = n()), aes(x=ht_diff, y=count)) + \r\n  geom_point(aes(color=season)) +\r\n  geom_smooth(aes(color=season)) +\r\n  labs(title=\"Match Winner vs. Loser Height Differance by Season\", x=\"Height Difference\", y=\"Number of Matches\")\r\n\r\n\r\n\r\n\r\nResults\r\nNew stuff used: filter, bind_rows, geom_smooth Unsuccessfully used: grepl, geom_smooth(2010) Despite racket technology, fitness, and several other factors have changed the game over the years difference in player heigh doesn’t seem to predict the winner of a match.\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomnorthonum869986/distill-preview.png",
    "last_modified": "2022-02-23T19:19:05-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomethancampbell870024/",
    "title": "Ethan Campbell HW3",
    "description": "Fort Worth Climate data.",
    "author": [
      {
        "name": "Ethan Campbell",
        "url": {}
      }
    ],
    "date": "2022-02-23",
    "categories": [],
    "contents": "\r\nImporting data\r\nImporting and viewing the data to determine major cleaning changes that need to be made.\r\n\r\n\r\nFort_Worth <- read.csv(\"Fort_Worth_climate.csv\", skip = 18)\r\n\r\n#head(Fort_Worth)\r\n\r\n#view(Fort_Worth)\r\n#str(Fort_Worth)\r\n\r\nMonth_combined <- Fort_Worth %>%\r\npivot_longer(\r\n  cols = c(NOV, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, DEC),\r\n  names_to = \"MONTH\",\r\n  values_to = \"Month_AVG\",\r\n)\r\n\r\nMonth_combined\r\n\r\n\r\n# A tibble: 4,800 x 5\r\n   PARAMETER  YEAR   ANN MONTH Month_AVG\r\n   <chr>     <int> <dbl> <chr>     <dbl>\r\n 1 PS         1981  98.6 NOV        98.8\r\n 2 PS         1981  98.6 JAN        99.2\r\n 3 PS         1981  98.6 FEB        99  \r\n 4 PS         1981  98.6 MAR        98.5\r\n 5 PS         1981  98.6 APR        98.6\r\n 6 PS         1981  98.6 MAY        98.2\r\n 7 PS         1981  98.6 JUN        98.3\r\n 8 PS         1981  98.6 JUL        98.5\r\n 9 PS         1981  98.6 AUG        98.4\r\n10 PS         1981  98.6 SEP        98.6\r\n# ... with 4,790 more rows\r\n\r\nMonth_combined %>%\r\nselect(\"PARAMETER\", \"YEAR\", \"MONTH\", \"Month_AVG\", \"ANN\")\r\n\r\n\r\n# A tibble: 4,800 x 5\r\n   PARAMETER  YEAR MONTH Month_AVG   ANN\r\n   <chr>     <int> <chr>     <dbl> <dbl>\r\n 1 PS         1981 NOV        98.8  98.6\r\n 2 PS         1981 JAN        99.2  98.6\r\n 3 PS         1981 FEB        99    98.6\r\n 4 PS         1981 MAR        98.5  98.6\r\n 5 PS         1981 APR        98.6  98.6\r\n 6 PS         1981 MAY        98.2  98.6\r\n 7 PS         1981 JUN        98.3  98.6\r\n 8 PS         1981 JUL        98.5  98.6\r\n 9 PS         1981 AUG        98.4  98.6\r\n10 PS         1981 SEP        98.6  98.6\r\n# ... with 4,790 more rows\r\n\r\nstr(Month_combined)\r\n\r\n\r\ntibble [4,800 x 5] (S3: tbl_df/tbl/data.frame)\r\n $ PARAMETER: chr [1:4800] \"PS\" \"PS\" \"PS\" \"PS\" ...\r\n $ YEAR     : int [1:4800] 1981 1981 1981 1981 1981 1981 1981 1981 1981 1981 ...\r\n $ ANN      : num [1:4800] 98.6 98.6 98.6 98.6 98.6 ...\r\n $ MONTH    : chr [1:4800] \"NOV\" \"JAN\" \"FEB\" \"MAR\" ...\r\n $ Month_AVG: num [1:4800] 98.8 99.2 99 98.5 98.6 ...\r\n\r\nTypes of data\r\nparameter = CHR\r\nyear = Int\r\nMonths = NUM\r\nMonth_AVG = NUM\r\nANN or AnnualAVG = NUM\r\nThe questions I want to answer with this data is\r\nDoes precipitation increase or decrease over the years and when was it the highest and lowest.\r\nIs there a change in humidity and does it correlate with the change in precipitation, wind, and temperature.\r\nDoes the temperature increase over the years or is it decreasing and does it correlate to the other variables?\r\nWhen considering all variables is there a noticeable change in the climate?\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-23T19:19:10-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomamarkowitzhw3/",
    "title": "HW3",
    "description": "Identifying data for Final Project",
    "author": [
      {
        "name": "Ari Markowitz",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\nOverview:\nThis analysis will combine country level data to see how cultural indicators drive COVID-19 vaccination rates around the world, and how different health systems, and strength of those impact that relationship. I will combine three different datasets at the country level:\n1: Cultural indicators from Geert Hofstede’s Cultural Dimensions Theory Data\n2: National Vaccination Rates from Open-Source Github Repo: https://github.com/owid/covid-19-data\n3: National Health System Classification Data - TBD\n4: Global Country Indicators (Income, Income Per Capita, Government Type (indexes?), Population etc…) - TBD\nRead In Geert Hofstede’s Cultural Dimensions Theory Data From Data.World\n\n\nculture_indices <- read.csv2(\"https://query.data.world/s/c4dbzx65xq3bnkf65gnutajtb2566a\", header=TRUE, stringsAsFactors=FALSE) %>%\n      na_if(\"#NULL!\")\nhead(df)\n\n\n                                              \n1 function (x, df1, df2, ncp, log = FALSE)    \n2 {                                           \n3     if (missing(ncp))                       \n4         .Call(C_df, x, df1, df2, log)       \n5     else .Call(C_dnf, x, df1, df2, ncp, log)\n6 }                                           \n\nRead in National Vaccination Rates from Open Source Github Repo\n\n\n\"https://github.com/owid/covid-19-data/tree/master/public/data/vaccinations/country_data\" %>%\n            read_html() %>%\n            html_nodes(xpath = '//*[@role=\"rowheader\"]') %>%\n            html_nodes('span a') %>%\n            html_attr('href') %>%\n            sub('blob/', '', .) %>%\n            paste0('https://raw.githubusercontent.com', .) %>%\n            purrr::map_df(read.csv) ->  vaccine_data\n\nhead(vaccine_data)\n\n\n     location       date\n1 Afghanistan 2021-02-22\n2 Afghanistan 2021-02-28\n3 Afghanistan 2021-03-16\n4 Afghanistan 2021-04-07\n5 Afghanistan 2021-04-22\n6 Afghanistan 2021-05-11\n                                                 vaccine\n1                                     Oxford/AstraZeneca\n2                                     Oxford/AstraZeneca\n3                                     Oxford/AstraZeneca\n4                                     Oxford/AstraZeneca\n5                                     Oxford/AstraZeneca\n6 Oxford/AstraZeneca, Pfizer/BioNTech, Sinopharm/Beijing\n                                                                                                    source_url\n1                                                                 https://tolonews.com/index.php/health-170225\n2                                                                 https://tolonews.com/index.php/health-170355\n3                                      http://www.xinhuanet.com/english/asiapacific/2021-03/16/c_139814668.htm\n4                                      http://www.xinhuanet.com/english/asiapacific/2021-04/07/c_139864755.htm\n5 https://reliefweb.int/report/afghanistan/afghanistan-strategic-situation-report-covid-19-no-95-22-april-2021\n6                                                                                     https://covid19.who.int/\n  total_vaccinations people_vaccinated people_fully_vaccinated\n1                  0                 0                      NA\n2               8200              8200                      NA\n3              54000             54000                      NA\n4             120000            120000                      NA\n5             240000            240000                      NA\n6             504502            448878                   55624\n  total_boosters people_partly_vaccinated\n1             NA                       NA\n2             NA                       NA\n3             NA                       NA\n4             NA                       NA\n5             NA                       NA\n6             NA                       NA\n\nJoin Datasets\nKeep only the most up to date vaccination data\n\n\ndf <- vaccine_data %>% \n            arrange(desc(date)) %>%\n            distinct(location, .keep_all= TRUE) %>%\n            full_join(culture_indices,by=c(\"location\"=\"country\"))\n          \nprint(head(df))\n\n\n    location       date\n1  Argentina 2022-02-15\n2      Aruba 2022-02-15\n3  Australia 2022-02-15\n4 Azerbaijan 2022-02-15\n5     Brazil 2022-02-15\n6   Bulgaria 2022-02-15\n                                                                              vaccine\n1 CanSino, Moderna, Oxford/AstraZeneca, Pfizer/BioNTech, Sinopharm/Beijing, Sputnik V\n2                                                                     Pfizer/BioNTech\n3                                        Moderna, Oxford/AstraZeneca, Pfizer/BioNTech\n4                             Oxford/AstraZeneca, Pfizer/BioNTech, Sinovac, Sputnik V\n5                       Johnson&Johnson, Pfizer/BioNTech, Oxford/AstraZeneca, Sinovac\n6                       Johnson&Johnson, Oxford/AstraZeneca, Moderna, Pfizer/BioNTech\n                                                                           source_url\n1                           https://www.argentina.gob.ar/coronavirus/vacuna/aplicadas\n2                                                           https://www.government.aw\n3                                                            https://covidbaseau.com/\n4 https://koronavirusinfo.az/storage/app/MvN7udDQpfRpye6gH9GF7aIwLueGHk0PTRK18Rvg.pdf\n5                                                   https://coronavirusbra1.github.io\n6                                                https://coronavirus.bg/bg/statistika\n  total_vaccinations people_vaccinated people_fully_vaccinated\n1           91223956          40072715                35528853\n2             167315             87115                   80200\n3           52635184          21933086                20384601\n4           12549963           5270596                 4766430\n5          379776348         174665423               152576040\n6            4254776                NA                 2030626\n  total_boosters people_partly_vaccinated  ctr  pdi  idv  mas  uai\n1       15346048                       NA  ARG   49   46   56   86\n2             NA                       NA <NA> <NA> <NA> <NA> <NA>\n3       10317497                       NA  AUL   38   90   61   51\n4        2512937                       NA  AZE <NA> <NA> <NA> <NA>\n5       57563050                       NA  BRA   69   38   49   76\n6         659963                       NA  BUL   70   30   40   85\n  ltowvs  ivr\n1     20   62\n2   <NA> <NA>\n3     21   71\n4     61   22\n5     44   59\n6     69   16\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-20T13:37:39-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomhmuleyumass867799/",
    "title": "HW 2 Try 2",
    "description": "hw2 try 2",
    "author": [
      {
        "name": "Henry Mulvey",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\r\nhw2/3 code\r\ninstall.packages(“tidyverse”) install.packages(“dplyr”)\r\ninstall.packages(“grepl”)\r\nlibrary(“tidyverse”) library(“dplyr”) library(“tidyr”)\r\nlibrary(readxl) hotel_bookings <- read_excel(“hotel_bookings.xlsx”) View(hotel_bookings)\r\nhotel, kind of hotel, text\r\nis_canceled, number of cancellations, numeric\r\nlead_time, how many days in advance the bookings were made\r\narrival_date_year, year of booking, date\r\narrival_date_month, month of booking, date\r\narrival_date_week_number, week number of the year that the booking was in, date\r\narrival_date_day_of_month, day of the month the arrival, date\r\nstays_in_weekend_nights, how many weekend nights the bookings covered, numeric\r\nstays_in_week_nights, how many week nights the bookings covered, numeric\r\nadults, number of adults associated with the bookings, numeric\r\nchildren, number of children associated with the bookings, numeric\r\nbabies, number of babies associated with the bookings, numeric\r\nmeal, not sure, numeric\r\ncountry, the country the hotel is in, text\r\nmarket_segment, not sure, text\r\ndistribution_channel, not sure, text\r\nis_repeated_guest, if the guest stayed at that hotel before, binary\r\nprevious_cancellations, if the guest had previously canceled a reservation, binary\r\nprevious_bookings_not_canceled, if the guest had previously had a reservation that they did not, binary\r\nreserved_room_type, type of room reserved, letter\r\nassigned_room_type, type of room received, letter\r\nbooking_changes, number of times reservation was changed, numeric\r\ndeposit_type, if a deposit was put on the room, text\r\nagent, not sure, numeric\r\ncompany, not sure, numeric\r\ndays_in_waiting_list, how long a reservation was on a waiting list\r\ncustomer_type, not sure, text\r\nadr, not sure, numeric\r\nrequired_car_parking_spaces, number of vehicle parking spaces required by the reservation, numeric\r\ntotal_of_special_requests, number of special requests, numeric\r\nreservation_status, what was the status of the reservation when the data was collected, text\r\nreservation_status_date, the date when the reservation_status was recorded, date\r\nusa_hotels <- filter(hotel_bookings, country == USA) view(usa_hotels)\r\nusa_hotels isolates the hotels in the datasheet that are in theUnited States\r\nmax_wk_nignts_usa <- arrange(usa_hotels, (desc(stays_in_week_nights)) view(max_wk_nignts_usa)\r\nmax_wk_nignts_usa shows the hotels in the United States ranked by how long stays during the week were\r\nR Markdown\r\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\r\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\r\n\r\n\r\nsummary(cars)\r\n\r\n\r\n     speed           dist       \r\n Min.   : 4.0   Min.   :  2.00  \r\n 1st Qu.:12.0   1st Qu.: 26.00  \r\n Median :15.0   Median : 36.00  \r\n Mean   :15.4   Mean   : 42.98  \r\n 3rd Qu.:19.0   3rd Qu.: 56.00  \r\n Max.   :25.0   Max.   :120.00  \r\n\r\nIncluding Plots\r\nYou can also embed plots, for example:\r\n\r\n\r\n\r\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomhmuleyumass867799/distill-preview.png",
    "last_modified": "2022-02-20T13:37:44-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomhmuleyumass867804/",
    "title": "Mulvey_HW3",
    "description": "Research Question Homework",
    "author": [
      {
        "name": "Henry Mulvey",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\r\nHW3\r\nlibrary(“tidyverse”) library(“dplyr”)\r\nlibrary(readxl) MBTA_bus_all2 <- read_excel(“MBTA_bus_all2.xlsx”) View(MBTA_bus_all2)\r\nmode, type of transit vehicle (bus), numeral\r\nseason, text\r\nroute_id and route_name, number of transit route\r\nstop_sequence, not sure, numeral\r\ndirection_id, not sure, numeral\r\nday_type_id, numerical representation of day_type_name, numeral\r\nday_type_nam, weekday or weekend, text\r\ntime_period_id, not sure, text\r\nstop_name, name of transit stop, text\r\nstop_id, numerical id of transit stop, numeral\r\naverage_ons, average of boardings at that transit stop, numeral\r\naverage_offs, average of people getting off at that transit stop, numeral\r\naverage_load, I think average percentage of bus occupancy at that transit stop, percentage\r\nnum_trips, I think number of trips that day that serviced that stop, numeral\r\nrdm_all <- filter(MBTA_bus_all2, route_name > 13 & route_name < 31) view(rdm_all)\r\nrdm_all isolates all of the bus stops in the Boston neighborhoods of Roxbury, Dorchester, and Mattapan\r\npopular_stops_rdm <- arrange(rdm_all, desc(average_ons)) view(popular_stops_rdm)\r\npopular_stops_rdm ranks all of the stops in rdm_all by the average number of people that get on the bus at that stop\r\nresearch question: what are the routes that have the highest ridership in the Boston neighborhoods of Roxbury, Dorchester, and Mattapan and which should get transit priority treatments?\r\nR Markdown\r\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\r\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\r\n\r\n\r\nsummary(cars)\r\n\r\n\r\n     speed           dist       \r\n Min.   : 4.0   Min.   :  2.00  \r\n 1st Qu.:12.0   1st Qu.: 26.00  \r\n Median :15.0   Median : 36.00  \r\n Mean   :15.4   Mean   : 42.98  \r\n 3rd Qu.:19.0   3rd Qu.: 56.00  \r\n Max.   :25.0   Max.   :120.00  \r\n\r\nIncluding Plots\r\nYou can also embed plots, for example:\r\n\r\n\r\n\r\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomhmuleyumass867804/distill-preview.png",
    "last_modified": "2022-02-20T13:37:49-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomnorthonum867107/",
    "title": "HW2 - Submission 2",
    "description": "HW2 Submission",
    "author": [
      {
        "name": "Jason O'Connell",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\r\nLoad Libraries need for this routine\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(readr)\r\nlibrary(readxl)\r\n#library(dplyr)\r\n\r\n\r\n\r\n##Read Read in a clean data set\r\n\r\n\r\negg <- read_excel(\"_data/eggs_tidy.xlsx\")\r\nhead(egg)\r\n\r\n\r\n# A tibble: 6 x 6\r\n  month     year large_half_dozen large_dozen extra_large_half_dozen\r\n  <chr>    <dbl>            <dbl>       <dbl>                  <dbl>\r\n1 January   2004             126         230                    132 \r\n2 February  2004             128.        226.                   134.\r\n3 March     2004             131         225                    137 \r\n4 April     2004             131         225                    137 \r\n5 May       2004             131         225                    137 \r\n6 June      2004             134.        231.                   137 \r\n# ... with 1 more variable: extra_large_dozen <dbl>\r\n\r\npoultry <- read_csv(\"_data/poultry_tidy.csv\")\r\nhead(poultry)\r\n\r\n\r\n# A tibble: 6 x 4\r\n  Product  Year Month    Price_Dollar\r\n  <chr>   <dbl> <chr>           <dbl>\r\n1 Whole    2013 January          2.38\r\n2 Whole    2013 February         2.38\r\n3 Whole    2013 March            2.38\r\n4 Whole    2013 April            2.38\r\n5 Whole    2013 May              2.38\r\n6 Whole    2013 June             2.38\r\n\r\n##Transform Working with eggs: -pivot the data so size, qtry is a variable not seperatet columns -create a new data set with filter -modify to add seperate columns for size and Qty -TO DO: change the values in the size and Qty columns but I don’t know how to do this yet.\r\n\r\n\r\n#head(egg)\r\n#select(egg,\"month\",\"year\":\"extra_large_dozen\")\r\negg_long <- pivot_longer(egg, \"large_half_dozen\":\"extra_large_dozen\")\r\negg_lg_dz <- filter(egg_long, name==\"large_dozen\")\r\negg_long <- rename(egg_long, \"size\" = name)\r\negg_long <- mutate(egg_long, \"Qty\" = size)  \r\nhead(egg_long)\r\n\r\n\r\n# A tibble: 6 x 5\r\n  month     year size                   value Qty                   \r\n  <chr>    <dbl> <chr>                  <dbl> <chr>                 \r\n1 January   2004 large_half_dozen        126  large_half_dozen      \r\n2 January   2004 large_dozen             230  large_dozen           \r\n3 January   2004 extra_large_half_dozen  132  extra_large_half_dozen\r\n4 January   2004 extra_large_dozen       230  extra_large_dozen     \r\n5 February  2004 large_half_dozen        128. large_half_dozen      \r\n6 February  2004 large_dozen             226. large_dozen           \r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-20T13:37:34-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomnorthonum868206/",
    "title": "HW3 - ATP Tennis 1980",
    "description": "Analysis of player height and match outcomes during the 1980 ATP Professional Tennis season.",
    "author": [
      {
        "name": "Jason O'Connell",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\r\nHW3 Overview\r\nThis is homework assignment #3 for Jason O’Connell. I have found some interesting data on profession tennis on github and I think I will use this for my final project. I will try to find something interesting to analyze. Current thoughts including looking at the number of matches per year necessary to achieve a ranking that supports sufficient prize winnings. There is a big problem in professional tennis that is hidden by the top professional making millions. Many, many, many players ranked under 100 in the world are required to make the sport what it is but these players barely survive. I would like to see the number of low ranking players cycling through the ATP to support the high ranking millions years.\r\nMaybe initial question for this homework can be relevance of height of match winner on different court surfaces. Theory: Height matters more on grass than hard than clay???\r\nInitialize Libraries\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(readr)\r\nlibrary(readxl)\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\n\r\n\r\n\r\nRead the data\r\nFirst read ATP data file, here I am using only the results from 1980 from GITHUB source\r\n\r\n\r\nATP1980 <- read.csv(\"https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_1980.csv\")\r\n\r\n\r\n\r\nIncluding Plots\r\nLet’s start with a basic plot of the player heights by winners and losers.\r\n\r\n\r\nggplot(ATP1980, aes(x=winner_ht, y=loser_ht)) + \r\n  geom_point() + \r\n  labs(title=\"Tennis matches winner vs. loser height\", x=\"Winner Height (cm)\", y=\"Loser Height (CM)\")\r\n\r\n\r\n\r\n\r\n\r\nWell that was not very informative - since the frequency of the occurrences is somewhat obscured. Let’s try including some way to show the frequency of occurances using size of the dot.\r\n\r\n\r\n# ATP1980 %>%\r\n#           group_by(winner_ht, loser_ht) %>%\r\n#           summarise(winner_ht,loser_ht, count = n())\r\n\r\nggplot( ATP1980 %>%\r\n          group_by(winner_ht, loser_ht) %>%\r\n          summarise(winner_ht,loser_ht, count = n()), aes(x=winner_ht, y=loser_ht)) + \r\n  geom_point(aes(size=count)) +\r\n  labs(title=\"Tennis matches winner vs. loser height\", x=\"Winner Height (cm)\", y=\"Loser Height (cm)\")\r\n\r\n\r\n\r\n\r\n\r\nThat is nicer looking but still not very informative. I don’t see any pattern to indicate height advantage Let’s compute the height difference between the winner and the loser, the number of occurances and start including the court surface.\r\n\r\n\r\n# ATP1980 %>%\r\n#   drop_na(winner_ht, loser_ht) %>%\r\n#   group_by(winner_ht, loser_ht) %>%\r\n#   summarise(winner_ht,loser_ht, count = n())\r\n\r\nggplot( ATP1980 %>%\r\n          drop_na(winner_ht, loser_ht) %>%\r\n          mutate(ht_diff=winner_ht-loser_ht) %>%\r\n          group_by(surface, ht_diff) %>%\r\n          summarise(surface, ht_diff, count = n()), aes(x=ht_diff, y=count)) + \r\n  geom_point(aes(color=surface)) +\r\n  labs(title=\"Match Winner vs. Loser Height Differance by Surface\", x=\"Height Difference\", y=\"Number of Matches\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n# ATP1980 %>%\r\n#   drop_na(winner_ht, loser_ht) %>%\r\n#   group_by(winner_ht, loser_ht) %>%\r\n#   summarise(winner_ht,loser_ht, count = n())\r\n\r\nggplot( ATP1980 %>%\r\n          drop_na(winner_ht, loser_ht) %>%\r\n          mutate(ht_diff=winner_ht-loser_ht) %>%\r\n          group_by(surface, ht_diff) %>%\r\n          summarise(surface, ht_diff, count = n()), aes(x=surface, y=ht_diff, fill=surface)) + \r\n  geom_violin() +\r\n  labs(title=\"Match Winner vs. Loser Height Differance by Surface\", x=\"Surface\", y=\"Height Differance\")\r\n\r\n\r\n\r\n\r\nResults\r\nWell I think I used a number of new functions and saw some interesting data. I don’t think height has as significant a role in the winner and losers on the ATP tour in 1980. I wonder if this is still the case in the 2010s/20s now that racket technology, fitness, and several other factors have changed the game so much. More to come…\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomnorthonum868206/distill-preview.png",
    "last_modified": "2022-02-20T13:37:59-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomtcwilso3hw4twilson/",
    "title": "Homework4_Wilson",
    "description": "Computing descriptive statistics and creating visualizations",
    "author": [
      {
        "name": "Thomas Wilson",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\nThis dataset contains raw and corrected rates of primate behavioural innovation, tool use, extractive foraging, social learning and research effort\nCitation: The evolution of primate general and cultural intelligence. Reader SM, Hager Y & Laland KN. Philosophical Transactions of the Royal Society B, 2011 366:1017-1027\nVariables include: Species name, Taxon, Great Ape (y/n?), Times of recorded observations of: Innovation, Tool use, Extractive foraging, and Social learning.\n\n\nData_ReaderHagerLalandPhilTrans2011 <- read_csv(\"Data_ReaderHagerLalandPhilTrans2011.csv\")\nView(Data_ReaderHagerLalandPhilTrans2011)\nPrimate_ToolUse <- Data_ReaderHagerLalandPhilTrans2011\n\n#Removed columns that weren't useful to potential research questions\nPrimate_ToolUse <- Primate_ToolUse[-c(3,4,11:13,15:20)]\nview(Primate_ToolUse)\n\n#Calculate the mean tool use for the Cebus genus\nPrimate_ToolUse %>%\n  filter(grepl('Cebus', Species)) %>%\n  summarise(mean(`Tool use`))\n\n\n# A tibble: 1 x 1\n  `mean(\\`Tool use\\`)`\n                 <dbl>\n1                 19.2\n\n#Calculte the max times a prosimian was searched in journals\nPrimate_ToolUse %>%\n  filter(grepl('Prosimian', Taxon)) %>%\n  summarise(max(`Journal Search Article Count`, na.rm = TRUE))\n\n\n# A tibble: 1 x 1\n  `max(\\`Journal Search Article Count\\`, na.rm = TRUE)`\n                                                  <dbl>\n1                                                    44\n\nPrimate_ToolUse %>%\n  filter(grepl('Great', `Great ape`)) %>%\n  summarise(mean(Innovation), max(`Tool use`), median(`Extractive foraging`))\n\n\n# A tibble: 1 x 3\n  `mean(Innovation)` `max(\\`Tool use\\`)` `median(\\`Extractive foragin…\n               <dbl>               <dbl>                         <dbl>\n1               102.                 371                          18.5\n\n#Graphing\nPrimate_ToolUse %>%\n  filter(grepl('Great', `Great ape`)) %>%\n  ggplot(aes(x=Species, y=`Social learning`)) +\n  geom_point() +\n  labs(title = \"Number of Times Social Learning was Observed in Great Apes\", y = \"Number of Observations\", x = \"Species Name\") +\n  theme_bw()\n\n\n\nPrimate_ToolUse %>%\n  filter(grepl('Callicebus', `Species`)) %>%\n  ggplot(aes(x=Species, y= `Journal Search Article Count`)) +\n  geom_point() +\n  labs(title = \"Number of Journal Searches for Titi Monkeys \", y = \"Number of Searches\", x = \"Species Name\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nData from: Female reproductive aging in seven primate species: patterns and consequences\n#Citation Campos, F., Altmann, J., Cords, M., Fedigan, L., Lawler, R., Lonsdorf, E., Stoinski, T., Strier, K., Bronikowski, A., Pusey, A., & Alberts, S. (2021). Data from: Female reproductive aging in seven primate species: patterns and consequences. Duke Research Data Repository.\nThe following data is looking at age-related chancles in female reproductive performance of seven primate populations. The variables include: Genus, ID of female born, Age of mother at birth, How long new infants are at risk, Mother ID, If the mother has had other births, and Population the individual was born into.\n\n\nFemalePrimate_Reproduction <- read_csv(\"03_afr.csv\")\nview(FemalePrimate_Reproduction)\n\n#Graphing\n\n#Shows the age of mothers when giving birth to the following female sifakas. This graph helps us see how old most sifaka are when they give birth. This can be used with the number of multiparious females to see how often sifaka are having children - calculating the interbirth index. \nFemalePrimate_Reproduction %>%\n  filter(grepl('Sifaka', `species`)) %>%\n ggplot(aes(x= as.character(female_id), y=`mom_age_years`)) +\n  geom_point() +\n  labs(title = \"Age of Mother at Birth\", y = \"Mother's Age\", x = \"Female ID\") +\n  theme_bw(base_size = 10) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\nFemalePrimate_Reproduction %>%\n  filter(grepl('Sifaka', `species`)) %>%\n  ggplot(aes(x=`mom_parity`)) +\n  geom_bar() +\n  labs(title = \"Female Parity in Sifaka\", y = \"Number of Mothers\", x = \"Mother Parity\") +\n  theme_classic(base_size = 20)\n\n\n\n#These figures are useful, but limited to only showing how many individuals have had multiple births, but another visual would be needed to highlight exactly which mother have had mutplie births.\n\n#A lot of limitations are that there is no direct column or data that focuses on time. Another column could be added to the data that shows the number of births per population/birth group over time.\n\n\n\n\n\n\n",
    "preview": "posts/httpsrpubscomtcwilso3hw4twilson/distill-preview.png",
    "last_modified": "2022-02-20T13:37:54-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomtlamkin867082/",
    "title": "HW3",
    "description": "A Review of Massachusetts 12th Grade Dropout Rates v. Teacher & Guidance Salaries",
    "author": [
      {
        "name": "TLamkin",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\r\nINTRODUCTION\r\nThe Massachusetts Department of Elementary and Secondary Education publishes data related to high school student drop-out rates as well as teacher pay rates. These are made available in separate datasets. (https://www.doe.mass.edu/SchDistrictData.html)\r\nMy goal was to examine the most recent available data on dropout rates by high school against the teacher and guidance department pay rates to determine if there was a correlation.\r\nTidy-ing the school data:\r\nThe data provided for dropout rates was presented at 2 levels: district level and individual school level. It also contained the data for the years 2010 through 2019.\r\nGiven the variation in school experience within districts, the school level data was of more interest than the district level data. Ultimately, I was interested in the most recent school level data.\r\nThis reduces this dataset to 4 columns: District Name School Name Total Dropouts for 2018-2019 Total Students for the same period\r\nFor reference, I also created a dataset of just district level dropout information.\r\n\r\n\r\n# Verify library path\r\n\r\n.libPaths()\r\n\r\n\r\n[1] \"C:/Users/theresa/Documents/R/win-library/4.1\"\r\n[2] \"C:/Program Files/R/R-4.1.2/library\"          \r\n\r\n# set the working directory to be the same as the library path\r\n\r\nsetwd(\"C:/Users/theresa/Documents/R/win-library/4.1\")\r\n\r\n# verify the working directory\r\n\r\ngetwd()\r\n\r\n\r\n[1] \"C:/Users/theresa/Documents/R/win-library/4.1\"\r\n\r\n# Installing Tidyverse and readxl packages with explicitly defining the URL of where it lives. This is to get around a Mirror error. \r\n\r\n# install.packages(\"tidyverse\", repos = \"http://cran.us.r-project.org\")\r\n# install.packages(\"readxl\", repos = \"http://cran.us.r-project.org\")\r\n\r\n# load the necessary libraries for the processing\r\n\r\nlibrary(tidyverse)\r\nlibrary(dbplyr)\r\nlibrary(readxl)\r\nlibrary(readr)\r\nlibrary(stringr)\r\nlibrary(ggplot2)\r\n\r\n# Load in the files and display them for clarification. \r\n\r\nmass_dropout_rates_gr12 <-read_csv(\"c:/users/theresa/Documents/DACSS Local/DataSets/DropOutRates2018-19.csv\", skip = 1)\r\n\r\nnames(mass_dropout_rates_gr12) <-str_replace_all(names(mass_dropout_rates_gr12), c(\" \"=\"-\"))\r\n \r\nmass_dropout_2018_2019 <- mass_dropout_rates_gr12 %>% \r\n  select(`District-Name`, `School-Name`, `2018-19`, `High-School-Enrollment`, `Total-Dropout-Count`)\r\n\r\nschool_dropout_rates_2018_2019 <- mass_dropout_2018_2019 %>% \r\n filter(!grepl('District',`School-Name`)) %>% \r\n  arrange(desc(`2018-19`))\r\n\r\ndistrict_dropout_rates_2018_2019 <- mass_dropout_2018_2019 %>% \r\n  filter(grepl('District',`School-Name`))  %>% \r\n  select(`District-Name`,`2018-19`,`High-School-Enrollment`,`Total-Dropout-Count`) %>%\r\n  arrange(desc(`High-School-Enrollment`))  \r\n\r\nhead(mass_dropout_2018_2019)\r\n\r\n\r\n# A tibble: 6 x 5\r\n  `District-Name` `School-Name`    `2018-19` `High-School-Enrollment`\r\n  <chr>           <chr>                <dbl>                    <dbl>\r\n1 Abington        District Results       0.6                      540\r\n2 Abington        Abington High          0.6                      540\r\n3 Agawam          District Results       1.7                     1104\r\n4 Agawam          Agawam High            1.7                     1104\r\n5 Amesbury        District Results       2                        611\r\n6 Amesbury        Amesbury High          1.4                      560\r\n# ... with 1 more variable: `Total-Dropout-Count` <dbl>\r\n\r\ndim(school_dropout_rates_2018_2019)\r\n\r\n\r\n[1] 405   5\r\n\r\nhead(school_dropout_rates_2018_2019)\r\n\r\n\r\n# A tibble: 6 x 5\r\n  `District-Name`             `School-Name` `2018-19` `High-School-E~`\r\n  <chr>                       <chr>             <dbl>            <dbl>\r\n1 Springfield                 Liberty Prep~      66.7                9\r\n2 Springfield                 Springfield ~      43.7              231\r\n3 Brockton                    Edison Acade~      38.7              238\r\n4 Boston Day and Evening Aca~ Boston Day a~      36.8              421\r\n5 Lowell Middlesex Academy C~ Lowell Middl~      36.6               82\r\n6 Brockton                    Frederick Do~      36.4               11\r\n# ... with 1 more variable: `Total-Dropout-Count` <dbl>\r\n\r\ndim(district_dropout_rates_2018_2019)\r\n\r\n\r\n[1] 308   4\r\n\r\nhead(district_dropout_rates_2018_2019)\r\n\r\n\r\n# A tibble: 6 x 4\r\n  `District-Name` `2018-19` `High-School-Enrollment` `Total-Dropout-~`\r\n  <chr>               <dbl>                    <dbl>             <dbl>\r\n1 Boston                4.2                    15035               631\r\n2 Worcester             2.6                     7158               184\r\n3 Springfield           4.4                     6955               309\r\n4 Lynn                  4.7                     4559               216\r\n5 Brockton              3.9                     4419               171\r\n6 Newton                0.3                     4016                12\r\n\r\nTidy-ing the Salary data:\r\nThe teacher data included the 2018-2019 salary information for all school levels pre-k - 12. The data also included many other operational expenditures for each school.\r\nThe financial data for this analysis needed to be reduced to only relevant data: District Name School Name Teacher Salary Guidance Dept Salary\r\n\r\n\r\npreliminary_school_data_hs <-read_csv(\"c:/users/theresa/Documents/DACSS Local/DataSets/preliminary-school-ppx.csv\", skip = 3) \r\n\r\n# To create easier field names, replace the spaces with a dash in the original column names.\r\n\r\nnames(preliminary_school_data_hs) <-str_replace_all(names(preliminary_school_data_hs), c(\" \"=\"-\"))\r\n\r\n# Reduce the data set to the relevant columns \r\n\r\npreliminary_school_data_g12 <- preliminary_school_data_hs %>%\r\n filter(grepl('9-12',`Grade-Level`)) %>%\r\n  select(District...2,`School-Name`,`Teachers-Per-100-Students`,`Avg-Teacher-Salary`,`Guidance-&-Psych...22`) \r\n\r\n# Convert the salary numbers from character to numeric\r\n\r\npreliminary_school_data_g12$`Avg-Teacher-Salary` <-           parse_number(preliminary_school_data_g12$`Avg-Teacher-Salary`) \r\npreliminary_school_data_g12$`Guidance-&-Psych...22` <-  parse_number(preliminary_school_data_g12$`Guidance-&-Psych...22`)\r\n\r\n# If the salary wasn't provided (was a non-numeric), replace it with the median of all the other salary data\r\n\r\npreliminary_school_data_g12 <- preliminary_school_data_g12 %>%\r\n  mutate(`Avg-Teacher-Salary` = replace_na(`Avg-Teacher-Salary`, repl = 'median')) \r\n\r\n\r\npreliminary_school_data_g12\r\n\r\n\r\n# A tibble: 268 x 5\r\n   District...2 `School-Name`        `Teachers-Per-~` `Avg-Teacher-S~`\r\n   <chr>        <chr>                <chr>            <chr>           \r\n 1 Abington     Abington High        6.6              88445           \r\n 2 Agawam       Agawam High          8.4              82804           \r\n 3 Amesbury     Amesbury High        9.0              78508           \r\n 4 Amesbury     Amesbury Innovation~ 8.3              85348           \r\n 5 Andover      Andover High         7.2              89805           \r\n 6 Arlington    Arlington High       7.5              72903           \r\n 7 Ashland      Ashland High         6.8              83551           \r\n 8 Attleboro    Attleboro High       6.5              90712           \r\n 9 Attleboro    Attleboro Community~ 2.5              median          \r\n10 Bedford      Bedford High         9.6              98994           \r\n# ... with 258 more rows, and 1 more variable:\r\n#   `Guidance-&-Psych...22` <dbl>\r\n\r\n# create a single dataset with dropout rates and salary data for 2018-2019. \r\n\r\ndropout_data_with_salary_info <- merge(school_dropout_rates_2018_2019,preliminary_school_data_g12, by.x = 'School-Name', by.y ='School-Name') \r\nhead(dropout_data_with_salary_info)\r\n\r\n\r\n                      School-Name       District-Name 2018-19\r\n1                   Abington High            Abington     0.6\r\n2  Acton-Boxborough Regional High    Acton-Boxborough     0.4\r\n3                     Agawam High              Agawam     1.7\r\n4         Algonquin Regional High Northboro-Southboro     0.3\r\n5                   Amesbury High            Amesbury     1.4\r\n6 Amesbury Innovation High School            Amesbury     7.8\r\n  High-School-Enrollment Total-Dropout-Count        District...2\r\n1                    540                   3            Abington\r\n2                   1834                   8    Acton-Boxborough\r\n3                   1104                  19              Agawam\r\n4                   1440                   4 Northboro-Southboro\r\n5                    560                   8            Amesbury\r\n6                     51                   4            Amesbury\r\n  Teachers-Per-100-Students Avg-Teacher-Salary Guidance-&-Psych...22\r\n1                       6.6              88445                   540\r\n2                       6.9              91373                   981\r\n3                       8.4              82804                   716\r\n4                       8.3              91342                   721\r\n5                       9.0              78508                   884\r\n6                       8.3              85348                  1719\r\n\r\n# This was a very frustrating attempt to define a new column that classified the range of dropouts. \r\n#dropout_data_with_salary_info <- dropout_data_with_salary_info %>%\r\n# mutate(dropout-level = if_else(.$`2018-19` >= 10, \"HIGH\", (if_else(.$`2018-19` >= 7, \"MODERATE\", #(if_else(.$`2018-19` >5, \"LOW MODERATE\", (if_else(.$`2018-19` >3, \"LOW\", \"EXTREMELY LOW\") ) )) ))))\r\nhead(dropout_data_with_salary_info)\r\n\r\n\r\n                      School-Name       District-Name 2018-19\r\n1                   Abington High            Abington     0.6\r\n2  Acton-Boxborough Regional High    Acton-Boxborough     0.4\r\n3                     Agawam High              Agawam     1.7\r\n4         Algonquin Regional High Northboro-Southboro     0.3\r\n5                   Amesbury High            Amesbury     1.4\r\n6 Amesbury Innovation High School            Amesbury     7.8\r\n  High-School-Enrollment Total-Dropout-Count        District...2\r\n1                    540                   3            Abington\r\n2                   1834                   8    Acton-Boxborough\r\n3                   1104                  19              Agawam\r\n4                   1440                   4 Northboro-Southboro\r\n5                    560                   8            Amesbury\r\n6                     51                   4            Amesbury\r\n  Teachers-Per-100-Students Avg-Teacher-Salary Guidance-&-Psych...22\r\n1                       6.6              88445                   540\r\n2                       6.9              91373                   981\r\n3                       8.4              82804                   716\r\n4                       8.3              91342                   721\r\n5                       9.0              78508                   884\r\n6                       8.3              85348                  1719\r\n\r\nTeacher Salary v. Dropout Rate:\r\nIs there a correlation between teacher salaries and dropout rate.\r\n\r\n\r\n## Salary v. Dropout Rate\r\n\r\nggplot(dropout_data_with_salary_info,aes(`Avg-Teacher-Salary`,`2018-19` )) + geom_point() \r\n\r\n\r\n\r\n\r\nGuidance Salary v. Dropout Rate:\r\nIs there a correlation between guidance counselor salaries and dropout rate.\r\n\r\n\r\nggplot(dropout_data_with_salary_info,aes(`Guidance-&-Psych...22`,`2018-19` )) + geom_point() \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomtlamkin867082/distill-preview.png",
    "last_modified": "2022-02-20T13:37:27-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httprpubscomikennedy040hw4/",
    "title": "HW4_IanKennedy",
    "description": "HW4 for DACSS 601.",
    "author": [
      {
        "name": "Ian Kennedy",
        "url": {}
      }
    ],
    "date": "2022-02-16",
    "categories": [],
    "contents": "\r\nFor my final project I’ll be using a data set from the Research Lab (FFRC) I’ve been working with for the past few years. In short, the FFRC, in coordination with the USDA Forest Service, implements an annual survey (TPO) which attempts to track timber procurement and lumber production at mills throughout the USA. I’ll be running analyses to see how shifting the baseline for minimum volume procured (TOT_MCF) would impact the number of mills and total volume of procured timber included in the sample frame. I’ve also added a new column (Volume_Code) which will be updated based on the volume that is landed on. Generally speaking, this sort of analysis will attempt to answer the following research questions:\r\nDoes it make sense to exclude small-production/hobby mills from future survey attempts?\r\nIf yes, what is the minimum volume (TOT_MCF) that mills should have procured to be included in survey efforts?\r\nWhat impact would shifting the baseline (regardless of minimum volume utilized) have on the total volume and number of mills that are surveyed?\r\nThere will likely be further questions that will need to be analyzed, however these questions outline the main priorities of data analysis for this project.\r\n\r\n\r\nTPO_Data <- read_excel(path = \"C:/Users/kenne/Documents/R_Workspace/TPO_Sample.xlsx\")\r\n\r\n\r\n#Calculate the sum of all Mill Volumes\r\nTPO_Data %>%\r\n  select(TOT_BF)%>%\r\n  sum(na.rm = TRUE) -> TOT_Volume\r\n\r\n\r\n#Calculate Total # of mills\r\nTPO_Data %>%\r\n  nrow() -> TOT_Mills\r\nTOT_Mills <- as.numeric(unlist(TOT_Mills[1]))\r\n\r\n#Calculate the sum omitted if omitting mills below 20,000 BF (not including blanks)\r\nTPO_Data %>%\r\n  mutate(Volume_Code = case_when(TOT_BF > 20000 ~ 2, \r\n                                TOT_BF <= 20000 & TOT_BF > 0 ~ 1,\r\n                                 TOT_BF == 0 ~ 0))%>%\r\n  filter(Volume_Code == 1) %>%\r\n  select(TOT_BF) %>%\r\n  sum(na.rm = TRUE) -> TOT_Volume_Omit\r\n\r\n  \r\n#Calculate number of mills if omitting mills below 20,000 BF (not including blanks)\r\nTPO_Data %>%\r\n  mutate(Volume_Code = case_when(TOT_BF > 20000 ~ 2, \r\n                                 TOT_BF <= 20000 & TOT_BF > 0 ~ 1,\r\n                                 TOT_BF == 0 ~ 0))%>%\r\n  filter(Volume_Code == 1) %>%\r\n  select(TOT_BF) %>%\r\n  nrow -> TOT_Mills_Omit\r\nTOT_Mills_Omit <- as.numeric(unlist(TOT_Mills_Omit[1]))\r\n\r\n#Filter mills with BF > 100,000,000\r\nTPO_Data %>%\r\n  mutate(High_BF = case_when(TOT_BF >= 100000000 ~ 2,\r\n                             TOT_BF < 100000000 ~ 1)) %>%\r\n  filter(High_BF == 2)%>%\r\n  arrange(MILL_STATECD)%>%\r\n  select(MILL_STATECD, MILL_NAME, TOT_BF) %>%\r\n  nrow -> TOT_Mills_High_Vol\r\nTOT_Mills_High_Vol <- as.numeric(unlist(TOT_Mills_High_Vol[1]))\r\n\r\nMill_Count_If_Omit <- TOT_Mills - TOT_Mills_Omit\r\n\r\n\r\n# Print findings from initial analyses\r\n\r\nprint(paste(\"Total # of mills in sample =\", TOT_Mills))\r\n\r\n\r\n[1] \"Total # of mills in sample = 3321\"\r\n\r\nprint(paste(\"Total volume in sample =\", TOT_Volume))\r\n\r\n\r\n[1] \"Total volume in sample = 402526008972.986\"\r\n\r\nprint(paste(\"Total # of mills with volume > 100,000,000 BF =\", TOT_Mills_High_Vol))\r\n\r\n\r\n[1] \"Total # of mills with volume > 100,000,000 BF = 83\"\r\n\r\nprint(paste(\"Total # of mills omitted if using a 20,000 BF cut-off =\", TOT_Mills_Omit))\r\n\r\n\r\n[1] \"Total # of mills omitted if using a 20,000 BF cut-off = 453\"\r\n\r\nprint(paste(\"Total volume omitted if using a 20,000 BF cut-off =\", TOT_Volume_Omit))\r\n\r\n\r\n[1] \"Total volume omitted if using a 20,000 BF cut-off = 3794201.62380122\"\r\n\r\nprint(paste(\"Total # of mills in sample if using a 20,000 BF cut-off =\", Mill_Count_If_Omit))\r\n\r\n\r\n[1] \"Total # of mills in sample if using a 20,000 BF cut-off = 2868\"\r\n\r\nThese histograms display the logged values of reported volumes for mills across the Northern United States. Both are univariate, utilizing the columns “TOT_MCF_LOG” and “TOT_BF_LOG” respectively. These plots will help to answer questions regarding the presence of reported mill volumes that are far outside of a normal range. A “normal” log MCF value would be < 4.2, while a “normal” log BF value would be < 8. In other words, any mills with reported log volumes above these thresholds will need to be reviewed and amended by USDA Forest Service Staff.\r\nIn taking a quick glance at the Logged BF, it is clear that there are at least 83 mills with reported volumes far outside of a “normal” range. Thus, these data sets will need review from partners within the USDA Forest Service.\r\nThere are a host of limitations that these plots present. Namely, the lack of volumes for a handful of mills make the analysis incomplete. Additionally, because the corrections to reported volumes are done on a state-by-state basis, a plot that includes the information regarding the state in which each mill is located would be preferred to the raw histogram below.\r\nOn top of these limitations, a naive viewer would have trouble interpreting these plots given the units at hand. Without specifying what MCF (thousand cubic feet) and BF (board feet) refer to, a naive viewer would likely have little clue as to what the histograms are displaying. However, because this information will be utilized by those within the Forest Service, defining these units is not necessary.\r\n\r\n\r\n#Create a histogram of Mill Volumes (Logged MTC)\r\n\r\nMCF_DF <- data.frame(TPO_Data['TOT_MCF_LOG'])\r\nMCF_List <- unclass(MCF_DF)\r\nMCF_Vect <- as.vector(unlist(MCF_List[[1]]))\r\n\r\nHist_Breaks_MCF <- c(seq(from = -3, to = 8, by = .5))\r\n\r\nhist.default(MCF_Vect, xlim = c(-3, 8), ylim = c(0, 600), breaks = Hist_Breaks_MCF, labels = TRUE, ylab = 'Count', xlab = 'Log of MCF', main = 'Log of MCF Histogram')\r\n\r\n\r\n\r\n#Create a histogram of Mill Volumes (Logged BF)\r\n\r\nBF_DF <- data.frame(TPO_Data['TOT_BF_LOG'])\r\nBF_List <- unclass(BF_DF)\r\nBF_Vect <- as.vector(unlist(BF_List[[1]]))\r\n\r\n\r\nHist_Breaks_BF <- c(seq(from = 0, to = 12, by = 1))\r\n\r\nhist.default(BF_Vect, xlim = c(0, 12), ylim = c(0, 1200), breaks = Hist_Breaks_BF, labels = TRUE, ylab = 'Count', xlab = 'Log of BF', main = 'Log of BF Histogram') \r\n\r\n\r\n\r\n\r\nThe scatter plot below utilizes two variables, ‘TOT_BF_LOG’ (this was also used for one of the histograms above) and ‘MILL_STATE’, which was created using the mutate() function, in reference to an existing variable, ‘MILL_STATECD’.\r\nThis scatter plot attempts to highlight states that are housing mills with egregiously high volume measures. By breaking these volumes down by state, our FS partners are able to hone-in on states with the highest number of volume-outliers. From the scatter plot, it is clear that there are a few states that will need to be reviewed, these include ME, MI, & MN, among others.\r\nIn a similar sense to the histograms above, there are a host of mills with missing volumes, thus making this analysis incomplete. These volumes will need to be provided by FS staff before finalizing the analysis. Additionally, while this visualization provides a state-by-state breakdown, it could be improved by providing the count of mills/observations (within each state), that would be considered to have egregiously high volumes.\r\nIn terms of how a naive viewer would interpret this, the same issues as with the above histograms arise. Namely, because this plot is visualizing logged BF (Board Feet), someone lacking insight into the lumber industry would likely be left clueless if attempting to draw meaningful conclusions.\r\nTo improve this scatter plot, including the aforementioned count of mills reporting volumes outside of the “normal” range (by state) would make the analysis more well-rounded. On top of this, if mills lacking a reported volume are amended, this analysis could be re-run to include all mills present in our survey sample.\r\n\r\n\r\n#Create State-by-State histograms and scatter plots for Logged BF Volume\r\n\r\nBF_plot <- data.frame(TPO_Data) %>%\r\n  mutate(MILL_STATE = case_when(MILL_STATECD == 9 ~ \"CT\",\r\n                                MILL_STATECD == 10 ~ \"DE\",\r\n                                MILL_STATECD == 17 ~ \"IL\", \r\n                                MILL_STATECD == 18 ~ \"IN\",\r\n                                MILL_STATECD == 19 ~ \"IA\",\r\n                                MILL_STATECD == 20 ~ \"KS\",\r\n                                MILL_STATECD == 23 ~ \"ME\",\r\n                                MILL_STATECD == 24 ~ \"MD\",\r\n                                MILL_STATECD == 25 ~ \"MA\",\r\n                                MILL_STATECD == 26 ~ \"MI\",\r\n                                MILL_STATECD == 27 ~ \"MN\",\r\n                                MILL_STATECD == 29 ~ \"MO\",\r\n                                MILL_STATECD == 31 ~ \"NE\",\r\n                                MILL_STATECD == 33 ~ \"NH\",\r\n                                MILL_STATECD == 34 ~ \"NJ\",\r\n                                MILL_STATECD == 36 ~ \"NY\",\r\n                                MILL_STATECD == 38 ~ \"ND\",\r\n                                MILL_STATECD == 39 ~ \"OH\",\r\n                                MILL_STATECD == 42 ~ \"PA\",\r\n                                MILL_STATECD == 44 ~ \"RI\",\r\n                                MILL_STATECD == 46 ~ \"SD\",\r\n                                MILL_STATECD == 50 ~ \"VT\",\r\n                                MILL_STATECD == 54 ~ \"WV\",\r\n                                MILL_STATECD == 55 ~ \"WI\"))\r\n\r\nggplot(BF_plot, aes(x = MILL_STATE, y = TOT_BF_LOG, color = MILL_STATE)) + geom_point() +\r\nscale_y_continuous(name = \"Log of BF\", breaks = Hist_Breaks_BF, limits = c(0,12)) + \r\nscale_x_discrete(name = \"State\") +\r\nggtitle(\"Reported Mill Volumes (Log of BF) by State\")\r\n\r\n\r\n\r\n\r\nBecause dplyr functions weren’t utilized within the above code chunks, the following chunk uses dplyr functions to measure a few meaningful values on a state-by-state basis.\r\n\r\n\r\n#Calculate means, medians, and standard deviations of logged volumes by state\r\nTPO_summary <- BF_plot %>%\r\n  select(MILL_STATECD, MILL_STATE, MTC, TOT_MCF_LOG, TOT_BF_LOG) %>%\r\n  group_by(MILL_STATE) %>%\r\n  summarize(meanBF = mean(TOT_BF_LOG, na.rm = TRUE), \r\n            medianBF = median(TOT_BF_LOG, na.rm = TRUE), \r\n            meanMCF = mean(TOT_MCF_LOG, na.rm = TRUE), \r\n            medianMCF = median(TOT_MCF_LOG, na.rm = TRUE), \r\n            St_Dev = sd(TOT_BF_LOG, na.rm = TRUE), \r\n            NumberofMills = n())\r\n\r\nTPO_summary\r\n\r\n\r\n# A tibble: 24 x 7\r\n   MILL_STATE meanBF medianBF meanMCF medianMCF St_Dev NumberofMills\r\n   <chr>       <dbl>    <dbl>   <dbl>     <dbl>  <dbl>         <int>\r\n 1 CT           5.59     5.44   1.79      1.64   0.820            22\r\n 2 DE           4.87     4.51   1.06      0.711  1.00             19\r\n 3 IA           4.94     4.55   1.14      0.749  1.11             78\r\n 4 IL           4.78     4.46   0.977     0.661  1.06            147\r\n 5 IN           5.67     6.13   1.86      2.33   1.25            189\r\n 6 KS           4.58     4.30   0.782     0.500  0.991            48\r\n 7 MA           4.59     4.00   0.790     0.199  0.906           120\r\n 8 MD           5.48     5.32   1.68      1.52   1.36             48\r\n 9 ME           5.60     4.81   1.80      1.01   1.28            162\r\n10 MI           5.70     5.70   1.90      1.90   1.08            407\r\n# ... with 14 more rows\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/httprpubscomikennedy040hw4/distill-preview.png",
    "last_modified": "2022-02-16T17:31:28-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomahungundaphhw3/",
    "title": "HW3",
    "description": "DACSS 601 Data Science Fundamentals - Homework 3",
    "author": [
      {
        "name": "Apoorva Hungund",
        "url": {}
      }
    ],
    "date": "2022-02-16",
    "categories": [],
    "contents": "\n\nMy research focuses on Human Factors in Driving and Safety while Driving. The database most relevant to my study is the 'Seatbelts' \ndata, which provides data to measure differences in driving deaths over the years. The main aim was to understand change in \nbehavior after the introduction of seatbelt legislation on January 31st 1983. The dataset was officially commissioned by Department \nof Transport in 1984 and covers a time period of 15 years (1969 - 1984). Since it's almost 40 years old, we'll have to clean up the \ndata and make it a bit more easy to read.\n\nMy analysis will work on understanding if:\n1) Is there a change in driving deaths once the legislation was established?\n\n2) Is there a change in front seat passengers injured or killed once the legislation was established?\n\n3) Is there a change in rear seat passengers injured or killed once the legislation was established?\n\n\n\ndata(Seatbelts)\nSeatbelts <- data.frame(years=floor(time(Seatbelts)),months=factor(cycle(Seatbelts),labels=month.abb), Seatbelts)\nhead(Seatbelts)\n\n\n  years months DriversKilled drivers front rear   kms PetrolPrice\n1  1969    Jan           107    1687   867  269  9059   0.1029718\n2  1969    Feb            97    1508   825  265  7685   0.1023630\n3  1969    Mar           102    1507   806  319  9963   0.1020625\n4  1969    Apr            87    1385   814  407 10955   0.1008733\n5  1969    May           119    1632   991  454 11823   0.1010197\n6  1969    Jun           106    1511   945  427 12391   0.1005812\n  VanKilled law\n1        12   0\n2         6   0\n3        12   0\n4         8   0\n5        10   0\n6        13   0\n\ndim(Seatbelts)\n\n\n[1] 192  10\n\nsummary(Seatbelts)\n\n\n     years          months   DriversKilled      drivers    \n Min.   :1969   Jan    :16   Min.   : 60.0   Min.   :1057  \n 1st Qu.:1973   Feb    :16   1st Qu.:104.8   1st Qu.:1462  \n Median :1976   Mar    :16   Median :118.5   Median :1631  \n Mean   :1976   Apr    :16   Mean   :122.8   Mean   :1670  \n 3rd Qu.:1980   May    :16   3rd Qu.:138.0   3rd Qu.:1851  \n Max.   :1984   Jun    :16   Max.   :198.0   Max.   :2654  \n                (Other):96                                 \n     front             rear            kms         PetrolPrice     \n Min.   : 426.0   Min.   :224.0   Min.   : 7685   Min.   :0.08118  \n 1st Qu.: 715.5   1st Qu.:344.8   1st Qu.:12685   1st Qu.:0.09258  \n Median : 828.5   Median :401.5   Median :14987   Median :0.10448  \n Mean   : 837.2   Mean   :401.2   Mean   :14994   Mean   :0.10362  \n 3rd Qu.: 950.8   3rd Qu.:456.2   3rd Qu.:17202   3rd Qu.:0.11406  \n Max.   :1299.0   Max.   :646.0   Max.   :21626   Max.   :0.13303  \n                                                                   \n   VanKilled           law        \n Min.   : 2.000   Min.   :0.0000  \n 1st Qu.: 6.000   1st Qu.:0.0000  \n Median : 8.000   Median :0.0000  \n Mean   : 9.057   Mean   :0.1198  \n 3rd Qu.:12.000   3rd Qu.:0.0000  \n Max.   :17.000   Max.   :1.0000  \n                                  \n\n\n\n##We'll next be seperating the dataset into two dataframes - before and after legislation was established.\nLaw_Active<-subset(Seatbelts, law == 1, select = c(years:VanKilled))\nLaw_Inactive<-subset(Seatbelts, law == 0, select = c(years:VanKilled))\n\nsummary(Law_Inactive)\n\n\n     years          months   DriversKilled      drivers    \n Min.   :1969   Jan    :15   Min.   : 79.0   Min.   :1309  \n 1st Qu.:1972   Feb    :14   1st Qu.:108.0   1st Qu.:1511  \n Median :1976   Mar    :14   Median :121.0   Median :1653  \n Mean   :1976   Apr    :14   Mean   :125.9   Mean   :1718  \n 3rd Qu.:1979   May    :14   3rd Qu.:140.0   3rd Qu.:1926  \n Max.   :1983   Jun    :14   Max.   :198.0   Max.   :2654  \n                (Other):84                                 \n     front             rear            kms         PetrolPrice     \n Min.   : 567.0   Min.   :224.0   Min.   : 7685   Min.   :0.08118  \n 1st Qu.: 767.0   1st Qu.:344.0   1st Qu.:12387   1st Qu.:0.09078  \n Median : 860.0   Median :401.0   Median :14455   Median :0.10273  \n Mean   : 873.5   Mean   :400.3   Mean   :14463   Mean   :0.10187  \n 3rd Qu.: 986.0   3rd Qu.:454.0   3rd Qu.:16585   3rd Qu.:0.11132  \n Max.   :1299.0   Max.   :646.0   Max.   :21040   Max.   :0.13303  \n                                                                   \n   VanKilled     \n Min.   : 2.000  \n 1st Qu.: 7.000  \n Median :10.000  \n Mean   : 9.586  \n 3rd Qu.:13.000  \n Max.   :17.000  \n                 \n\ndim(Law_Inactive)\n\n\n[1] 169   9\n\n##There are only 23 observations made after the legislation was established.\ndim(Law_Active)\n\n\n[1] 23  9\n\nsummary(Law_Active)\n\n\n     years          months   DriversKilled      drivers    \n Min.   :1983   Feb    : 2   Min.   : 60.0   Min.   :1057  \n 1st Qu.:1983   Mar    : 2   1st Qu.: 85.0   1st Qu.:1171  \n Median :1984   Apr    : 2   Median : 92.0   Median :1282  \n Mean   :1984   May    : 2   Mean   :100.3   Mean   :1322  \n 3rd Qu.:1984   Jun    : 2   3rd Qu.:119.0   3rd Qu.:1464  \n Max.   :1984   Jul    : 2   Max.   :154.0   Max.   :1763  \n                (Other):11                                 \n     front            rear            kms         PetrolPrice    \n Min.   :426.0   Min.   :296.0   Min.   :15511   Min.   :0.1131  \n 1st Qu.:516.0   1st Qu.:347.0   1st Qu.:17971   1st Qu.:0.1148  \n Median :585.0   Median :408.0   Median :19162   Median :0.1161  \n Mean   :571.0   Mean   :407.7   Mean   :18890   Mean   :0.1165  \n 3rd Qu.:629.5   3rd Qu.:471.5   3rd Qu.:19952   3rd Qu.:0.1180  \n Max.   :721.0   Max.   :521.0   Max.   :21626   Max.   :0.1201  \n                                                                 \n   VanKilled    \n Min.   :2.000  \n 1st Qu.:3.500  \n Median :5.000  \n Mean   :5.174  \n 3rd Qu.:7.000  \n Max.   :8.000  \n                \n\n\n\n##We'll remove variables we don't need to create final datasets for before and after the legislation was activated.\n\nLaw_Inactive <- Law_Inactive[ -c(7:9) ]\nhead(Law_Active)\n\n\n    years months DriversKilled drivers front rear   kms PetrolPrice\n170  1983    Feb            95    1057   426  300 15511   0.1136570\n171  1983    Mar           100    1218   475  318 18308   0.1131444\n172  1983    Apr            89    1168   556  391 17793   0.1184955\n173  1983    May            82    1236   559  398 19205   0.1179694\n174  1983    Jun            89    1076   483  337 19162   0.1176866\n175  1983    Jul            60    1174   587  477 20997   0.1200592\n    VanKilled\n170         3\n171         2\n172         6\n173         3\n174         7\n175         6\n\nLaw_Inactive <- Law_Inactive[ -c(7:9) ]\nhead(Law_Inactive)\n\n\n  years months DriversKilled drivers front rear\n1  1969    Jan           107    1687   867  269\n2  1969    Feb            97    1508   825  265\n3  1969    Mar           102    1507   806  319\n4  1969    Apr            87    1385   814  407\n5  1969    May           119    1632   991  454\n6  1969    Jun           106    1511   945  427\n\n\nReferences:\n           \n           1. https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/time\n           2. https://rdrr.io/r/datasets/UKDriverDeaths.html\n           3. https://rpubs.com/Vikki_Grist/299410\n           \n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-16T17:31:34-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomjnfarrell211866926/",
    "title": "Homework3",
    "description": "NYC Real Estate Sales Data",
    "author": [
      {
        "name": "Joseph Farrell",
        "url": {}
      }
    ],
    "date": "2022-02-16",
    "categories": [],
    "contents": "\nLoad Libraries\n\n\nlibrary(readr)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(mosaic)\nlibrary(ggplot2)\n\n\n\nReading in, exploring, and cleaning dataset\nRead in NYC Real Estate Data\n\n\nnyc_rolling_sales <- read_csv(\"/Users/nelsonfarrell/Downloads/nyc-rolling-sales.csv\")\n\n\n\nGet Column Names\n\n\ncolnames(nyc_rolling_sales)\n\n\n [1] \"...1\"                           \"BOROUGH\"                       \n [3] \"NEIGHBORHOOD\"                   \"BUILDING CLASS CATEGORY\"       \n [5] \"TAX CLASS AT PRESENT\"           \"BLOCK\"                         \n [7] \"LOT\"                            \"EASE-MENT\"                     \n [9] \"BUILDING CLASS AT PRESENT\"      \"ADDRESS\"                       \n[11] \"APARTMENT NUMBER\"               \"ZIP CODE\"                      \n[13] \"RESIDENTIAL UNITS\"              \"COMMERCIAL UNITS\"              \n[15] \"TOTAL UNITS\"                    \"LAND SQUARE FEET\"              \n[17] \"GROSS SQUARE FEET\"              \"YEAR BUILT\"                    \n[19] \"TAX CLASS AT TIME OF SALE\"      \"BUILDING CLASS AT TIME OF SALE\"\n[21] \"SALE PRICE\"                     \"SALE DATE\"                     \n\nView first 6 rows of the dataset\n\n\nhead(nyc_rolling_sales)\n\n\n# A tibble: 6 × 22\n   ...1 BOROUGH NEIGHBORHOOD  `BUILDING CLASS…` `TAX CLASS AT …` BLOCK\n  <dbl>   <dbl> <chr>         <chr>             <chr>            <dbl>\n1     4       1 ALPHABET CITY 07 RENTALS - WAL… 2A                 392\n2     5       1 ALPHABET CITY 07 RENTALS - WAL… 2                  399\n3     6       1 ALPHABET CITY 07 RENTALS - WAL… 2                  399\n4     7       1 ALPHABET CITY 07 RENTALS - WAL… 2B                 402\n5     8       1 ALPHABET CITY 07 RENTALS - WAL… 2A                 404\n6     9       1 ALPHABET CITY 07 RENTALS - WAL… 2                  405\n# … with 16 more variables: LOT <dbl>, `EASE-MENT` <lgl>,\n#   `BUILDING CLASS AT PRESENT` <chr>, ADDRESS <chr>,\n#   `APARTMENT NUMBER` <chr>, `ZIP CODE` <dbl>,\n#   `RESIDENTIAL UNITS` <dbl>, `COMMERCIAL UNITS` <dbl>,\n#   `TOTAL UNITS` <dbl>, `LAND SQUARE FEET` <chr>,\n#   `GROSS SQUARE FEET` <chr>, `YEAR BUILT` <dbl>,\n#   `TAX CLASS AT TIME OF SALE` <dbl>, …\n\nCheck the variables in the dataset\n\n\nstr(nyc_rolling_sales)\n\n\nspec_tbl_df [84,548 × 22] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ...1                          : num [1:84548] 4 5 6 7 8 9 10 11 12 13 ...\n $ BOROUGH                       : num [1:84548] 1 1 1 1 1 1 1 1 1 1 ...\n $ NEIGHBORHOOD                  : chr [1:84548] \"ALPHABET CITY\" \"ALPHABET CITY\" \"ALPHABET CITY\" \"ALPHABET CITY\" ...\n $ BUILDING CLASS CATEGORY       : chr [1:84548] \"07 RENTALS - WALKUP APARTMENTS\" \"07 RENTALS - WALKUP APARTMENTS\" \"07 RENTALS - WALKUP APARTMENTS\" \"07 RENTALS - WALKUP APARTMENTS\" ...\n $ TAX CLASS AT PRESENT          : chr [1:84548] \"2A\" \"2\" \"2\" \"2B\" ...\n $ BLOCK                         : num [1:84548] 392 399 399 402 404 405 406 407 379 387 ...\n $ LOT                           : num [1:84548] 6 26 39 21 55 16 32 18 34 153 ...\n $ EASE-MENT                     : logi [1:84548] NA NA NA NA NA NA ...\n $ BUILDING CLASS AT PRESENT     : chr [1:84548] \"C2\" \"C7\" \"C7\" \"C4\" ...\n $ ADDRESS                       : chr [1:84548] \"153 AVENUE B\" \"234 EAST 4TH   STREET\" \"197 EAST 3RD   STREET\" \"154 EAST 7TH STREET\" ...\n $ APARTMENT NUMBER              : chr [1:84548] NA NA NA NA ...\n $ ZIP CODE                      : num [1:84548] 10009 10009 10009 10009 10009 ...\n $ RESIDENTIAL UNITS             : num [1:84548] 5 28 16 10 6 20 8 44 15 24 ...\n $ COMMERCIAL UNITS              : num [1:84548] 0 3 1 0 0 0 0 2 0 0 ...\n $ TOTAL UNITS                   : num [1:84548] 5 31 17 10 6 20 8 46 15 24 ...\n $ LAND SQUARE FEET              : chr [1:84548] \"1633\" \"4616\" \"2212\" \"2272\" ...\n $ GROSS SQUARE FEET             : chr [1:84548] \"6440\" \"18690\" \"7803\" \"6794\" ...\n $ YEAR BUILT                    : num [1:84548] 1900 1900 1900 1913 1900 ...\n $ TAX CLASS AT TIME OF SALE     : num [1:84548] 2 2 2 2 2 2 2 2 2 2 ...\n $ BUILDING CLASS AT TIME OF SALE: chr [1:84548] \"C2\" \"C7\" \"C7\" \"C4\" ...\n $ SALE PRICE                    : chr [1:84548] \"6625000\" \"-\" \"-\" \"3936272\" ...\n $ SALE DATE                     : POSIXct[1:84548], format: \"2017-07-19\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ...1 = col_double(),\n  ..   BOROUGH = col_double(),\n  ..   NEIGHBORHOOD = col_character(),\n  ..   `BUILDING CLASS CATEGORY` = col_character(),\n  ..   `TAX CLASS AT PRESENT` = col_character(),\n  ..   BLOCK = col_double(),\n  ..   LOT = col_double(),\n  ..   `EASE-MENT` = col_logical(),\n  ..   `BUILDING CLASS AT PRESENT` = col_character(),\n  ..   ADDRESS = col_character(),\n  ..   `APARTMENT NUMBER` = col_character(),\n  ..   `ZIP CODE` = col_double(),\n  ..   `RESIDENTIAL UNITS` = col_double(),\n  ..   `COMMERCIAL UNITS` = col_double(),\n  ..   `TOTAL UNITS` = col_double(),\n  ..   `LAND SQUARE FEET` = col_character(),\n  ..   `GROSS SQUARE FEET` = col_character(),\n  ..   `YEAR BUILT` = col_double(),\n  ..   `TAX CLASS AT TIME OF SALE` = col_double(),\n  ..   `BUILDING CLASS AT TIME OF SALE` = col_character(),\n  ..   `SALE PRICE` = col_character(),\n  ..   `SALE DATE` = col_datetime(format = \"\")\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\nChange “SALE PRICE” to Numeric Variable\n\n\nnyc_rolling_sales$`SALE PRICE` <- as.numeric(nyc_rolling_sales$`SALE PRICE`)\n\n\n\nChange borough code numbers into borough names “Manhatten”, “Queens”, etc. In the dataset the different boroughs of New York City were represented with numbers 1-5, 1 Manhatten, 2 the Bronx, etc…\n\n\nnyc_rolling_sales <- mutate(nyc_rolling_sales, BOROUGH = recode(BOROUGH, `1` = \"Manhatten\",\n    `2` = \"Bronx\", `3` = \"Brooklyn\", `4` = \"Queens\", `5` = \"Staten Island\"))\n\n\n\nRecode “BUILDING CLASS” to be more descriptive The building classes in the data were coded. Here I will recode R1-R4, essentially all the single unit residential properties in the dataset\n\n\nnyc_rolling_sales <- mutate(nyc_rolling_sales, `BUILDING CLASS AT PRESENT` = recode(`BUILDING CLASS AT PRESENT`, \n    `R4` = \"Condo Elevator Building\", `R3` = \"Condo 1 to 3 Stories \", \n    `R2` = \"Condo Walkup\", `R1` = \"Condo 2 to 10 Unit Building\"))\n\n\n\nSelect columns “BOROUGH”, “NEIGHBORHOOD”, “BUILDING CLASS AT PRESENT”, “RESIDENTIAL UNITS”, “GROSS SQUARE FEET”, “SALE PRICE”, “SALE DATE” Not all of the variables will be useful for my planned analysis, this removes those that I do not plan use\n\n\nnyc_rolling_sales <-select(nyc_rolling_sales, \"BOROUGH\", \"NEIGHBORHOOD\", \"BUILDING CLASS AT PRESENT\",\n    \"RESIDENTIAL UNITS\", \"GROSS SQUARE FEET\", \"SALE PRICE\", \"SALE DATE\")\n\n\n\nRename columns “BUILDING CLASS AT PRESENT”, and “RESIDENTIAL UNITS” This changes the names of some of the columns for clarity, “Residential Units” will become “Units” because I will only be looking at Residential Units. “BUILDING CLASS AT PRESENT” will become simply \"BUILDING CLASS\n\n\nnyc_rolling_sales <- rename(nyc_rolling_sales, \"BUILDING CLASS\" = \"BUILDING CLASS AT PRESENT\", \n    \"SQ FOOTAGE\" = \"GROSS SQUARE FEET\", \"UNITS\" = \"RESIDENTIAL UNITS\")\n\n\n\nRemove all observations that do not contain a residential unit, and all sale prices under $100,000 and over $5,000,000 There were a lot very low prices that according to data description could indicate family member to family member transfer, i.e., inheritance. The data is also heavily skewed to the right, so I will look at only specific range of prices (i.e., $100,000-$5,000,000)\n\n\nnyc_rolling_sales <- filter(nyc_rolling_sales, ! `UNITS` == \"0\" & ! `SALE PRICE` == \"-\" &\n    `SALE PRICE` > 100000 & `SALE PRICE` < 5000000)\narrange(nyc_rolling_sales, `SALE PRICE`)\n\n\n# A tibble: 37,897 × 7\n   BOROUGH       NEIGHBORHOOD      `BUILDING CLASS` UNITS `SQ FOOTAGE`\n   <chr>         <chr>             <chr>            <dbl> <chr>       \n 1 Staten Island MIDLAND BEACH     \"A6\"                 1 588         \n 2 Brooklyn      PARK SLOPE SOUTH  \"C0\"                 3 2781        \n 3 Queens        FLUSHING-SOUTH    \"Condo 1 to 3 S…     1 -           \n 4 Queens        JAMAICA           \"S2\"                 2 3225        \n 5 Bronx         MELROSE/CONCOURSE \"C0\"                 3 3972        \n 6 Brooklyn      BOERUM HILL       \"Condo Elevator…     1 0           \n 7 Bronx         PARKCHESTER       \"Condo Elevator…     1 0           \n 8 Bronx         PARKCHESTER       \"Condo Elevator…     1 0           \n 9 Queens        REGO PARK         \"B3\"                 2 2128        \n10 Bronx         PARKCHESTER       \"Condo Elevator…     1 0           \n# … with 37,887 more rows, and 2 more variables: `SALE PRICE` <dbl>,\n#   `SALE DATE` <dttm>\n\nhead(nyc_rolling_sales) \n\n\n# A tibble: 6 × 7\n  BOROUGH   NEIGHBORHOOD  `BUILDING CLASS`        UNITS `SQ FOOTAGE`\n  <chr>     <chr>         <chr>                   <dbl> <chr>       \n1 Manhatten ALPHABET CITY C4                         10 6794        \n2 Manhatten ALPHABET CITY C4                          8 4226        \n3 Manhatten ALPHABET CITY Condo Walkup                1 -           \n4 Manhatten ALPHABET CITY Condo Elevator Building     1 -           \n5 Manhatten ALPHABET CITY Condo Elevator Building     1 -           \n6 Manhatten ALPHABET CITY Condo Elevator Building     1 -           \n# … with 2 more variables: `SALE PRICE` <dbl>, `SALE DATE` <dttm>\n\nIdentify and view the different types of building classes Each of these identifiers is defined in the description of the dataset, R4s (“Condo; Residential Unit in Elevator Building”) are the most numerous. It will be most revealing to compare like dwellings so I have renamed R1-R4, and I will filter out the rest\n\n\ntally(~ `BUILDING CLASS`, data = nyc_rolling_sales)\n\n\nBUILDING CLASS\n                         A0                          A1 \n                        307                        4666 \n                         A2                          A3 \n                       1895                         238 \n                         A4                          A5 \n                         91                        4023 \n                         A6                          A7 \n                         62                           2 \n                         A9                          B1 \n                        949                        2718 \n                         B2                          B3 \n                       3124                        2437 \n                         B9                          C0 \n                        918                        2245 \n                         C1                          C2 \n                        267                         369 \n                         C3                          C4 \n                        538                          46 \n                         C5                          C6 \n                         63                           7 \n                         C7                          C9 \n                         66                           5 \n      Condo 1 to 3 Stories  Condo 2 to 10 Unit Building \n                       1076                         934 \n    Condo Elevator Building                Condo Walkup \n                       8931                         646 \n                         D1                          D3 \n                         11                           3 \n                         D4                          D6 \n                         24                           6 \n                         D7                          D9 \n                          2                           2 \n                         E9                          F9 \n                          2                           2 \n                         G0                          G4 \n                          7                           1 \n                         G9                          HR \n                          1                           2 \n                         I7                          K1 \n                          2                           2 \n                         K2                          K4 \n                          2                          99 \n                         K9                          M1 \n                          3                           1 \n                         M9                          N2 \n                          5                           1 \n                         N9                          O2 \n                          2                           1 \n                         O5                          O7 \n                          2                           1 \n                         O8                          P5 \n                         18                           2 \n                         R6                          RR \n                        129                           9 \n                         S0                          S1 \n                          7                         202 \n                         S2                          S3 \n                        403                          79 \n                         S4                          S5 \n                         61                          50 \n                         S9                          V0 \n                         96                          28 \n                         V1                          W2 \n                          3                           1 \n                         Z0                          Z9 \n                          1                           1 \n\nFilter “Building Class” for “Condo Elevator Building”, previously “R4” Here I have filtered for just “Condo Elevator Building”\n\n\nnyc_rolling_sales<- filter(nyc_rolling_sales, `BUILDING CLASS` == \"Condo Elevator Building\")\nhead(nyc_rolling_sales)\n\n\n# A tibble: 6 × 7\n  BOROUGH   NEIGHBORHOOD  `BUILDING CLASS`        UNITS `SQ FOOTAGE`\n  <chr>     <chr>         <chr>                   <dbl> <chr>       \n1 Manhatten ALPHABET CITY Condo Elevator Building     1 -           \n2 Manhatten ALPHABET CITY Condo Elevator Building     1 -           \n3 Manhatten ALPHABET CITY Condo Elevator Building     1 -           \n4 Manhatten ALPHABET CITY Condo Elevator Building     1 -           \n5 Manhatten ALPHABET CITY Condo Elevator Building     1 -           \n6 Manhatten ALPHABET CITY Condo Elevator Building     1 -           \n# … with 2 more variables: `SALE PRICE` <dbl>, `SALE DATE` <dttm>\n\nThe Variables in the dataset after cleaning the data\nBOROUGH: Character, this identifies which borough of New York City the property is in.\nNEIGHBORHOOD: Character, this identifies the specific neighborhood within each borough that the property is in.\nBUILDING CLASS: Character, this identifies what type of building the property is.\nUNITS: Numeric, this identifies the number of units in the property\nSQ FOOTAGE: Character, still currently character although I will change it numeric if it turns out to be useful. Displays the total area of the property, inside and out, in square feet\nSALE PRICE: Numeric, this is the sale price of the property\nSALE DATE: Numeric, this is the date the property was sold.\nExploratory analyiss\nCreate Object “Brooklyn_1” for property sales of “CONDO ELEVATOR BUILDINGs” in Brooklyn\n\n\nBrooklyn_1 <- filter(nyc_rolling_sales, `BOROUGH` == \"Brooklyn\")\n\n\n\nCreate Object “Manhatten_1” for property sales of “CONDO ELEVATOR BUILDINGs” in Manhatten\n\n\nManhatten_1 <- filter(nyc_rolling_sales, `BOROUGH` == \"Manhatten\")\n\n\n\nDisplay Boxplot of “SALE PRICE” of “CONDO ELEVATOR BUILDINGS” in Brooklyn & Manhatten Here we can still clearly see that even after looking at only a range of the “SALE PRICE” the data is still heavily skewed to the right with numerous outliers. As a result, I will use median as a measure of center.\n\n\noptions(scipen = 999) ##Remove Scientific Notation\nboxplot(Brooklyn_1$`SALE PRICE`, Manhatten_1$`SALE PRICE`, horizontal = TRUE, names=c(\"Brooklyn\", \"Manhatten\"), \n    main = \"Sales of Single Unit Homes in Brooklyn & Manhatten\", ylab = \"Boroughs\", xlab = \"Sale Price\") \n\n\n\n\nDisplay summary statistics of “Brooklyn_1” and “SALE PRICE” and “Manhatten_1” and “SALE PRICE”\n\n\nfavstats(Brooklyn_1$`SALE PRICE`)\n\n\n    min     Q1 median      Q3     max    mean       sd    n missing\n 101825 682227 936270 1482500 4938512 1206647 806376.9 2159       0\n\nfavstats(Manhatten_1$`SALE PRICE`)\n\n\n    min     Q1  median      Q3     max    mean      sd    n missing\n 150000 900000 1396500 2310000 4996841 1734470 1074408 4783       0\n\nFind the median “SALE PRICE” of “CONDO ELEVATOR BUILDINGs” in each of the five New York City “BOROUGHS”\n\n\nnyc_rolling_sales %>%\n  group_by(BOROUGH) %>%\n  select(\"SALE PRICE\") %>%\n  summarize_all(median, na.rm = TRUE)\n\n\n# A tibble: 5 × 2\n  BOROUGH       `SALE PRICE`\n  <chr>                <dbl>\n1 Bronx               143500\n2 Brooklyn            936270\n3 Manhatten          1396500\n4 Queens              643000\n5 Staten Island       240318\n\nFind the median “SALE PRICE” of “CONDO ELEVATOR BUILDINGs” in each of the different Manhatten “NEIGHBORHOODs”\n\n\nManhatten_1 %>%\n  group_by(NEIGHBORHOOD) %>%\n  select(\"SALE PRICE\") %>%\n  summarize_all(median, na.rm = TRUE)\n\n\n# A tibble: 38 × 2\n   NEIGHBORHOOD  `SALE PRICE`\n   <chr>                <dbl>\n 1 ALPHABET CITY     1310000 \n 2 CHELSEA           1820000 \n 3 CHINATOWN         1440000 \n 4 CIVIC CENTER      3250000 \n 5 CLINTON           1236250 \n 6 EAST VILLAGE      1285000 \n 7 FASHION           1735000 \n 8 FINANCIAL         1450000 \n 9 FLATIRON          2300000 \n10 GRAMERCY          1834270.\n# … with 28 more rows\n\nPotential Research Questions\nWhich BOROUGH has the highest median property value?\nWhich NEIGHBORHOODs within each BOROUGH have the highest median property value?\nWhich BOROUGH’s median property value is increasing (decreasing) the fastest?\nIn which BOROUGH would it make the most financial sense to purchase an investment property?\n\nWhich NEIGHBORHOOD’s property value is increasing (decreasing) the fastest?\nIn which NEIGHBORHOOD would it make the most financial sense to purchase an investment property?\n\nAre there correlations between property values in BOROUGHs and/or NEIGHBORHOODs?\nDetermine and examine price per square foot as a metric. (Unclear if this is possible as this data is missing from many of the observations)\n\n\n\n",
    "preview": "posts/httpsrpubscomjnfarrell211866926/distill-preview.png",
    "last_modified": "2022-02-16T17:31:42-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomlenna717866657/",
    "title": "HW_2_AustralianMarriages",
    "description": "Wrangling Clean Data",
    "author": [
      {
        "name": "Lenna Garibian",
        "url": {}
      }
    ],
    "date": "2022-02-16",
    "categories": [],
    "contents": "\nFirst, setup libraries and read in data followed by a preview of data.\n\n\ncolnames(marriage)\n\n\n[1] \"territory\" \"resp\"      \"count\"     \"percent\"  \n\n\n\nhead(marriage)\n\n\n# A tibble: 6 × 4\n  territory       resp    count percent\n  <chr>           <chr>   <dbl>   <dbl>\n1 New South Wales yes   2374362    57.8\n2 New South Wales no    1736838    42.2\n3 Victoria        yes   2145629    64.9\n4 Victoria        no    1161098    35.1\n5 Queensland      yes   1487060    60.7\n6 Queensland      no     961015    39.3\n\nThe data show percentages of people married and unmarried in different territories in Australia. We start by filtering out the “no” responses, and show the values of the percentages descending order - showing the territories with the highest proportion of marriages first.\n\n\nfilter(marriage, resp == \"yes\") %>%\n  arrange(desc(percent)) \n\n\n# A tibble: 8 × 4\n  territory                       resp    count percent\n  <chr>                           <chr>   <dbl>   <dbl>\n1 Australian Capital Territory(c) yes    175459    74  \n2 Victoria                        yes   2145629    64.9\n3 Western Australia               yes    801575    63.7\n4 Tasmania                        yes    191948    63.6\n5 South Australia                 yes    592528    62.5\n6 Queensland                      yes   1487060    60.7\n7 Northern Territory(b)           yes     48686    60.6\n8 New South Wales                 yes   2374362    57.8\n\nThen, we name a function to represent only the “yes” responses, and show their values\n\n\nPercentage_Married <- filter(marriage,`resp` == \"yes\") %>%\nselect(territory, percent) \nprint(Percentage_Married)\n\n\n# A tibble: 8 × 2\n  territory                       percent\n  <chr>                             <dbl>\n1 New South Wales                    57.8\n2 Victoria                           64.9\n3 Queensland                         60.7\n4 South Australia                    62.5\n5 Western Australia                  63.7\n6 Tasmania                           63.6\n7 Northern Territory(b)              60.6\n8 Australian Capital Territory(c)    74  \n\nI plot the values, but I’m sure there is a simpler (and more attractive) way …\n\n\nggplot(data = Percentage_Married) + \n  geom_bar(mapping = aes(x = territory, y = percent), stat = \"identity\")\n\n\n\n\n\n\n\n",
    "preview": "posts/httpsrpubscomlenna717866657/distill-preview.png",
    "last_modified": "2022-02-16T17:31:38-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscommeade68867027/",
    "title": "Homework 3",
    "description": "Homework 3, DACSS 601",
    "author": [
      {
        "name": "Justin Meade",
        "url": {}
      }
    ],
    "date": "2022-02-16",
    "categories": [],
    "contents": "\r\n#1. Identify the dataset you will be using for the final project.\r\nI will be utilizing speed data from a roadway analytics company. INRIX can provide data from connected vehicles and deliver anonymized speed data aggregated to specific time intervals at predetermined locations.\r\nThis data is commonly used to monitor a transportation network to determine locations where congestion may be occuring in real-time, or is a reoccuring problem.\r\nThis data can be combined with TMC (Traffic Management Channel) locations to be mapped.\r\nI have an archived copy of the TMC shapefile for mapping and determining roadway types (Interstate, US Route, State Route, Local). I also have access to a year of hourly speed data for each location.\r\n\r\n\r\ntbl_IA_1HR_Speed_AVG_INRIX <- read_csv(unz('G:/My Drive/School/UMASS/DACSS/DACSS_601/Final Project/Data/Bottlenecks_05062020.zip','Bottlenecks_05062020.csv' ))\r\n\r\nhead(tbl_IA_1HR_Speed_AVG_INRIX)\r\n\r\n\r\n# A tibble: 6 x 8\r\n  tmc_code  measurement_tstamp  speed average_speed reference_speed\r\n  <chr>     <dttm>              <dbl>         <dbl>           <dbl>\r\n1 118+11507 2018-01-01 02:00:00  53.5            55              55\r\n2 118+11507 2018-01-01 04:00:00  48.2            55              55\r\n3 118+11507 2018-01-01 05:00:00  30              53              55\r\n4 118+11507 2018-01-01 07:00:00  55.4            55              55\r\n5 118+11507 2018-01-01 08:00:00  49.5            56              55\r\n6 118+11507 2018-01-01 09:00:00  47.7            55              55\r\n# ... with 3 more variables: travel_time_minutes <dbl>,\r\n#   confidence_score <dbl>, cvalue <dbl>\r\n\r\nTMC_CODE: This is the location where the speed is recorded\r\nmeasurement_tstamp: the date and time that the measurement was recorded\r\nspeed: average 1-hour speed\r\naverage_speed: average speed within a 24 hr period\r\nreference_speed: recorded speeds on TMC between 10PM and 6AM (uncongested)\r\ntravel_time_minutes: average time a vehicle spent traversing the TMC during the specified time period\r\nconfidence_score: indicates the source of a data record. 20(historical), 30(real-time)\r\nC-value: the confidence of the reading\r\n#2. Read in/clean the dataset.\r\nA TMC can be said to be ‘bottlenecked’ when the travel speed is 60 percent of the free-flow speed.\r\n\r\n\r\ntbl_IA_1HR_Speed_AVG_INRIX <- read_csv(unz('G:/My Drive/School/UMASS/DACSS/DACSS_601/Final Project/Data/Bottlenecks_05062020.zip','Bottlenecks_05062020.csv' )) %>%\r\n  filter(confidence_score ==30 & cvalue >=75) %>%\r\n  filter(speed <=.6*reference_speed | ( reference_speed >= 65 & speed <= .6*65))\r\n\r\n\r\n\r\nWe also must import the TMC shapefile:\r\n\r\n\r\nshp_IA_TMC<-st_read('G:/My Drive/School/UMASS/DACSS/DACSS_601/Final Project/Data/Iowa_2018_TMC_shapefile/Iowa.shp')\r\n\r\n\r\nReading layer `Iowa' from data source \r\n  `G:\\My Drive\\School\\UMASS\\DACSS\\DACSS_601\\Final Project\\Data\\Iowa_2018_TMC_shapefile\\Iowa.shp' \r\n  using driver `ESRI Shapefile'\r\nSimple feature collection with 4862 features and 36 fields\r\nGeometry type: MULTILINESTRING\r\nDimension:     XY\r\nBounding box:  xmin: -96.61288 ymin: 40.38535 xmax: -90.17986 ymax: 43.50076\r\nGeodetic CRS:  WGS 84\r\n\r\nplot(shp_IA_TMC,col = \"blue\", main=\"TMC Locations in Iowa\",max.plot=1)\r\n\r\n\r\n\r\n\r\n#3. Identify potential research questions that your dataset can help answer.\r\n“Which routes in Iowa, when compared to similar routes of the same type (Interstate, US, IA, local), is congestion significantly worse?\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscommeade68867027/distill-preview.png",
    "last_modified": "2022-02-16T17:31:47-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httprpubscomamerleaux864543/",
    "title": "HW2 Merleaux",
    "description": "Reading data in to R studio.",
    "author": [
      {
        "name": "April Merleaux",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE)\r\nlibrary(readr)\r\nlibrary(tidyverse)\r\nlibrary(dplyr)\r\n\r\n\r\n\r\nFor HW 2 I analyzed poultry data, which were already tidy. I named the libraries in the setup chunk. Now I’m going to read in the csv and rename to a shorter name and view output and column names.\r\n\r\n\r\npoultry_tidy <- read_csv(\"C:/Users/am37/Documents/DATA/class work/poultry_tidy - poultry_tidy.csv\")\r\nview(poultry_tidy)\r\ncolnames(poultry_tidy)\r\n\r\n\r\n[1] \"Product\"      \"Year\"         \"Month\"        \"Price_Dollar\"\r\n\r\nDescribe the data\r\npoultry_tidy has four columns:\r\nProduct and Month are character vectors\r\nYear and Price_Dollar are doubles, or real numbers. The data includes the price in dollars by month and year for 5 different chicken cuts.\r\nDescribe the data wrangling\r\nI grouped by year and summarised to show the mean price in dollars for all types of chicken. omitted the NAs.\r\n\r\n\r\ngroup_by(poultry_tidy, Year) %>%\r\nsummarise(mean(Price_Dollar, na.rm = TRUE))\r\n\r\n\r\n# A tibble: 10 x 2\r\n    Year `mean(Price_Dollar, na.rm = TRUE)`\r\n   <dbl>                              <dbl>\r\n 1  2004                               3.25\r\n 2  2005                               3.36\r\n 3  2006                               3.36\r\n 4  2007                               3.36\r\n 5  2008                               3.40\r\n 6  2009                               3.42\r\n 7  2010                               3.39\r\n 8  2011                               3.36\r\n 9  2012                               3.49\r\n10  2013                               3.50\r\n\r\nNext, I groupby Year and Product and summarised by Price_Dollar to see how the price varies across Products within a single year\r\n\r\n\r\ngroup_by(poultry_tidy, Year, Product) %>%\r\nsummarise(mean(Price_Dollar, na.rm = TRUE))\r\n\r\n\r\n# A tibble: 50 x 3\r\n# Groups:   Year [10]\r\n    Year Product        `mean(Price_Dollar, na.rm = TRUE)`\r\n   <dbl> <chr>                                       <dbl>\r\n 1  2004 B/S Breast                                   6.43\r\n 2  2004 Bone-in Breast                               3.90\r\n 3  2004 Thighs                                       2.01\r\n 4  2004 Whole                                        2.12\r\n 5  2004 Whole Legs                                   1.99\r\n 6  2005 B/S Breast                                   6.45\r\n 7  2005 Bone-in Breast                               3.90\r\n 8  2005 Thighs                                       2.21\r\n 9  2005 Whole                                        2.17\r\n10  2005 Whole Legs                                   2.04\r\n# ... with 40 more rows\r\n\r\nI’m curious how Whole chicken prices change between 2004 and 2013. I grouped by Year, filtered for Whole, and summarised for the mean price. I omitted the NAs.\r\n\r\n\r\ngroup_by(poultry_tidy, Year) %>%\r\nfilter(Product == \"Whole\") %>%\r\nsummarise(mean(Price_Dollar, na.rm = TRUE))\r\n\r\n\r\n# A tibble: 10 x 2\r\n    Year `mean(Price_Dollar, na.rm = TRUE)`\r\n   <dbl>                              <dbl>\r\n 1  2004                               2.12\r\n 2  2005                               2.17\r\n 3  2006                               2.20\r\n 4  2007                               2.20\r\n 5  2008                               2.37\r\n 6  2009                               2.48\r\n 7  2010                               2.39\r\n 8  2011                               2.35\r\n 9  2012                               2.38\r\n10  2013                               2.38\r\n\r\nNow I wanted to know how price varies across months, so I’m going to group by month and summarise by mean price\r\n\r\n\r\ngroup_by(poultry_tidy, Month) %>%\r\nsummarise(mean(Price_Dollar, na.rm = TRUE))\r\n\r\n\r\n# A tibble: 12 x 2\r\n   Month     `mean(Price_Dollar, na.rm = TRUE)`\r\n   <chr>                                  <dbl>\r\n 1 April                                   3.38\r\n 2 August                                  3.40\r\n 3 December                                3.40\r\n 4 February                                3.38\r\n 5 January                                 3.39\r\n 6 July                                    3.40\r\n 7 June                                    3.39\r\n 8 March                                   3.38\r\n 9 May                                     3.38\r\n10 November                                3.40\r\n11 October                                 3.40\r\n12 September                               3.40\r\n\r\nI wonder which cut of chicken is cheapest?\r\n\r\n\r\ngroup_by(poultry_tidy, Product) %>%\r\n  summarise(mean(Price_Dollar, na.rm = TRUE))\r\n\r\n\r\n# A tibble: 5 x 2\r\n  Product        `mean(Price_Dollar, na.rm = TRUE)`\r\n  <chr>                                       <dbl>\r\n1 B/S Breast                                   6.55\r\n2 Bone-in Breast                               3.90\r\n3 Thighs                                       2.18\r\n4 Whole                                        2.31\r\n5 Whole Legs                                   2.03\r\n\r\nIt looks like Whole Legs are the cheapest. That’s not surprising. I am a little surprised at how much cheaper they are than the most expensive cut.\r\n\r\n\r\n#groupby month, filter to just look at Whole Legs, and pivot wider to look at the months against the years\r\ngroup_by(poultry_tidy, Month) %>%\r\nfilter(Product == \"Whole Legs\") %>%\r\npivot_wider(names_from = Year, values_from = Price_Dollar)\r\n\r\n\r\n# A tibble: 12 x 12\r\n# Groups:   Month [12]\r\n   Product    Month   `2013` `2012` `2011` `2010` `2009` `2008` `2007`\r\n   <chr>      <chr>    <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\r\n 1 Whole Legs January   2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n 2 Whole Legs Februa~   2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n 3 Whole Legs March     2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n 4 Whole Legs April     2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n 5 Whole Legs May       2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n 6 Whole Legs June      2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n 7 Whole Legs July      2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n 8 Whole Legs August    2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n 9 Whole Legs Septem~   2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n10 Whole Legs October   2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n11 Whole Legs Novemb~   2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n12 Whole Legs Decemb~   2.04   2.04   2.04   2.04   2.04   2.04   2.04\r\n# ... with 3 more variables: 2006 <dbl>, 2005 <dbl>, 2004 <dbl>\r\n\r\nIt is very strange to me that there is so little variation in the price of Whole Legs. It makes me wonder if there’s something funky with the data.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-13T15:57:08-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httprpubscomanneetienne864237/",
    "title": "HW1",
    "description": "This is the first homework but im so late i am catching up sorry",
    "author": [
      {
        "name": "Anne Etienne",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-13T15:56:55-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httprpubscomericalaidler864561/",
    "title": "HW 1 601",
    "description": "RPub submission",
    "author": [
      {
        "name": "Erica Laidler",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-13T15:57:12-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomahungundaphhw2/",
    "title": "HW2",
    "description": "DACSS 601 Data Science Fundamentals - Homework 2",
    "author": [
      {
        "name": "Apoorva Hungund",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\nR Markdown HW2\n#For this assignment, I’m exploring the Airbnb data in NY dataset, specifically looking at Airbnb rates in Manhattan and Brooklyn.\n\n\n##1) Read in a dataset & view it.\nbookings<-read.csv2(file = \"AB_NYC_2019.csv\", sep = \",\")\ndim(bookings)\n\n\n[1] 48895    16\n\nhead(bookings)\n\n\n    id                                             name host_id\n1 2539               Clean & quiet apt home by the park    2787\n2 2595                            Skylit Midtown Castle    2845\n3 3647              THE VILLAGE OF HARLEM....NEW YORK !    4632\n4 3831                  Cozy Entire Floor of Brownstone    4869\n5 5022 Entire Apt: Spacious Studio/Loft by central park    7192\n6 5099        Large Cozy 1 BR Apartment In Midtown East    7322\n    host_name neighbourhood_group neighbourhood latitude longitude\n1        John            Brooklyn    Kensington 40.64749 -73.97237\n2    Jennifer           Manhattan       Midtown 40.75362 -73.98377\n3   Elisabeth           Manhattan        Harlem 40.80902  -73.9419\n4 LisaRoxanne            Brooklyn  Clinton Hill 40.68514 -73.95976\n5       Laura           Manhattan   East Harlem 40.79851 -73.94399\n6       Chris           Manhattan   Murray Hill 40.74767   -73.975\n        room_type price minimum_nights number_of_reviews last_review\n1    Private room   149              1                 9  2018-10-19\n2 Entire home/apt   225              1                45  2019-05-21\n3    Private room   150              3                 0            \n4 Entire home/apt    89              1               270  2019-07-05\n5 Entire home/apt    80             10                 9  2018-11-19\n6 Entire home/apt   200              3                74  2019-06-22\n  reviews_per_month calculated_host_listings_count availability_365\n1              0.21                              6              365\n2              0.38                              2              355\n3                                                1              365\n4              4.64                              1              194\n5              0.10                              1                0\n6              0.59                              1              129\n\n\n\n##2) Explain variables in dataset.\nlapply(bookings,class)\n\n\n$id\n[1] \"integer\"\n\n$name\n[1] \"character\"\n\n$host_id\n[1] \"integer\"\n\n$host_name\n[1] \"character\"\n\n$neighbourhood_group\n[1] \"character\"\n\n$neighbourhood\n[1] \"character\"\n\n$latitude\n[1] \"character\"\n\n$longitude\n[1] \"character\"\n\n$room_type\n[1] \"character\"\n\n$price\n[1] \"integer\"\n\n$minimum_nights\n[1] \"integer\"\n\n$number_of_reviews\n[1] \"integer\"\n\n$last_review\n[1] \"character\"\n\n$reviews_per_month\n[1] \"character\"\n\n$calculated_host_listings_count\n[1] \"integer\"\n\n$availability_365\n[1] \"integer\"\n\nsummary(bookings)\n\n\n       id               name              host_id         \n Min.   :    2539   Length:48895       Min.   :     2438  \n 1st Qu.: 9471945   Class :character   1st Qu.:  7822033  \n Median :19677284   Mode  :character   Median : 30793816  \n Mean   :19017143                      Mean   : 67620011  \n 3rd Qu.:29152178                      3rd Qu.:107434423  \n Max.   :36487245                      Max.   :274321313  \n  host_name         neighbourhood_group neighbourhood     \n Length:48895       Length:48895        Length:48895      \n Class :character   Class :character    Class :character  \n Mode  :character   Mode  :character    Mode  :character  \n                                                          \n                                                          \n                                                          \n   latitude          longitude          room_type        \n Length:48895       Length:48895       Length:48895      \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n     price         minimum_nights    number_of_reviews\n Min.   :    0.0   Min.   :   1.00   Min.   :  0.00   \n 1st Qu.:   69.0   1st Qu.:   1.00   1st Qu.:  1.00   \n Median :  106.0   Median :   3.00   Median :  5.00   \n Mean   :  152.7   Mean   :   7.03   Mean   : 23.27   \n 3rd Qu.:  175.0   3rd Qu.:   5.00   3rd Qu.: 24.00   \n Max.   :10000.0   Max.   :1250.00   Max.   :629.00   \n last_review        reviews_per_month  calculated_host_listings_count\n Length:48895       Length:48895       Min.   :  1.000               \n Class :character   Class :character   1st Qu.:  1.000               \n Mode  :character   Mode  :character   Median :  1.000               \n                                       Mean   :  7.144               \n                                       3rd Qu.:  2.000               \n                                       Max.   :327.000               \n availability_365\n Min.   :  0.0   \n 1st Qu.:  0.0   \n Median : 45.0   \n Mean   :112.8   \n 3rd Qu.:227.0   \n Max.   :365.0   \n\n\nThis dataset described the data for Airbnb prices in different boroughts of NYC. Along with necessary \ndescriptive variables such as name, host id, host name, neighborhood_group, neighborhood, latitude, \nlongitude, room_type, minimum_nights, reviews-related variables, etc. \nthere are also variables that may affect the rating of the listings.\n\nVariables are either character variables - such as name, host_name, neighborhood, etc., or \ninteger variables - such as price, reviews for, etc. There are 48895 entries and 16 columns.\n\n\n\ncolSums(is.na(bookings))\n\n\n                            id                           name \n                             0                              0 \n                       host_id                      host_name \n                             0                              0 \n           neighbourhood_group                  neighbourhood \n                             0                              0 \n                      latitude                      longitude \n                             0                              0 \n                     room_type                          price \n                             0                              0 \n                minimum_nights              number_of_reviews \n                             0                              0 \n                   last_review              reviews_per_month \n                             0                              0 \ncalculated_host_listings_count               availability_365 \n                             0                              0 \n\n##From this, we can see that there no NAs.\n\n\n\n\n\n##3)\n##Select columns\ndata_bookings <- dplyr::select(bookings, name, neighbourhood_group, neighbourhood, room_type, price, number_of_reviews)\nhead(data_bookings)\n\n\n                                              name\n1               Clean & quiet apt home by the park\n2                            Skylit Midtown Castle\n3              THE VILLAGE OF HARLEM....NEW YORK !\n4                  Cozy Entire Floor of Brownstone\n5 Entire Apt: Spacious Studio/Loft by central park\n6        Large Cozy 1 BR Apartment In Midtown East\n  neighbourhood_group neighbourhood       room_type price\n1            Brooklyn    Kensington    Private room   149\n2           Manhattan       Midtown Entire home/apt   225\n3           Manhattan        Harlem    Private room   150\n4            Brooklyn  Clinton Hill Entire home/apt    89\n5           Manhattan   East Harlem Entire home/apt    80\n6           Manhattan   Murray Hill Entire home/apt   200\n  number_of_reviews\n1                 9\n2                45\n3                 0\n4               270\n5                 9\n6                74\n\n##Filter data based on Manhattan and Brooklyn & arrange by highest price\n\nbookings_brooklyn<-data_bookings %>%\n  dplyr::filter(neighbourhood_group == \"Brooklyn\") %>%\n  arrange(desc(price))\nrmarkdown::paged_table(head(bookings_brooklyn))\n\n\n\n\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"neighbourhood_group\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"neighbourhood\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"room_type\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"price\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"number_of_reviews\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Luxury 1 bedroom apt. -stunning Manhattan views\",\"2\":\"Brooklyn\",\"3\":\"Greenpoint\",\"4\":\"Entire home/apt\",\"5\":\"10000\",\"6\":\"5\",\"_rn_\":\"1\"},{\"1\":\"Film Location\",\"2\":\"Brooklyn\",\"3\":\"Clinton Hill\",\"4\":\"Entire home/apt\",\"5\":\"8000\",\"6\":\"1\",\"_rn_\":\"2\"},{\"1\":\"Gem of east Flatbush\",\"2\":\"Brooklyn\",\"3\":\"East Flatbush\",\"4\":\"Private room\",\"5\":\"7500\",\"6\":\"8\",\"_rn_\":\"3\"},{\"1\":\"SUPER BOWL Brooklyn Duplex Apt!!\",\"2\":\"Brooklyn\",\"3\":\"Clinton Hill\",\"4\":\"Entire home/apt\",\"5\":\"6500\",\"6\":\"0\",\"_rn_\":\"4\"},{\"1\":\"NearWilliamsburg bridge 11211 BK\",\"2\":\"Brooklyn\",\"3\":\"Bedford-Stuyvesant\",\"4\":\"Private room\",\"5\":\"5000\",\"6\":\"10\",\"_rn_\":\"5\"},{\"1\":\"Fulton 2\",\"2\":\"Brooklyn\",\"3\":\"Cypress Hills\",\"4\":\"Entire home/apt\",\"5\":\"5000\",\"6\":\"4\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  \n\nbookings_manhattan<-data_bookings %>%\n  dplyr::filter(neighbourhood_group == \"Manhattan\") %>%\n  arrange(desc(price))\nrmarkdown::paged_table(head(bookings_manhattan))\n\n\n\n\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"neighbourhood_group\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"neighbourhood\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"room_type\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"price\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"number_of_reviews\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1-BR Lincoln Center\",\"2\":\"Manhattan\",\"3\":\"Upper West Side\",\"4\":\"Entire home/apt\",\"5\":\"10000\",\"6\":\"0\",\"_rn_\":\"1\"},{\"1\":\"Spanish Harlem Apt\",\"2\":\"Manhattan\",\"3\":\"East Harlem\",\"4\":\"Entire home/apt\",\"5\":\"9999\",\"6\":\"1\",\"_rn_\":\"2\"},{\"1\":\"Quiet, Clean, Lit @ LES & Chinatown\",\"2\":\"Manhattan\",\"3\":\"Lower East Side\",\"4\":\"Private room\",\"5\":\"9999\",\"6\":\"6\",\"_rn_\":\"3\"},{\"1\":\"2br - The Heart of NYC: Manhattans Lower East Side\",\"2\":\"Manhattan\",\"3\":\"Lower East Side\",\"4\":\"Entire home/apt\",\"5\":\"9999\",\"6\":\"0\",\"_rn_\":\"4\"},{\"1\":\"Beautiful/Spacious 1 bed luxury flat-TriBeCa/Soho\",\"2\":\"Manhattan\",\"3\":\"Tribeca\",\"4\":\"Entire home/apt\",\"5\":\"8500\",\"6\":\"2\",\"_rn_\":\"5\"},{\"1\":\"East 72nd Townhouse by (Hidden by Airbnb)\",\"2\":\"Manhattan\",\"3\":\"Upper East Side\",\"4\":\"Entire home/apt\",\"5\":\"7703\",\"6\":\"0\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  \n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-13T15:56:52-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscombkruzlichw1attempt4/",
    "title": "Bryn Kruzlic HW1",
    "description": "This is the first homework for DACSS601",
    "author": [
      {
        "name": "Bryn Kruzlic",
        "url": "https://rpubs.com/bkruzlic"
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-13T15:57:23-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscombkruzlichw2attempt1/",
    "title": "Kruzlic HW2 Try 1",
    "description": "DACSS 601 Homework 2 Example",
    "author": [
      {
        "name": "Bryn Kruzlic",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\r\nFunctions: These are the libraries needed for the dataset\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(readr)\r\n\r\n\r\n\r\nVariables: These are the variables in the dataset railroad\r\n\r\nstate: state represents the 53 states in America\r\ntotal_employees: total_employees represents the number of employees in each state\r\n\r\nThis is how to read in a dataset using read_csv\r\n\r\nA ‘tibble’ refers to a data frame\r\n\r\n\r\n\r\nlibrary(readr)\r\nData <- read_csv(\"C:/Users/Bryn Kruzlic/OneDrive/Desktop/DACSS601/railroad_2012_clean_state.csv\")\r\ncol_names = c(chr = \"x\", dbl = \"y\")\r\nView(Data)\r\nas_tibble(Data) # A tibble: 10 x 2\r\n\r\n\r\n# A tibble: 53 x 2\r\n   state total_employees\r\n   <chr>           <dbl>\r\n 1 AE                  2\r\n 2 AK                103\r\n 3 AL               4257\r\n 4 AP                  1\r\n 5 AR               3871\r\n 6 AZ               3153\r\n 7 CA              13137\r\n 8 CO               3650\r\n 9 CT               2592\r\n10 DC                279\r\n# ... with 43 more rows\r\n\r\nsummary(Data)\r\n\r\n\r\n    state           total_employees\r\n Length:53          Min.   :    1  \r\n Class :character   1st Qu.: 1917  \r\n Mode  :character   Median : 3379  \r\n                    Mean   : 4819  \r\n                    3rd Qu.: 6092  \r\n                    Max.   :19839  \r\n\r\nPerform at least 2 basic data-wrangling operations\r\n\r\n\r\nlibrary(dplyr)\r\nfilter(Data, total_employees > 1000) %>%\r\n  arrange(desc(total_employees))\r\n\r\n\r\n# A tibble: 42 x 2\r\n   state total_employees\r\n   <chr>           <dbl>\r\n 1 TX              19839\r\n 2 IL              19131\r\n 3 NY              17050\r\n 4 NE              13176\r\n 5 CA              13137\r\n 6 PA              12769\r\n 7 OH               9056\r\n 8 GA               8605\r\n 9 IN               8537\r\n10 MO               8419\r\n# ... with 32 more rows\r\n\r\n\r\nWe are using functions filter() and arrange () to filter out the states with more than 1000 total employees and then arranging them in descending order.\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-13T15:57:27-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomhenryfnp865058/",
    "title": "Henry Nguyen HW2",
    "description": "This is Henry's homework number 2.",
    "author": [
      {
        "name": "Henry Nguyen",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\nHomework #2\nThis is an R Markdown document to complete the tasks assigned in homework #2. It will read in a dataset. The variables will be explained. Simple data-wrangling operations will be demonstrated.\nPoultry Data Description\nThis data shows the price in dollars by poultry product type, month, and year. Each column is a variable and each row is an observation.\nThis data set has four variables:\nProduct\nthis variable is character data\nthis variable is the type of poultry products per observation\n\nYear\nthis variable is character data\nthis variable is the year of each observation\n\nMonth\nthis variable is character data\nthis variable is month of each observation\n\nPrice_Dollar\nthis variable is real number data\nthis variable is the price of each observation\n\nData Wrangling\n\n\nlibrary(tidyverse)\npoultry <- read_csv(\"poultry_tidy - poultry_tidy.csv\")\n\npoultry%>%\n  select(Product, Year, Price_Dollar)%>%\n  arrange(desc(Price_Dollar))\n\n\n# A tibble: 600 × 3\n   Product     Year Price_Dollar\n   <chr>      <dbl>        <dbl>\n 1 B/S Breast  2013         7.04\n 2 B/S Breast  2013         7.04\n 3 B/S Breast  2013         7.04\n 4 B/S Breast  2013         7.04\n 5 B/S Breast  2013         7.04\n 6 B/S Breast  2013         7.04\n 7 B/S Breast  2013         7.04\n 8 B/S Breast  2013         7.04\n 9 B/S Breast  2013         7.04\n10 B/S Breast  2013         7.04\n# … with 590 more rows\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-13T15:57:16-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomhmuleyumass865375/",
    "title": "HW2blog",
    "description": "hw2",
    "author": [
      {
        "name": "Henry Mulvey",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\r\nHW2 try 2\r\nlibrary(“tidyverse”) library(“dplyr”)\r\nlibrary(readxl) MBTA_bus_all2 <- read_excel(“MBTA_bus_all2.xlsx”) View(MBTA_bus_all2)\r\nmode, type of transit vehicle (bus), numeral\r\nseason, text\r\nroute_id and route_name, number of transit route\r\nstop_sequence, not sure, numeral\r\ndirection_id, not sure, numeral\r\nday_type_id, numerical representation of day_type_name, numeral\r\nday_type_nam, weekday or weekend, text\r\ntime_period_id, not sure, text\r\nstop_name, name of transit stop, text\r\nstop_id, numerical id of transit stop, numeral\r\naverage_ons, average of boardings at that transit stop, numeral\r\naverage_offs, average of people getting off at that transit stop, numeral\r\naverage_load, I think average percentage of bus occupancy at that transit stop, percentage\r\nnum_trips, I think number of trips that day that serviced that stop, numeral\r\nrdm_all <- filter(MBTA_bus_all2, route_name > 13 & route_name < 31) view(rdm_all)\r\nrdm_all isolates all of the bus stops in the Boston neighborhoods of Roxbury, Dorchester, and Mattapan\r\npopular_stops_rdm <- arrange(rdm_all, desc(average_ons)) view(popular_stops_rdm)\r\npopular_stops_rdm ranks all of the stops in rdm_all by the average number of people that get on the bus at that stop\r\nR Markdown\r\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\r\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\r\n\r\n\r\nsummary(cars)\r\n\r\n\r\n     speed           dist       \r\n Min.   : 4.0   Min.   :  2.00  \r\n 1st Qu.:12.0   1st Qu.: 26.00  \r\n Median :15.0   Median : 36.00  \r\n Mean   :15.4   Mean   : 42.98  \r\n 3rd Qu.:19.0   3rd Qu.: 56.00  \r\n Max.   :25.0   Max.   :120.00  \r\n\r\nIncluding Plots\r\nYou can also embed plots, for example:\r\n\r\n\r\n\r\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomhmuleyumass865375/distill-preview.png",
    "last_modified": "2022-02-13T16:08:57-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomikennedy040hw2/",
    "title": "HW2_IanKennedy",
    "description": "HW2 for DACSS 601. There are four columns of data in the selected spreadsheet. Territory (string), resp (string), count (numerical), and percent (numerical). I also created a new column labeled 'High Count' (string) and used the 'select' tool to show only the following columns: territory, count, & High_Count",
    "author": [
      {
        "name": "Ian Kennedy",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\r\n\r\n\r\nHW2_Data <- read_excel(path = \"C:/Users/kenne/Documents/R_Workspace/australian_marriage_tidy.xlsx\")\r\nHW2_Data %>%\r\n  arrange(desc(count))%>%\r\n  mutate(High_Count = case_when(count >= 2000000 ~ \"High\",\r\n                                count < 2000000 ~ \"Low\" ))%>%\r\n  select(territory, count, High_Count)\r\n\r\n\r\n# A tibble: 16 x 3\r\n   territory                         count High_Count\r\n   <chr>                             <dbl> <chr>     \r\n 1 New South Wales                 2374362 High      \r\n 2 Victoria                        2145629 High      \r\n 3 New South Wales                 1736838 Low       \r\n 4 Queensland                      1487060 Low       \r\n 5 Victoria                        1161098 Low       \r\n 6 Queensland                       961015 Low       \r\n 7 Western Australia                801575 Low       \r\n 8 South Australia                  592528 Low       \r\n 9 Western Australia                455924 Low       \r\n10 South Australia                  356247 Low       \r\n11 Tasmania                         191948 Low       \r\n12 Australian Capital Territory(c)  175459 Low       \r\n13 Tasmania                         109655 Low       \r\n14 Australian Capital Territory(c)   61520 Low       \r\n15 Northern Territory(b)             48686 Low       \r\n16 Northern Territory(b)             31690 Low       \r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-13T15:56:25-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomikennedy040hw3/",
    "title": "HW3_IanKennedy",
    "description": "HW3 for DACSS 601.",
    "author": [
      {
        "name": "Ian Kennedy",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\r\nFor my final project I’ll be using a data set from the Research Lab (FFRC) I’ve been working with for the past few years. In short, the FFRC, in coordination with the USDA Forest Service, implements an annual survey (TPO) which attempts to track timber procurement and lumber production at mills throughout the USA. Below, I’ve selected the columns of interest, of which there are 5. MILL_NBR (numeric), MILL_STATECD (numeric), MILL_NAME (string), and MILL_STATUS_CD (numeric) are all included for identification purposes. TOT_MCF (numeric) is the column of interest, as I’ll be looking to gauge the breadth of mills included in our survey efforts. Specifically, I’ll be running analyses to see how shifting the baseline for minimum volume procured (TOT_MCF) would impact the number of mills and total volume of procured timber included in the sample frame. I’ve also added a new column (Volume_Code) which will be updated based on the volume that is landed on. Generally speaking, this sort of analysis will attempt to answer the following research questions:\r\nDoes it make sense to exclude small-production/hobby mills from future survey attempts?\r\nIf yes, what is the minimum volume (TOT_MCF) that mills should have procured to be included in survey efforts?\r\nWhat impact would shifting the baseline (regardless of minimum volume utilized) have on the total volume and number of mills that are surveyed?\r\nThere will likely be further questions that will need to be analyzed, however these questions outline the main priorities of data analysis for this project.\r\n\r\n\r\nHW3_Data <- read_excel(path = \"C:/Users/kenne/Documents/R_Workspace/TPO_Sample.xlsx\")\r\nHW3_Data %>%\r\n  select(MILL_NBR, MILL_STATECD, MILL_NAME, MILL_STATUS_CD, TOT_MCF)%>%\r\n  arrange(TOT_MCF)%>%\r\n  mutate(Volume_Code = case_when(TOT_MCF > 1.6666667 ~ 2, \r\n                                 TOT_MCF <= 1.6666667 ~ 1))%>%\r\n  arrange(Volume_Code)%>%\r\n\r\n  head()\r\n\r\n\r\n# A tibble: 6 x 6\r\n  MILL_NBR   MILL_STATECD MILL_NAME MILL_STATUS_CD TOT_MCF Volume_Code\r\n  <chr>             <dbl> <chr>              <dbl>   <dbl>       <dbl>\r\n1 3005                 55 NEWPAGE ~             NA 0                 1\r\n2 5                    34 ON-SITE ~              2 0.00953           1\r\n3 902                  26 FARMER B~              2 0.0172            1\r\n4 344                  27 PRAIRIE ~              2 0.02              1\r\n5 N/A - Nev~           18 ROGER BR~              3 0.0316            1\r\n6 731                  26 PINE RID~              2 0.0316            1\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-13T15:56:32-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscommeade68863819/",
    "title": "Homework 2, Data Import",
    "description": "Second Assignment",
    "author": [
      {
        "name": "Justin Meade",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\r\nI am using StateCounty2012.xls from the example datasets\r\n1. Read dataset\r\nLoad Tidyverse and readxl to import .xls, Set working directory to location with R script, import dataset\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(readxl)\r\nsetwd('G:/My Drive/School/UMASS/DACSS/DACSS_601/assignment2')\r\nexampleCounties <- filter(select(read_xls('./StateCounty2012.xls',skip=3),STATE,COUNTY,TOTAL), !is.na(COUNTY))\r\n\r\n\r\n\r\nDisplay First 10 Records of exampleCounties\r\n\r\n\r\nhead(exampleCounties,n=10L)\r\n\r\n\r\n# A tibble: 10 x 3\r\n   STATE COUNTY               TOTAL\r\n   <chr> <chr>                <dbl>\r\n 1 AE    APO                      2\r\n 2 AK    ANCHORAGE                7\r\n 3 AK    FAIRBANKS NORTH STAR     2\r\n 4 AK    JUNEAU                   3\r\n 5 AK    MATANUSKA-SUSITNA        2\r\n 6 AK    SITKA                    1\r\n 7 AK    SKAGWAY MUNICIPALITY    88\r\n 8 AL    AUTAUGA                102\r\n 9 AL    BALDWIN                143\r\n10 AL    BARBOUR                  1\r\n\r\n2. Explain the variables in the exampleCounties:\r\n\r\n\r\nstr(exampleCounties)\r\n\r\n\r\ntibble [2,930 x 3] (S3: tbl_df/tbl/data.frame)\r\n $ STATE : chr [1:2930] \"AE\" \"AK\" \"AK\" \"AK\" ...\r\n $ COUNTY: chr [1:2930] \"APO\" \"ANCHORAGE\" \"FAIRBANKS NORTH STAR\" \"JUNEAU\" ...\r\n $ TOTAL : num [1:2930] 2 7 2 3 2 1 88 102 143 1 ...\r\n\r\n‘STATE’ column contains state names, character column type. ‘CTY’ column contains county names, character column type. ‘TOTAL’ column is numeric; it denotes a total.\r\n3. Data Wrangling Operations!!\r\n1st Data-Wrangling operation\r\nCreate datafreme, exampleCounties2. Contains only records where STATE starts with ‘MA’ arranged by descending TOTAL\r\n\r\n\r\nexampleCounties2 <- arrange(filter(exampleCounties, startsWith(STATE, 'MA')), 0-TOTAL)\r\nhead(exampleCounties2, n=20L)\r\n\r\n\r\n# A tibble: 12 x 3\r\n   STATE COUNTY     TOTAL\r\n   <chr> <chr>      <dbl>\r\n 1 MA    MIDDLESEX    673\r\n 2 MA    SUFFOLK      558\r\n 3 MA    PLYMOUTH     429\r\n 4 MA    NORFOLK      386\r\n 5 MA    ESSEX        314\r\n 6 MA    WORCESTER    310\r\n 7 MA    BRISTOL      232\r\n 8 MA    HAMPDEN      202\r\n 9 MA    FRANKLIN     113\r\n10 MA    HAMPSHIRE     68\r\n11 MA    BERKSHIRE     50\r\n12 MA    BARNSTABLE    44\r\n\r\nSTATE == ‘TX’ AND TOTAL >= 300, arranged alphabetically.\r\n\r\n\r\nhead(arrange(exampleCounties %>%\r\n  filter(STATE =='TX') %>% filter(TOTAL >= 300),COUNTY))\r\n\r\n\r\n# A tibble: 6 x 3\r\n  STATE COUNTY  TOTAL\r\n  <chr> <chr>   <dbl>\r\n1 TX    BELL      413\r\n2 TX    BEXAR     950\r\n3 TX    DALLAS    406\r\n4 TX    DENTON    394\r\n5 TX    EL PASO   863\r\n6 TX    HARRIS   2535\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-13T15:56:39-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomrmelendez864255/",
    "title": "Homework 1",
    "description": "R Pub Test",
    "author": [
      {
        "name": "Roberto Melendez",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\nR Markdown\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n\nsummary(cars)\n\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\nIncluding Plots\nYou can also embed plots, for example:\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n\n\n\n",
    "preview": "posts/httpsrpubscomrmelendez864255/distill-preview.png",
    "last_modified": "2022-02-13T15:56:59-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomtcwilso3hw3wilson/",
    "title": "Homework3_Wilson",
    "description": "HW3 - Data Wrangling",
    "author": [
      {
        "name": "Thomas Wilson",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\nThis dataset contains raw and corrected rates of primate behavioural innovation, tool use, extractive foraging, social learning and research effort\nCitation: The evolution of primate general and cultural intelligence. Reader SM, Hager Y & Laland KN. Philosophical Transactions of the Royal Society B, 2011 366:1017-1027\nVariables include: Species name, Taxon, Great Ape (y/n?), Times of recorded observations of: Innovation, Tool use, Extractive foraging, and Social learning.\n\n\nData_ReaderHagerLalandPhilTrans2011 <- read_csv(\"Data_ReaderHagerLalandPhilTrans2011.csv\")\nView(Data_ReaderHagerLalandPhilTrans2011)\nPrimate_ToolUse <- Data_ReaderHagerLalandPhilTrans2011\nview(Primate_ToolUse)\ndim(Primate_ToolUse)\n\n\n[1] 238  20\n\n#Removed columns that weren't useful to potential research questions\nPrimate_ToolUse <- Primate_ToolUse[-c(2:4,11:20)]\nview(Primate_ToolUse)\n\n#Filter out any entry that has zero observations of innovation\nPrimate_ToolUse %>%\n  filter(Innovation > 0) \n\n\n# A tibble: 49 x 7\n   Species    Taxon `Great ape` Innovation `Tool use` `Extractive for…\n   <chr>      <chr> <chr>            <dbl>      <dbl>            <dbl>\n 1 Callimico… Simi… No                   1          0                1\n 2 Callithri… Simi… No                   1          0                2\n 3 Callithri… Simi… No                   1          0                0\n 4 Cebus ape… Simi… No                  39         64               56\n 5 Cebus cap… Simi… No                   4          7                3\n 6 Cebus oli… Simi… No                   4          3                2\n 7 Daubenton… Pros… No                   4          2                6\n 8 Gorilla g… Simi… Great ape           25         21               12\n 9 Macaca ar… Simi… No                   1          1                1\n10 Macaca fa… Simi… No                   7          3                2\n# … with 39 more rows, and 1 more variable: Social learning <dbl>\n\n#Graphing:\nPrimate_ToolUse %>%\n  filter(grepl('Papio', Species)) %>%\n  ggplot(aes(x=Species, y=Innovation)) +\n  geom_point() +\n  labs(title = \"Number of Observed Innovation by Papio Species\", y = \"Number of Observations\", x = \"Species Name\") +\n  theme_classic()\n\n\n\nPrimate_ToolUse %>%\n  filter(grepl('Macaca', Species)) %>%\n  ggplot(aes(x=Species, y=`Social learning`)) +\n  geom_point() +\n  labs(title = \"Number of Observed Social Learning by Macaca Species\", y = \"Number of Observations\", x = \"Species Name\") +\n  theme_bw()\n\n\n\nPrimate_ToolUse %>%\n  filter(grepl('Great', `Great ape`)) %>%\n  ggplot(aes(x=Species, y=`Tool use`)) +\n  geom_point() +\n  labs(title = \"Number of Times Tool Use Observed in Great Apes\", y = \"Number of Observations\", x = \"Species Name\") +\n  theme_classic()\n\n\n\n\nPotential Research Questions:\nIs social learning of tool use an early example of culture? If so, when do we first see social learning present in humans/our human ancestors?\nWhy is tool use more common in the Macaca genus than any other Asian and African monkeys?\n\n\n\n",
    "preview": "posts/httpsrpubscomtcwilso3hw3wilson/distill-preview.png",
    "last_modified": "2022-02-13T15:57:04-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomtlamkin860400/",
    "title": "HW1",
    "description": "General Markdown File for Distill",
    "author": [
      {
        "name": "TLamkin",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\r\nINTRODUCTION\r\nTrying to get a project to publish on RPub and then, hopefully, my GitHub repository\r\nAddition\r\nAddition, for example:\r\n\r\n\r\n1+1\r\n\r\n\r\n[1] 2\r\n\r\nSubraction\r\nSubraction, for example:\r\n\r\n\r\n5-4\r\n\r\n\r\n[1] 1\r\n\r\n9-2\r\n\r\n\r\n[1] 7\r\n\r\n\r\nRadius\r\nRadius of a circle, for example:\r\n\r\n\r\nx <- 5  # radius of a circle\r\nx**2 * pi\r\n\r\n\r\n[1] 78.53982\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomtlamkin860400/distill-preview.png",
    "last_modified": "2022-02-13T15:56:47-05:00",
    "input_file": {},
    "preview_width": 1148,
    "preview_height": 375
  },
  {
    "path": "posts/httpsrpubscomtlamkin862725/",
    "title": "HW2",
    "description": "reading in 2 clean data sets and one untidy dataset",
    "author": [
      {
        "name": "TLamkin",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\r\nINTRODUCTION\r\nThis is an example of reading in 3 files of data:\r\nClean CSV\r\nClean Excel\r\nUncleaned Excel\r\nLoad Necessary Packages & Libraries and Load Clean CSV & Excel\r\nThe first step is verifying that working directory and library directory are set to the same path.\r\nThe next step is to install the necessary packages and load the necessary libraries.\r\nThen load in the railroad datasets.\r\nThere are 2 bits of data manipuation performed on the data.\r\n- ARRANGE()\r\n- FILTER()\r\nTo confirm: The data in both railroad files is:\r\nColumn 1 - character\r\nColumn 2 - Double class (dbl - double percision float)\r\n\r\n\r\n# Verify library path\r\n\r\n.libPaths()\r\n\r\n\r\n[1] \"C:/Users/theresa/Documents/R/win-library/4.1\"\r\n[2] \"C:/Program Files/R/R-4.1.2/library\"          \r\n\r\n# set the working directory to be the same as the library path\r\n\r\nsetwd(\"C:/Users/theresa/Documents/R/win-library/4.1\")\r\n\r\n# verify the working directory\r\n\r\ngetwd()\r\n\r\n\r\n[1] \"C:/Users/theresa/Documents/R/win-library/4.1\"\r\n\r\n# Installing Tidyverse and readxl packages with explicitly defining the URL of where it lives. This is to get around a Mirror error. \r\n\r\ninstall.packages(\"tidyverse\", repos = \"http://cran.us.r-project.org\")\r\n\r\n\r\npackage 'tidyverse' successfully unpacked and MD5 sums checked\r\n\r\nThe downloaded binary packages are in\r\n    C:\\Users\\theresa\\AppData\\Local\\Temp\\Rtmpwp0pBK\\downloaded_packages\r\n\r\ninstall.packages(\"readxl\", repos = \"http://cran.us.r-project.org\")\r\n\r\n\r\npackage 'readxl' successfully unpacked and MD5 sums checked\r\n\r\nThe downloaded binary packages are in\r\n    C:\\Users\\theresa\\AppData\\Local\\Temp\\Rtmpwp0pBK\\downloaded_packages\r\n\r\n# load the necessary libraries for the processing\r\n\r\nlibrary(tidyverse)\r\nlibrary(dbplyr)\r\nlibrary(readxl)\r\nlibrary(readr)\r\n\r\n# Load in the files and display them for clarification. \r\n\r\nrailroad_csv <- read_csv(\"c:/users/theresa/Documents/DACSS Local/DataSets/railroad_2012_clean_state.csv\", show_col_types = TRUE, skip=0)\r\nrailroad_exl <- read_excel(\"c:/users/theresa/Documents/DACSS Local/DataSets/railroad_2012_clean_state.xlsx\", skip = 0)\r\nrailroad_csv\r\n\r\n\r\n# A tibble: 53 x 2\r\n   state total_employees\r\n   <chr>           <dbl>\r\n 1 AE                  2\r\n 2 AK                103\r\n 3 AL               4257\r\n 4 AP                  1\r\n 5 AR               3871\r\n 6 AZ               3153\r\n 7 CA              13137\r\n 8 CO               3650\r\n 9 CT               2592\r\n10 DC                279\r\n# ... with 43 more rows\r\n\r\nrailroad_exl\r\n\r\n\r\n# A tibble: 53 x 2\r\n   state total_employees\r\n   <chr>           <dbl>\r\n 1 AE                  2\r\n 2 AK                103\r\n 3 AL               4257\r\n 4 AP                  1\r\n 5 AR               3871\r\n 6 AZ               3153\r\n 7 CA              13137\r\n 8 CO               3650\r\n 9 CT               2592\r\n10 DC                279\r\n# ... with 43 more rows\r\n\r\n# Arrange the resulting CSV by number of employees - Demonstration of the use of ARRANGE()\r\n\r\nby_num_employee <- railroad_csv %>% arrange(desc(total_employees))\r\n\r\n# Display the new order \r\n\r\nby_num_employee\r\n\r\n\r\n# A tibble: 53 x 2\r\n   state total_employees\r\n   <chr>           <dbl>\r\n 1 TX              19839\r\n 2 IL              19131\r\n 3 NY              17050\r\n 4 NE              13176\r\n 5 CA              13137\r\n 6 PA              12769\r\n 7 OH               9056\r\n 8 GA               8605\r\n 9 IN               8537\r\n10 MO               8419\r\n# ... with 43 more rows\r\n\r\n# See only MA data - Demonstrate the use of of FILTER()\r\n\r\nMassachusetts <- railroad_csv %>% filter(state == 'MA')\r\n\r\nMassachusetts\r\n\r\n\r\n# A tibble: 1 x 2\r\n  state total_employees\r\n  <chr>           <dbl>\r\n1 MA               3379\r\n\r\n# multi dplyr functions in 1 statement\r\n\r\nhighest_employee_count <- railroad_csv %>% \r\n    filter(total_employees > 10000) %>%\r\n    arrange(state)\r\n\r\nhighest_employee_count\r\n\r\n\r\n# A tibble: 6 x 2\r\n  state total_employees\r\n  <chr>           <dbl>\r\n1 CA              13137\r\n2 IL              19131\r\n3 NE              13176\r\n4 NY              17050\r\n5 PA              12769\r\n6 TX              19839\r\n\r\nLoad Unclean Excel Approach 1 - Load All Sheets - Data not cleaned After Loading\r\nThis is loading in the Australian Marriage Data file with multiple tabs. I did this with a user defined function and lapply. The data in these files is all loaded as characters. This loaded all 4 sheets. Not ideal because the first and last sheets do not contain data.\r\n\r\n\r\n# create a function that will take in the file and load the separate sheets into tibbles.  \r\n\r\nmultiplesheets <- function(fname) {\r\n   \r\n# getting info about all excel sheet tab names\r\n  \r\n  sheet_names <- readxl::excel_sheets(fname)\r\n  \r\n# display the tab names for easy understanding\r\n  \r\n  print(sheet_names)\r\n  \r\n# load the data from each sheet into its own data set using lapply. \r\n\r\n  data_sheets <- lapply(sheet_names, function(x) \r\n          { \r\n          readxl::read_excel(fname, sheet = x)\r\n          }\r\n          )\r\n \r\n list_data <- lapply(data_sheets, as.data.frame)\r\n\r\n# display the data in all the generated data sheets\r\n  \r\n  print(data_sheets)\r\n\r\n}\r\n  \r\n# specifying the path and file named to be used in my function.  \r\n# execute the function\r\n\r\n\r\npath <- \"c:/users/theresa/Documents/DACSS Local/DataSets/australian_marriage_law_postal_survey_2017_-_response_final_mod.xls\"\r\nmultiplesheets(path)\r\n\r\n\r\n[1] \"Contents\"          \"Table 1\"           \"Table 2\"          \r\n[4] \"Explanatory Notes\"\r\n[[1]]\r\n# A tibble: 23 x 3\r\n   `Australian Bureau of Statistics`                  ...2       ...3 \r\n   <chr>                                              <chr>      <chr>\r\n 1 1800.0 Australian Marriage Law Postal Survey, 2017 <NA>       <NA> \r\n 2 Released on 15 November 2017                       <NA>       <NA> \r\n 3 <NA>                                               <NA>       <NA> \r\n 4 <NA>                                               Contents   <NA> \r\n 5 <NA>                                               Tables     <NA> \r\n 6 <NA>                                               Table 1    Resp~\r\n 7 <NA>                                               Table 2    Resp~\r\n 8 <NA>                                               <NA>       <NA> \r\n 9 <NA>                                               Explanato~ <NA> \r\n10 <NA>                                               <NA>       <NA> \r\n# ... with 13 more rows\r\n\r\n[[2]]\r\n# A tibble: 21 x 16\r\n   `Australian Burea~` ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9 \r\n   <chr>               <chr> <chr> <chr> <chr> <chr> <chr> <lgl> <chr>\r\n 1 1800.0 Australian ~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 2 Released on 15 Nov~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 3 Table 1 Response b~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 4 <NA>                Resp~ <NA>  <NA>  <NA>  <NA>  <NA>  NA    Elig~\r\n 5 <NA>                Yes   <NA>  No    <NA>  Total <NA>  NA    Resp~\r\n 6 Country             no.   %     no.   %     no.   %     NA    no.  \r\n 7 New South Wales     2374~ 57.7~ 1736~ 42.2~ 4111~ 100   NA    4111~\r\n 8 Victoria            2145~ 64.9~ 1161~ 35.1~ 3306~ 100   NA    3306~\r\n 9 Queensland          1487~ 60.7~ 9610~ 39.2~ 2448~ 100   NA    2448~\r\n10 South Australia     5925~ 62.5  3562~ 37.5  9487~ 100   NA    9487~\r\n# ... with 11 more rows, and 7 more variables: ...10 <chr>,\r\n#   ...11 <chr>, ...12 <chr>, ...13 <chr>, ...14 <chr>, ...15 <chr>,\r\n#   ...16 <chr>\r\n\r\n[[3]]\r\n# A tibble: 190 x 16\r\n   `Australian Burea~` ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9 \r\n   <chr>               <chr> <chr> <chr> <chr> <chr> <chr> <lgl> <chr>\r\n 1 1800.0 Australian ~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 2 Released on 15 Nov~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 3 Table 2 Response b~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 4 <NA>                Resp~ <NA>  <NA>  <NA>  <NA>  <NA>  NA    Elig~\r\n 5 <NA>                Yes   <NA>  No    <NA>  Total <NA>  NA    Resp~\r\n 6 Region              no.   %     no.   %     no.   %     NA    no.  \r\n 7 New South Wales Di~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 8 Banks               37736 44.8~ 46343 55.1~ 84079 100   NA    84079\r\n 9 Barton              37153 43.6~ 47984 56.3~ 85137 100   NA    85137\r\n10 Bennelong           42943 49.7~ 43215 50.2~ 86158 100   NA    86158\r\n# ... with 180 more rows, and 7 more variables: ...10 <chr>,\r\n#   ...11 <chr>, ...12 <chr>, ...13 <chr>, ...14 <chr>, ...15 <chr>,\r\n#   ...16 <chr>\r\n\r\n[[4]]\r\n# A tibble: 31 x 2\r\n   `Australian Bureau of Statistics`                  ...2            \r\n   <chr>                                              <chr>           \r\n 1 1800.0 Australian Marriage Law Postal Survey, 2017 <NA>            \r\n 2 Released on 15 November 2017                       <NA>            \r\n 3 <NA>                                               <NA>            \r\n 4 <NA>                                               Explanatory Not~\r\n 5 <NA>                                               <NA>            \r\n 6 <NA>                                               Australian Marr~\r\n 7 <NA>                                               <NA>            \r\n 8 <NA>                                               <NA>            \r\n 9 <NA>                                               Definitions     \r\n10 <NA>                                               <NA>            \r\n# ... with 21 more rows\r\n\r\nLoad and Clean Only Select Sheets Within Unclean Excel\r\nThis is loading only the 2 sheets within the Australian Marriage Data file that contain data. Then take the resulting data and perform a multi-step clean up using:\r\ncomplete.case to remove rows with NA\r\nSELECT() to remove the column with no data\r\nC() to rename the columns\r\n\r\n\r\n# getting info about all excel sheets\r\n\r\n  sheet_names <- readxl::excel_sheets(path)\r\n  print(sheet_names)\r\n\r\n\r\n[1] \"Contents\"          \"Table 1\"           \"Table 2\"          \r\n[4] \"Explanatory Notes\"\r\n\r\n# moving data from just the interesting sheets to their own data tables\r\n  \r\n  table_1_data <- readxl::read_excel(path, sheet = \"Table 1\")\r\n  table_2_data <- readxl::read_excel(path, sheet = \"Table 2\")\r\n  \r\n# Print the data as loaded to check the values\r\n  \r\n  print(table_1_data)\r\n\r\n\r\n# A tibble: 21 x 16\r\n   `Australian Burea~` ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9 \r\n   <chr>               <chr> <chr> <chr> <chr> <chr> <chr> <lgl> <chr>\r\n 1 1800.0 Australian ~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 2 Released on 15 Nov~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 3 Table 1 Response b~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 4 <NA>                Resp~ <NA>  <NA>  <NA>  <NA>  <NA>  NA    Elig~\r\n 5 <NA>                Yes   <NA>  No    <NA>  Total <NA>  NA    Resp~\r\n 6 Country             no.   %     no.   %     no.   %     NA    no.  \r\n 7 New South Wales     2374~ 57.7~ 1736~ 42.2~ 4111~ 100   NA    4111~\r\n 8 Victoria            2145~ 64.9~ 1161~ 35.1~ 3306~ 100   NA    3306~\r\n 9 Queensland          1487~ 60.7~ 9610~ 39.2~ 2448~ 100   NA    2448~\r\n10 South Australia     5925~ 62.5  3562~ 37.5  9487~ 100   NA    9487~\r\n# ... with 11 more rows, and 7 more variables: ...10 <chr>,\r\n#   ...11 <chr>, ...12 <chr>, ...13 <chr>, ...14 <chr>, ...15 <chr>,\r\n#   ...16 <chr>\r\n\r\n  print(table_2_data)\r\n\r\n\r\n# A tibble: 190 x 16\r\n   `Australian Burea~` ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9 \r\n   <chr>               <chr> <chr> <chr> <chr> <chr> <chr> <lgl> <chr>\r\n 1 1800.0 Australian ~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 2 Released on 15 Nov~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 3 Table 2 Response b~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 4 <NA>                Resp~ <NA>  <NA>  <NA>  <NA>  <NA>  NA    Elig~\r\n 5 <NA>                Yes   <NA>  No    <NA>  Total <NA>  NA    Resp~\r\n 6 Region              no.   %     no.   %     no.   %     NA    no.  \r\n 7 New South Wales Di~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 8 Banks               37736 44.8~ 46343 55.1~ 84079 100   NA    84079\r\n 9 Barton              37153 43.6~ 47984 56.3~ 85137 100   NA    85137\r\n10 Bennelong           42943 49.7~ 43215 50.2~ 86158 100   NA    86158\r\n# ... with 180 more rows, and 7 more variables: ...10 <chr>,\r\n#   ...11 <chr>, ...12 <chr>, ...13 <chr>, ...14 <chr>, ...15 <chr>,\r\n#   ...16 <chr>\r\n\r\n  # Beginning the clean up process\r\n  \r\n# 1) Remove the rows with no values using the complete.cases command.\r\n#    Print the data after the removal of the empty rows.\r\n    \r\n  table_1_data <- table_1_data[complete.cases(table_1_data[ , 3]),]\r\n  print(table_1_data)\r\n\r\n\r\n# A tibble: 10 x 16\r\n   `Australian Burea~` ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9 \r\n   <chr>               <chr> <chr> <chr> <chr> <chr> <chr> <lgl> <chr>\r\n 1 Country             no.   %     no.   %     no.   %     NA    no.  \r\n 2 New South Wales     2374~ 57.7~ 1736~ 42.2~ 4111~ 100   NA    4111~\r\n 3 Victoria            2145~ 64.9~ 1161~ 35.1~ 3306~ 100   NA    3306~\r\n 4 Queensland          1487~ 60.7~ 9610~ 39.2~ 2448~ 100   NA    2448~\r\n 5 South Australia     5925~ 62.5  3562~ 37.5  9487~ 100   NA    9487~\r\n 6 Western Australia   8015~ 63.7~ 4559~ 36.2~ 1257~ 100   NA    1257~\r\n 7 Tasmania            1919~ 63.6~ 1096~ 36.3~ 3016~ 100   NA    3016~\r\n 8 Northern Territory~ 48686 60.6~ 31690 39.3~ 80376 100   NA    80376\r\n 9 Australian Capital~ 1754~ 74    61520 26    2369~ 100   NA    2369~\r\n10 Australia           7817~ 61.6~ 4873~ 38.3~ 1269~ 100   NA    1269~\r\n# ... with 7 more variables: ...10 <chr>, ...11 <chr>, ...12 <chr>,\r\n#   ...13 <chr>, ...14 <chr>, ...15 <chr>, ...16 <chr>\r\n\r\n  table_2_data <- table_2_data[complete.cases(table_2_data[ , 3]),]\r\n  print(table_2_data)\r\n\r\n\r\n# A tibble: 160 x 16\r\n   `Australian Burea~` ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9 \r\n   <chr>               <chr> <chr> <chr> <chr> <chr> <chr> <lgl> <chr>\r\n 1 Region              no.   %     no.   %     no.   %     NA    no.  \r\n 2 Banks               37736 44.8~ 46343 55.1~ 84079 100   NA    84079\r\n 3 Barton              37153 43.6~ 47984 56.3~ 85137 100   NA    85137\r\n 4 Bennelong           42943 49.7~ 43215 50.2~ 86158 100   NA    86158\r\n 5 Berowra             48471 54.6~ 40369 45.3~ 88840 100   NA    88840\r\n 6 Blaxland            20406 26.1~ 57926 73.9~ 78332 100   NA    78332\r\n 7 Bradfield           53681 60.6~ 34927 39.3~ 88608 100   NA    88608\r\n 8 Calare              54091 60.2~ 35779 39.7~ 89870 100   NA    89870\r\n 9 Chifley             32871 41.2~ 46702 58.7~ 79573 100   NA    79573\r\n10 Cook                47505 55    38804 45    86309 100   NA    86309\r\n# ... with 150 more rows, and 7 more variables: ...10 <chr>,\r\n#   ...11 <chr>, ...12 <chr>, ...13 <chr>, ...14 <chr>, ...15 <chr>,\r\n#   ...16 <chr>\r\n\r\n# 2) Remove the empty column which happens to be column 8 on both sheets\r\n  \r\n  table_1_data <- select(table_1_data, -8)\r\n  table_2_data <- select(table_2_data, -8)\r\n  \r\n# 3) Rename the column headers to make the data clear. \r\n  \r\n  names(table_1_data) <- c('Region 1','Num Yes 1' , '% Yes 1', 'Num No 1', '% No 1', 'Num Total 1', '% Total 1','Clear Response 1', '% Clear Response 1', 'Not Clear Response 1', '% Not Clear Response 1','Total Response 1', '% Total 1')\r\n  \r\n  names(table_2_data) <- c('Region 2','Num Yes 2' , '% Yes 2', 'Num No 2', '% No 2', 'Num Total 2', '% Total 2','Clear Response 2', '% Clear Response 2', 'Not Clear Response 2', '% Not Clear Response 2', 'Not Responding 2', '% Not Responding 2', 'Total Response 2', '% Total 2')\r\n  \r\n#    Print the data after the removal of column and renaming of the columns.\r\n  \r\n  print(table_1_data)    \r\n\r\n\r\n# A tibble: 10 x 15\r\n   `Region 1`  `Num Yes 1` `% Yes 1` `Num No 1` `% No 1` `Num Total 1`\r\n   <chr>       <chr>       <chr>     <chr>      <chr>    <chr>        \r\n 1 Country     no.         %         no.        %        no.          \r\n 2 New South ~ 2374362     57.79999~ 1736838    42.2000~ 4111200      \r\n 3 Victoria    2145629     64.90000~ 1161098    35.1000~ 3306727      \r\n 4 Queensland  1487060     60.70000~ 961015     39.2999~ 2448075      \r\n 5 South Aust~ 592528      62.5      356247     37.5     948775       \r\n 6 Western Au~ 801575      63.70000~ 455924     36.2999~ 1257499      \r\n 7 Tasmania    191948      63.60000~ 109655     36.3999~ 301603       \r\n 8 Northern T~ 48686       60.60000~ 31690      39.3999~ 80376        \r\n 9 Australian~ 175459      74        61520      26       236979       \r\n10 Australia   7817247     61.60000~ 4873987    38.3999~ 12691234     \r\n# ... with 9 more variables: `% Total 1` <chr>,\r\n#   `Clear Response 1` <chr>, `% Clear Response 1` <chr>,\r\n#   `Not Clear Response 1` <chr>, `% Not Clear Response 1` <chr>,\r\n#   `Total Response 1` <chr>, `% Total 1` <chr>, `` <chr>, `` <chr>\r\n\r\n  print(table_2_data)\r\n\r\n\r\n# A tibble: 160 x 15\r\n   `Region 2` `Num Yes 2` `% Yes 2`  `Num No 2` `% No 2` `Num Total 2`\r\n   <chr>      <chr>       <chr>      <chr>      <chr>    <chr>        \r\n 1 Region     no.         %          no.        %        no.          \r\n 2 Banks      37736       44.899999~ 46343      55.1000~ 84079        \r\n 3 Barton     37153       43.600000~ 47984      56.3999~ 85137        \r\n 4 Bennelong  42943       49.799999~ 43215      50.2000~ 86158        \r\n 5 Berowra    48471       54.600000~ 40369      45.3999~ 88840        \r\n 6 Blaxland   20406       26.100000~ 57926      73.9000~ 78332        \r\n 7 Bradfield  53681       60.600000~ 34927      39.3999~ 88608        \r\n 8 Calare     54091       60.200000~ 35779      39.7999~ 89870        \r\n 9 Chifley    32871       41.299999~ 46702      58.7000~ 79573        \r\n10 Cook       47505       55         38804      45       86309        \r\n# ... with 150 more rows, and 9 more variables: `% Total 2` <chr>,\r\n#   `Clear Response 2` <chr>, `% Clear Response 2` <chr>,\r\n#   `Not Clear Response 2` <chr>, `% Not Clear Response 2` <chr>,\r\n#   `Not Responding 2` <chr>, `% Not Responding 2` <chr>,\r\n#   `Total Response 2` <chr>, `% Total 2` <chr>\r\n\r\n# 3) remove the total lines on table 2\r\n  \r\n  # Having trouble getting this to work.  \r\n  # table_2_data %>% filter(grepl('total', 1))\r\n  \r\n \r\n  \r\n    # remove any rows with the word \"Total\" in them\r\n    # table_2_data <- (!grep(\"Total\", table_2_data))\r\n    # print(table_2_data)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-13T15:56:43-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsshayehalleegithubiocoursework2022-02-12-dacss-601-hw02/",
    "title": "Shaye Hallee - DACSS 601 HW02",
    "description": "Reading in ACS 2019 disability population estimates.",
    "author": [
      {
        "name": "Shaye Hallee",
        "url": {}
      }
    ],
    "date": "2022-02-13",
    "categories": [],
    "contents": "\r\nIntroducing the data\r\nHere, we’ll be looking at data about disabled populations in US counties. Specifically, we’re using Subject Table S1810 from the 2019 1-year population estimates from the American Community Survey, an on-going demographics survey run by the U.S. Census Bureau. This table includes lots of data including county populations and disabled populations across different demographics.1\r\nWe’re going to answer the following questions:\r\nWhich US county has the highest disabled population (by count)?\r\nWhich county has the lowest disabled population (by count)?\r\nWhich counties have a much higher than average disabled population (by percentage)?\r\nWhich counties have a much lower than average disabled population (by percentage)?\r\nTable S1810 is incredibly large, so we’ll pull out the following columns:\r\nVariable\r\nClass\r\nDescription\r\nCounty\r\nchar (text)\r\ncounty name\r\nState\r\nchar (text)\r\nstate name\r\ncty_ni_pop\r\ndbl (numerical)\r\ntotal estimated 2019 county population of noninstitutionalized civilians\r\ncty_ni_dis_pop\r\ndbl (numerical)\r\nestimated 2019 county population of disabled, noninstitutionalized civilians\r\ncty_pct_disabled\r\ndbl (numerical)\r\ndisabled population as a percentage of the total county population\r\n“Noninstitutionalized civilians” means people who aren’t in the armed forces and don’t live in institutions like prisons, hospitals, or nursing homes.2 These other two groups usually rely on their respective institutions to meet their support and access needs, and they usually have higher disabled populations. Surveys like the ACS are mostly used to plan community resources, so they exclude these groups with the assumption that they won’t be interacting with the communities around them.3\r\nI might have to find more thorough data if I plan to use demographics information in future projects.\r\nReading in the data\r\nLet’s read the data in, free it from an unnecessary row, and put it all in a tibble.\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(knitr)\r\n\r\ndata <- read.csv(\"ACS_ST_1Y_2019_Disability_County/data_all.csv\", encoding = \"UTF-8\")\r\ndata <- data[c(2:nrow(data)),]\r\ndata <- as_tibble(data)\r\n\r\n\r\n\r\nLet’s make sure it’s a tibble of about the expected size.\r\n\r\n\r\nclass(data)\r\n\r\n\r\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\r\n\r\ndim(data)\r\n\r\n\r\n[1] 840 416\r\n\r\nDone!\r\nCleaning up the data\r\nRight now, our tibble has a lot of very cool data that we won’t be using, and the column names aren’t human-friendly.\r\nLet’s extract the right columns and give them (marginally) friendlier names. We’ll use dplyr::select for that.\r\n\r\n\r\ndata <- select(data,\r\n               NAME,\r\n               cty_ni_pop = S1810_C01_001E,\r\n               cty_ni_dis_pop = S1810_C02_001E,\r\n               cty_pct_disabled = S1810_C03_001E)\r\n\r\n\r\n\r\nFor kicks, let’s separate the “NAME” column into “County” and “State.”\r\n\r\n\r\ndata <- separate(data, NAME, c(\"County\", \"State\"), sep = \", \")\r\n\r\n\r\n\r\nLet’s turn the appropriate columns into numerical values. This is kind of sloppy, but it’s just three columns in a script we probably won’t use again. Famous last words, I know.\r\n\r\n\r\ndata$cty_ni_pop <- as.numeric(data$cty_ni_pop)\r\ndata$cty_ni_dis_pop <- as.numeric(data$cty_ni_dis_pop)\r\ndata$cty_pct_disabled <- as.numeric(data$cty_pct_disabled)\r\n\r\n\r\n\r\nHere’s what the data looks like now:\r\n\r\n\r\nkable(head(data))\r\n\r\n\r\nCounty\r\nState\r\ncty_ni_pop\r\ncty_ni_dis_pop\r\ncty_pct_disabled\r\nBaldwin County\r\nAlabama\r\n220911\r\n31901\r\n14.4\r\nCalhoun County\r\nAlabama\r\n111075\r\n22269\r\n20.0\r\nCullman County\r\nAlabama\r\n82841\r\n14480\r\n17.5\r\nDeKalb County\r\nAlabama\r\n70392\r\n7583\r\n10.8\r\nElmore County\r\nAlabama\r\n75409\r\n9707\r\n12.9\r\nEtowah County\r\nAlabama\r\n101470\r\n15944\r\n15.7\r\n\r\nkable(tail(data))\r\n\r\n\r\nCounty\r\nState\r\ncty_ni_pop\r\ncty_ni_dis_pop\r\ncty_pct_disabled\r\nMayagüez Municipio\r\nPuerto Rico\r\n71018\r\n15705\r\n22.1\r\nPonce Municipio\r\nPuerto Rico\r\n129198\r\n28785\r\n22.3\r\nSan Juan Municipio\r\nPuerto Rico\r\n313915\r\n60014\r\n19.1\r\nToa Alta Municipio\r\nPuerto Rico\r\n71897\r\n6140\r\n8.5\r\nToa Baja Municipio\r\nPuerto Rico\r\n73735\r\n16284\r\n22.1\r\nTrujillo Alto Municipio\r\nPuerto Rico\r\n63312\r\n15870\r\n25.1\r\n\r\nFinding cool things in the data\r\nFirst, let’s find the average disabled population in a US county, as a percentage of the total population.\r\n\r\n\r\nmean_pct_disabled <- mean(data$cty_pct_disabled)\r\nmean_pct_disabled\r\n\r\n\r\n[1] 13.70964\r\n\r\nWe’ll use dplyr::filter to answer the questions from the intro.\r\nWhich US county has the highest disabled population (by count)?\r\n\r\n\r\nhighest_disabled_pop <- filter(data, (data$cty_ni_dis_pop == max(data$cty_ni_dis_pop)))\r\nkable(highest_disabled_pop)\r\n\r\n\r\nCounty\r\nState\r\ncty_ni_pop\r\ncty_ni_dis_pop\r\ncty_pct_disabled\r\nLos Angeles County\r\nCalifornia\r\n9964081\r\n984931\r\n9.9\r\n\r\nWhich county has the lowest disabled population (by count)?\r\n\r\n\r\nlowest_disabled_pop <- filter(data, (data$cty_ni_dis_pop == min(data$cty_ni_dis_pop)))\r\nkable(lowest_disabled_pop)\r\n\r\n\r\nCounty\r\nState\r\ncty_ni_pop\r\ncty_ni_dis_pop\r\ncty_pct_disabled\r\nWalker County\r\nTexas\r\n61093\r\n4947\r\n8.1\r\n\r\nWhich counties have a much higher than average disabled population (by percentage)? Let’s arbitrarily use 1.75 times the mean as our threshold.\r\n\r\n\r\nhi_disability <- filter(data, data$cty_pct_disabled >= 1.75*mean_pct_disabled)\r\nkable(hi_disability)\r\n\r\n\r\nCounty\r\nState\r\ncty_ni_pop\r\ncty_ni_dis_pop\r\ncty_pct_disabled\r\nTalladega County\r\nAlabama\r\n76722\r\n20102\r\n26.2\r\nWalker County\r\nAlabama\r\n62896\r\n17381\r\n27.6\r\nCharlotte County\r\nFlorida\r\n186002\r\n45368\r\n24.4\r\nWalker County\r\nGeorgia\r\n68199\r\n16593\r\n24.3\r\nRaleigh County\r\nWest Virginia\r\n70907\r\n17130\r\n24.2\r\nBayamón Municipio\r\nPuerto Rico\r\n164521\r\n43015\r\n26.1\r\nCaguas Municipio\r\nPuerto Rico\r\n124149\r\n32099\r\n25.9\r\nGuaynabo Municipio\r\nPuerto Rico\r\n83119\r\n19948\r\n24.0\r\nTrujillo Alto Municipio\r\nPuerto Rico\r\n63312\r\n15870\r\n25.1\r\n\r\nWhich counties have a much lower than average disabled population (by percentage)? Let’s (also arbitrarily) use 0.5 times the mean as our threshold.\r\n\r\n\r\nlo_disability <- filter(data, data$cty_pct_disabled <= 0.5*mean_pct_disabled)\r\nkable(lo_disability)\r\n\r\n\r\nCounty\r\nState\r\ncty_ni_pop\r\ncty_ni_dis_pop\r\ncty_pct_disabled\r\nGwinnett County\r\nGeorgia\r\n930955\r\n63740\r\n6.8\r\nCarver County\r\nMinnesota\r\n104708\r\n6822\r\n6.5\r\nFort Bend County\r\nTexas\r\n806384\r\n53265\r\n6.6\r\nArlington County\r\nVirginia\r\n231652\r\n14506\r\n6.3\r\nLoudoun County\r\nVirginia\r\n411654\r\n23713\r\n5.8\r\nAlexandria city\r\nVirginia\r\n155298\r\n10181\r\n6.6\r\n\r\nWhat’s next?\r\nNone of this tells us anything particularly interesting without looking at some complementary data. I’d be interested in looking at other data from Subject Table S1810 to see if there are correlations with race, overall population size, age, or type of disability. Other data sets are out there with data on poverty, food access, urbanization, and lots of other information, and it’ll be very cool to check out some of that data.\r\n\r\nU.S. Census Bureau, 2019 American Community Survey 1-Year Estimates, https://data.census.gov/cedsci/table?t=Disability&tid=ACSST1Y2019.S1810↩︎\r\nU.S. Census Bureau, American Community Survey and Puerto Rico Community Survey 2019 Code List, https://www2.census.gov/programs-surveys/acs/tech_docs/code_lists/2019_ACS_Code_Lists.pdf↩︎\r\nBrault, M. (2008). Disability Status and the Characteristics of People in Group Quarters: A Brief Analysis of Disability Prevalence Among the Civilian Noninstitutionalized and Total Populations in the American Community Survey. U.S. Census Bureau “Working Papers”. https://www.census.gov/library/working-papers/2008/demo/brault-01.html↩︎\r\n",
    "preview": {},
    "last_modified": "2022-02-13T15:57:19-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-02-example-pivot-longer/",
    "title": "Example Code for Pivot Longer",
    "description": "I'm sharing some example code for pivot_longer using the eggs data. Enjoy!",
    "author": [
      {
        "name": "Meredith Rolfe",
        "url": {
          "https://www.umass.edu/sbs/data-analytics-and-computational-social-science-program": {}
        }
      }
    ],
    "date": "2022-02-11",
    "categories": [
      "example code",
      "data cleaning"
    ],
    "contents": "\nThis is example code for using the pivot functions in R. Several of the government data sources include tabular data that really need to be pivoted into a dataset in which a “case” is some combination of the grouping variables (the rows and columns in the table) alongside the appropriate statistical value(s) in the table (e.g., counts or average costs). Lets start with the easy to read in eggs_tidy.csv just so we can focus on the pivoting function.\n\n\neggs<-read_csv(\"../../_data/eggs_tidy.csv\", show_col_types = FALSE)\neggs\n\n\n# A tibble: 120 × 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>\n 1 January    2004             126         230                    132 \n 2 February   2004             128.        226.                   134.\n 3 March      2004             131         225                    137 \n 4 April      2004             131         225                    137 \n 5 May        2004             131         225                    137 \n 6 June       2004             134.        231.                   137 \n 7 July       2004             134.        234.                   137 \n 8 August     2004             134.        234.                   137 \n 9 September  2004             130.        234.                   136.\n10 October    2004             128.        234.                   136.\n# … with 110 more rows, and 1 more variable: extra_large_dozen <dbl>\n\nLooking at the data, we can see that each case consists of a year-month combination (e.g., January 2004), while the values are the average price (in cents) of four different types of eggs (e.g., large_half_dozen, large_dozen, etc) But really, wouldn’t it possibly make more sense to consider the case as a year-month-type combination, with a single price value for each case?\nPivot Longer - One New Category Variable\nTo do this (and make our data easier to graph and analyze), we can pivot longer - changing our data from 120 rows with 6 variables (2 grouping and 4 values) to 480 rows of 4 variables (with 3 grouping variables and a single price value).\n\n\neggs%>%\n  pivot_longer(cols=large_half_dozen:extra_large_dozen, \n               names_to = \"eggType\",\n               values_to = \"avgPrice\"\n  )\n\n\n# A tibble: 480 × 4\n   month     year eggType                avgPrice\n   <chr>    <dbl> <chr>                     <dbl>\n 1 January   2004 large_half_dozen           126 \n 2 January   2004 large_dozen                230 \n 3 January   2004 extra_large_half_dozen     132 \n 4 January   2004 extra_large_dozen          230 \n 5 February  2004 large_half_dozen           128.\n 6 February  2004 large_dozen                226.\n 7 February  2004 extra_large_half_dozen     134.\n 8 February  2004 extra_large_dozen          230 \n 9 March     2004 large_half_dozen           131 \n10 March     2004 large_dozen                225 \n# … with 470 more rows\n\nWell, that was super easy. But wait, what if you are interested in egg size - you want to know how much more expensive extra-large eggs are compared to large eggs. Right now, that will be annoying, as you will have to keep sorting out the egg quantity - whether the price is for a half_dozen or a dozen eggs. Wouldn’t it be nice if we didn’t have a long egg type column with both size and quantity squashed into a single categorical variable? It would be so useful to have a new dataset with 4 grouping variables (year, month, size, and quantity) and the same value (price).\nPivot Longer - Two New Category Variables\nSo, once again we want to use pivot longer, but we will be adding two new category variables (for a total of 4) and this will cut the number of rows in half (to 240). But how in the world can we let R know what we want it to do?? Thankfully, someone named the egg types (column-names) pretty systematically, but how can use this to our advantage? Working with patterns in the names_sep option of the pivot functions makes it pretty easy (well, except our variable names have more than one underscore, so we have to sort of hack this part by also using mutate on the resulting category labels.)\n\n\neggs%>%\n  pivot_longer(cols=large_half_dozen:extra_large_dozen,\n               names_to = c(\"size\", \"quantity\"),\n               names_sep=\"arge_\",\n               values_to = \"price\"\n  ) %>%\n  mutate(size = case_when(\n    size == \"l\" ~ \"Large\",\n    size == \"extra_l\" ~ \"Extra Large\"\n  ))\n\n\n# A tibble: 480 × 5\n   month     year size        quantity   price\n   <chr>    <dbl> <chr>       <chr>      <dbl>\n 1 January   2004 Large       half_dozen  126 \n 2 January   2004 Large       dozen       230 \n 3 January   2004 Extra Large half_dozen  132 \n 4 January   2004 Extra Large dozen       230 \n 5 February  2004 Large       half_dozen  128.\n 6 February  2004 Large       dozen       226.\n 7 February  2004 Extra Large half_dozen  134.\n 8 February  2004 Extra Large dozen       230 \n 9 March     2004 Large       half_dozen  131 \n10 March     2004 Large       dozen       225 \n# … with 470 more rows\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-11T22:05:47-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httprpubscomikennedy040hw1/",
    "title": "HW1",
    "description": "1st HW assignment for DACSS 601.",
    "author": [
      {
        "name": "Ian Kennedy",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:02-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httprpubscomsnehalhw2/",
    "title": "DACSS 601 HW2",
    "description": "Reading in Data",
    "author": [
      {
        "name": "Snehal Prabhu",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\nRailroad Data\r\n\r\n\r\nlibrary(readr)\r\nlibrary(tidyverse)\r\ndata <- read_csv(\"601/railroad_2012_clean_state.csv\")\r\ncolnames(data)\r\n\r\n\r\n[1] \"state\"           \"total_employees\"\r\n\r\nhead(data)\r\n\r\n\r\n# A tibble: 6 x 2\r\n  state total_employees\r\n  <chr>           <dbl>\r\n1 AE                  2\r\n2 AK                103\r\n3 AL               4257\r\n4 AP                  1\r\n5 AR               3871\r\n6 AZ               3153\r\n\r\nData wrangling Operation\r\n\r\n\r\n# filter data with the number of employees and then arrange in decreasing order\r\nfilter(data,total_employees>10000) %>%\r\n  arrange(desc(total_employees)) \r\n\r\n\r\n# A tibble: 6 x 2\r\n  state total_employees\r\n  <chr>           <dbl>\r\n1 TX              19839\r\n2 IL              19131\r\n3 NY              17050\r\n4 NE              13176\r\n5 CA              13137\r\n6 PA              12769\r\n\r\nReading unclean excel data\r\n\r\n\r\nlibrary(readxl)\r\nexceldata <- read_excel(\"601/StateCounty2012.xls\", skip=3)\r\ncolnames(exceldata)\r\n\r\n\r\n[1] \"STATE\"  \"...2\"   \"COUNTY\" \"...4\"   \"TOTAL\" \r\n\r\nhead(exceldata)\r\n\r\n\r\n# A tibble: 6 x 5\r\n  STATE     ...2  COUNTY               ...4  TOTAL\r\n  <chr>     <lgl> <chr>                <lgl> <dbl>\r\n1 AE        NA    APO                  NA        2\r\n2 AE Total1 NA    <NA>                 NA        2\r\n3 AK        NA    ANCHORAGE            NA        7\r\n4 AK        NA    FAIRBANKS NORTH STAR NA        2\r\n5 AK        NA    JUNEAU               NA        3\r\n6 AK        NA    MATANUSKA-SUSITNA    NA        2\r\n\r\nData wrangling Operation\r\n\r\n\r\nlibrary(tidyr)\r\nexceldata <- exceldata %>%\r\n  select(\"STATE\",\"COUNTY\",\"TOTAL\") %>%\r\n  drop_na(\"COUNTY\")\r\nhead(exceldata)\r\n\r\n\r\n# A tibble: 6 x 3\r\n  STATE COUNTY               TOTAL\r\n  <chr> <chr>                <dbl>\r\n1 AE    APO                      2\r\n2 AK    ANCHORAGE                7\r\n3 AK    FAIRBANKS NORTH STAR     2\r\n4 AK    JUNEAU                   3\r\n5 AK    MATANUSKA-SUSITNA        2\r\n6 AK    SITKA                    1\r\n\r\naggregate(x=exceldata$TOTAL, by=list(exceldata$STATE), FUN=sum)\r\n\r\n\r\n   Group.1     x\r\n1       AE     2\r\n2       AK   103\r\n3       AL  4257\r\n4       AP     1\r\n5       AR  3871\r\n6       AZ  3153\r\n7       CA 13137\r\n8       CO  3650\r\n9       CT  2592\r\n10      DC   279\r\n11      DE  1495\r\n12      FL  7419\r\n13      GA  8605\r\n14      HI     4\r\n15      IA  4019\r\n16      ID  1563\r\n17      IL 19131\r\n18      IN  8537\r\n19      KS  6092\r\n20      KY  4811\r\n21      LA  3915\r\n22      MA  3379\r\n23      MD  4709\r\n24      ME   654\r\n25      MI  3932\r\n26      MN  5467\r\n27      MO  8419\r\n28      MS  2111\r\n29      MT  3327\r\n30      NC  3143\r\n31      ND  2204\r\n32      NE 13176\r\n33      NH   393\r\n34      NJ  8329\r\n35      NM  1958\r\n36      NV   746\r\n37      NY 17050\r\n38      OH  9056\r\n39      OK  2318\r\n40      OR  2322\r\n41      PA 12769\r\n42      RI   487\r\n43      SC  2296\r\n44      SD   949\r\n45      TN  4952\r\n46      TX 19839\r\n47      UT  1917\r\n48      VA  7551\r\n49      VT   259\r\n50      WA  5222\r\n51      WI  3773\r\n52      WV  3213\r\n53      WY  2876\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:39-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsdamionperrygithubiodcss601posts/",
    "title": "Homework 2",
    "description": "Reading in .xls data & doing a bit of tidying!",
    "author": [
      {
        "name": "Damion Perry",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\nThe following is data summarizing the US Railroad employment numbers from 2012.\n‘state’\ntype -> character string Represents the state that railroad employees worked.\n‘county’\ntype -> character string Represents the county within the corresponding state.\n‘num_employees’\ntype -> dbl Number of employees working for the railroad in the corresponding state and county.\nTidy & Wrangle\nThe original dataset has been modified to display the results for US railroad employment in Massachusetts.\n\n\nlibrary(readxl)\nStateCounty2012 <- read_excel(\"HW2/StateCounty2012.xlsx\", skip = 2)\nstate_county <- StateCounty2012[c(1,3,5)]\nstate_county %>% \n  rename(state = STATE, county = COUNTY, num_employees = TOTAL) %>%\n  drop_na(county) %>% \n  filter(state == \"MA\") %>% \n  arrange(desc(num_employees))\n\n\n# A tibble: 12 × 3\n   state county     num_employees\n   <chr> <chr>              <dbl>\n 1 MA    MIDDLESEX            673\n 2 MA    SUFFOLK              558\n 3 MA    PLYMOUTH             429\n 4 MA    NORFOLK              386\n 5 MA    ESSEX                314\n 6 MA    WORCESTER            310\n 7 MA    BRISTOL              232\n 8 MA    HAMPDEN              202\n 9 MA    FRANKLIN             113\n10 MA    HAMPSHIRE             68\n11 MA    BERKSHIRE             50\n12 MA    BARNSTABLE            44\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-09T18:38:05-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomahungundaphhw12/",
    "title": "HW1 - Attempt #2",
    "description": "DACSS 601 Data Science Fundamentals - Homework 1",
    "author": [
      {
        "name": "Apoorva Hungund",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-09T18:36:51-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomamarkowitzhw1/",
    "title": "HW1",
    "description": "Already messed up the first homework",
    "author": [
      {
        "name": "Ari Markowitz",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\nR Markdown\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n\nsummary(cars)\n\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\nIncluding Plots\nYou can also embed plots, for example:\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n\n\n\n",
    "preview": "posts/httpsrpubscomamarkowitzhw1/distill-preview.png",
    "last_modified": "2022-02-09T18:37:12-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomamarkowitzhw2/",
    "title": "HW2",
    "description": "This is Homework 2! Pulling JSON data from USDA food data website",
    "author": [
      {
        "name": "Ari Markowitz",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\nSetup\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE)\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(httr)\nlibrary(jsonlite)\nknitr::opts_knit$set(root.dir = \"/Users/Lion_1/Desktop/DACSS/601/Datasets\")\n\n\n\nRead Food Data from API Key\nAPI has 200 item limit per call, iterate 50 times over pageNumber to generate dataset of 1000 items:\n\n\n#API KEY: CUz3HomE1xtius6ZtxNx4MnWny9tgvYT0mWS4HDb\ni<-1\nfoodlist <- list()\nwhile (i<=50){\n  if (i==1){\n      foodlist<- fromJSON(rawToChar(GET(paste(\"https://api.nal.usda.gov/fdc/v1/foods/list?api_key=CUz3HomE1xtius6ZtxNx4MnWny9tgvYT0mWS4HDb&&pageNumber=\",1,\"&&PageSize=200\",sep=\"\"))$content))\n  }else{\n    foodlist <-rbind(foodlist,fromJSON(rawToChar(GET(paste(\"https://api.nal.usda.gov/fdc/v1/foods/list?api_key=CUz3HomE1xtius6ZtxNx4MnWny9tgvYT0mWS4HDb&&pageNumber=\",1,\"&&PageSize=200\",sep=\"\"))$content)))\n  }\ni <- i+1\n}\n\n\n\nClean Up Data\nData contains nested tables, pull them out:\n\n\nfoodlist <- foodlist %>% unnest(cols = c(foodNutrients)) %>% rename(measureID = number, measureName = name, value = amount )\nprint(head(foodlist))\n\n\n# A tibble: 6 × 12\n    fdcId description   dataType    publicationDate foodCode measureID\n    <int> <chr>         <chr>       <chr>           <chr>    <chr>    \n1 1104067 100 GRAND Bar Survey (FN… 2020-10-30      91715300 203      \n2 1104067 100 GRAND Bar Survey (FN… 2020-10-30      91715300 204      \n3 1104067 100 GRAND Bar Survey (FN… 2020-10-30      91715300 205      \n4 1104067 100 GRAND Bar Survey (FN… 2020-10-30      91715300 208      \n5 1104067 100 GRAND Bar Survey (FN… 2020-10-30      91715300 221      \n6 1104067 100 GRAND Bar Survey (FN… 2020-10-30      91715300 255      \n# … with 6 more variables: measureName <chr>, value <dbl>,\n#   unitName <chr>, derivationCode <chr>,\n#   derivationDescription <chr>, ndbNumber <chr>\n\nDescribe the data:\n\n\nstr(foodlist)\n\n\ntibble [600,800 × 12] (S3: tbl_df/tbl/data.frame)\n $ fdcId                : int [1:600800] 1104067 1104067 1104067 1104067 1104067 1104067 1104067 1104067 1104067 1104067 ...\n $ description          : chr [1:600800] \"100 GRAND Bar\" \"100 GRAND Bar\" \"100 GRAND Bar\" \"100 GRAND Bar\" ...\n $ dataType             : chr [1:600800] \"Survey (FNDDS)\" \"Survey (FNDDS)\" \"Survey (FNDDS)\" \"Survey (FNDDS)\" ...\n $ publicationDate      : chr [1:600800] \"2020-10-30\" \"2020-10-30\" \"2020-10-30\" \"2020-10-30\" ...\n $ foodCode             : chr [1:600800] \"91715300\" \"91715300\" \"91715300\" \"91715300\" ...\n $ measureID            : chr [1:600800] \"203\" \"204\" \"205\" \"208\" ...\n $ measureName          : chr [1:600800] \"Protein\" \"Total lipid (fat)\" \"Carbohydrate, by difference\" \"Energy\" ...\n $ value                : num [1:600800] 2.5 19.3 71 468 0 6.1 8 55 51.9 1 ...\n $ unitName             : chr [1:600800] \"G\" \"G\" \"G\" \"KCAL\" ...\n $ derivationCode       : chr [1:600800] NA NA NA NA ...\n $ derivationDescription: chr [1:600800] NA NA NA NA ...\n $ ndbNumber            : chr [1:600800] NA NA NA NA ...\n\nSort data by Measure ID:\n\n\nfoodlist <- foodlist %>% arrange(measureID)\n\n\n\nCreate a list of datasets, one for each dataType:\n\n\ndataTypes <- distinct(foodlist,dataType)\nfoodlist_by_dataType <- list()\nfor (i in seq_along(dataTypes[[1]])){\n  foodlist_by_dataType[[i]] <- foodlist %>% filter(dataType == dataTypes[[1]][i])\n}\nhead(foodlist_by_dataType)\n\n\n[[1]]\n# A tibble: 13,950 × 12\n     fdcId description     dataType publicationDate foodCode measureID\n     <int> <chr>           <chr>    <chr>           <chr>    <chr>    \n 1 1999631 Almond milk, u… Foundat… 2021-10-28      <NA>     \"\"       \n 2 1999631 Almond milk, u… Foundat… 2021-10-28      <NA>     \"\"       \n 3 1999631 Almond milk, u… Foundat… 2021-10-28      <NA>     \"\"       \n 4 1999631 Almond milk, u… Foundat… 2021-10-28      <NA>     \"\"       \n 5 1999631 Almond milk, u… Foundat… 2021-10-28      <NA>     \"\"       \n 6 1999631 Almond milk, u… Foundat… 2021-10-28      <NA>     \"\"       \n 7 1999631 Almond milk, u… Foundat… 2021-10-28      <NA>     \"\"       \n 8 1999631 Almond milk, u… Foundat… 2021-10-28      <NA>     \"\"       \n 9 1999631 Almond milk, u… Foundat… 2021-10-28      <NA>     \"\"       \n10 1999631 Almond milk, u… Foundat… 2021-10-28      <NA>     \"\"       \n# … with 13,940 more rows, and 6 more variables: measureName <chr>,\n#   value <dbl>, unitName <chr>, derivationCode <chr>,\n#   derivationDescription <chr>, ndbNumber <chr>\n\n[[2]]\n# A tibble: 256,750 × 12\n     fdcId description     dataType publicationDate foodCode measureID\n     <int> <chr>           <chr>    <chr>           <chr>    <chr>    \n 1 1104067 100 GRAND Bar   Survey … 2020-10-30      91715300 203      \n 2 1104086 3 MUSKETEERS B… Survey … 2020-10-30      91726420 203      \n 3 1104087 3 Musketeers T… Survey … 2020-10-30      91726425 203      \n 4 1099098 Abalone, cooke… Survey … 2020-10-30      26301110 203      \n 5 1099099 Abalone, flour… Survey … 2020-10-30      26301140 203      \n 6 1099100 Abalone, steam… Survey … 2020-10-30      26301160 203      \n 7 1102193 Adobo, with no… Survey … 2020-10-30      58137300 203      \n 8 1102343 Adobo, with ri… Survey … 2020-10-30      58150530 203      \n 9 1103957 Agave liquid s… Survey … 2020-10-30      91302020 203      \n10 1101164 Air filled fri… Survey … 2020-10-30      53420300 203      \n# … with 256,740 more rows, and 6 more variables: measureName <chr>,\n#   value <dbl>, unitName <chr>, derivationCode <chr>,\n#   derivationDescription <chr>, ndbNumber <chr>\n\n[[3]]\n# A tibble: 330,100 × 12\n    fdcId description      dataType publicationDate foodCode measureID\n    <int> <chr>            <chr>    <chr>           <chr>    <chr>    \n 1 167782 Abiyuch, raw     SR Lega… 2019-04-01      <NA>     203      \n 2 171687 Acerola juice, … SR Lega… 2019-04-01      <NA>     203      \n 3 171686 Acerola, (west … SR Lega… 2019-04-01      <NA>     203      \n 4 168061 Acorn stew (Apa… SR Lega… 2019-04-01      <NA>     203      \n 5 168992 Agave, cooked (… SR Lega… 2019-04-01      <NA>     203      \n 6 168993 Agave, dried (S… SR Lega… 2019-04-01      <NA>     203      \n 7 169814 Agave, raw (Sou… SR Lega… 2019-04-01      <NA>     203      \n 8 169823 Agutuk, fish wi… SR Lega… 2019-04-01      <NA>     203      \n 9 168976 Agutuk, fish/be… SR Lega… 2019-04-01      <NA>     203      \n10 168977 Agutuk, meat-ca… SR Lega… 2019-04-01      <NA>     203      \n# … with 330,090 more rows, and 6 more variables: measureName <chr>,\n#   value <dbl>, unitName <chr>, derivationCode <chr>,\n#   derivationDescription <chr>, ndbNumber <chr>\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:45-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomaristotle1862605/",
    "title": "HW2",
    "description": "Data set - hotel- Includes numeric data regarding cancellations, arrival times, dates (MO, year, day), and cancellations.",
    "author": [
      {
        "name": "Nora Jones",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\nhotel <- read_csv(file=“hotel_bookings.csv”) hotel dim(hotel) arrange (hotel, desc(lead_time)) filter(hotel, lead_time > 100)\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:28-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomcbonney862319/",
    "title": "HW01 Christa Bonney test 2",
    "description": "publishing with Rpub test",
    "author": [
      {
        "name": "Christa Bonney",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:08-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomenoh860308/",
    "title": "HW1",
    "description": "This is an example of RMarkdown.",
    "author": [
      {
        "name": "Eunsol Noh",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:22-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomethancampbell864073/",
    "title": "Ethan Campbell HW2",
    "description": "Importing clean dataset into R.",
    "author": [
      {
        "name": "Ethan campbell",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\nImporting dataset in as Poultry and inspecting the data.\r\nHere we notice we different types of data and the dimensions. Product is a character, year is an integer, month is character, and Price_dollar is a double class with numeric data and decimals.\r\n\r\n\r\nPoultry <- read.csv(\"poultry_tidy.csv\")\r\ncolnames(Poultry)\r\n\r\n\r\n[1] \"Product\"      \"Year\"         \"Month\"        \"Price_Dollar\"\r\n\r\ndim(Poultry)\r\n\r\n\r\n[1] 600   4\r\n\r\nhead(Poultry)\r\n\r\n\r\n  Product Year    Month Price_Dollar\r\n1   Whole 2013  January        2.385\r\n2   Whole 2013 February        2.385\r\n3   Whole 2013    March        2.385\r\n4   Whole 2013    April        2.385\r\n5   Whole 2013      May        2.385\r\n6   Whole 2013     June        2.385\r\n\r\nBeginning to analyze and adjust the data.\r\nUsing filter and arrange on the data to filter out the lower cost items then placing price and year in descending order.With this we are able to view which items are higher in price and sort them by year and month.There are two functions however, one displays the top five of the table and the second one displays the last five of the table.\r\n\r\n\r\ndata(Poultry)\r\nPoultry %>%\r\n  filter(Price_Dollar > 3) %>%\r\n  arrange(desc(Price_Dollar, Year)) %>%\r\n  head()\r\n\r\n\r\n     Product Year    Month Price_Dollar\r\n1 B/S Breast 2013  January       7.0375\r\n2 B/S Breast 2013 February       7.0375\r\n3 B/S Breast 2013    March       7.0375\r\n4 B/S Breast 2013    April       7.0375\r\n5 B/S Breast 2013      May       7.0375\r\n6 B/S Breast 2013     June       7.0375\r\n\r\ndata(Poultry)\r\nPoultry %>%\r\n  filter(Price_Dollar > 3) %>%\r\n  arrange(desc(Price_Dollar, Year)) %>%\r\n  tail()\r\n\r\n\r\n           Product Year     Month Price_Dollar\r\n229 Bone-in Breast 2004      July        3.905\r\n230 Bone-in Breast 2004    August        3.905\r\n231 Bone-in Breast 2004 September        3.905\r\n232 Bone-in Breast 2004   October        3.905\r\n233 Bone-in Breast 2004  November        3.905\r\n234 Bone-in Breast 2004  December        3.905\r\n\r\nUsing filter and arrange\r\nThis will filter out the higher cost items and then placing year and price in descending order. With this information we can accuratly track the price change for each item by month and year. Once more using two equations to display the top five and the bottom five.\r\n\r\n\r\nPoultry %>%\r\n  filter(Price_Dollar < 3) %>%\r\n  arrange(desc(Year, Price_Dollar)) %>%\r\n  head()\r\n\r\n\r\n  Product Year    Month Price_Dollar\r\n1   Whole 2013  January        2.385\r\n2   Whole 2013 February        2.385\r\n3   Whole 2013    March        2.385\r\n4   Whole 2013    April        2.385\r\n5   Whole 2013      May        2.385\r\n6   Whole 2013     June        2.385\r\n\r\nPoultry %>%\r\n  filter(Price_Dollar < 3) %>%\r\n  arrange(desc(Year, Price_Dollar)) %>%\r\n  tail()\r\n\r\n\r\n    Product Year     Month Price_Dollar\r\n354  Thighs 2004      July        1.995\r\n355  Thighs 2004    August        1.995\r\n356  Thighs 2004 September        1.995\r\n357  Thighs 2004   October        1.995\r\n358  Thighs 2004  November        1.995\r\n359  Thighs 2004  December        1.995\r\n\r\nVisulaization\r\nWe assign the cheaper products to Cheap_poultry so we can utilize this function inside of a graph. After visualizing a smooth graph we can see the peak price for cheap products under $3 was in 2009. In the expenisive poultry we notice a major dip in prices in 2008 when there was a crash.\r\n\r\n\r\nPoultry %>%\r\n  filter(Price_Dollar < 3) %>%\r\n  arrange(desc(Year, Price_Dollar)) -> Cheap_poultry\r\n\r\nggplot(data = Cheap_poultry) +\r\n  geom_smooth(mapping = aes(x = Year, y = Price_Dollar), se = FALSE)\r\n\r\n\r\n\r\nPoultry %>%\r\n  filter(Price_Dollar > 3) %>%\r\n  arrange(desc(Year, Price_Dollar)) -> expensive_poultry\r\n\r\n\r\nggplot(data = expensive_poultry) +\r\n  geom_smooth(mapping = aes(x = Year, y = Price_Dollar), se = FALSE)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomethancampbell864073/distill-preview.png",
    "last_modified": "2022-02-09T18:37:59-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomgamez654862790/",
    "title": "HW1",
    "description": "Rmd Resubmission",
    "author": [
      {
        "name": "Alexis Gamez",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\nRpubs Test Post\r\nThis document serves as a test post to ensure that I am able to post and save Markdowns correctly.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:36-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomgamez654863847/",
    "title": "HW 2",
    "description": "Reading in & tidying data",
    "author": [
      {
        "name": "Alexis Gamez",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\nSetup\r\nSetting up R so that xlsx files/data can be read into the program and tidyverse packages are active.\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(readxl)\r\n\r\n\r\n\r\nReading in the Data\r\nImported data from the xlsx file by navigating the “Files” tab under the plots pane. While you can include all data as is, I excluded the top 8 rows to tidy the data a bit. This can also be done using code as shown in the chunk below. Also, note that in the same chunk, I’ve renamed the original file name from “ActiveDuty_MaritalStatus” to “Marital_Status”. This data set only takes into account the 1st sheet within the excel file that was used for reference.\r\n\r\n\r\nActiveDuty_MaritalStatus <- read_excel(\"HW2/ActiveDuty_MaritalStatus.xlsx\", skip = 8)\r\nMarital_Status <- ActiveDuty_MaritalStatus\r\n\r\n#Confirming that the data set was renamed correctly\r\nMarital_Status\r\n\r\n\r\n# A tibble: 30 x 17\r\n   ...1  `Pay Grade` Male...3 Female...4 Total...5 Male...6 Female...7\r\n   <chr> <chr>          <dbl>      <dbl>     <dbl>    <dbl>      <dbl>\r\n 1 <NA>  E-1            31229       5717     36946      563        122\r\n 2 <NA>  E-2            53094       8388     61482     1457        275\r\n 3 <NA>  E-3           131091      21019    152110     4264       1920\r\n 4 <NA>  E-4           112710      16381    129091     9491       4662\r\n 5 <NA>  E-5            57989      11021     69010    10937       6576\r\n 6 <NA>  E-6            19125       4654     23779    10369       4962\r\n 7 <NA>  E-7             5446       1913      7359     6530       2585\r\n 8 <NA>  E-8             1009        438      1447     1786        513\r\n 9 <NA>  E-9              381        202       583      579        144\r\n10 <NA>  TOTAL ENLI~   412074      69733    481807    45976      21759\r\n# ... with 20 more rows, and 10 more variables: Total...8 <dbl>,\r\n#   Male...9 <dbl>, Female...10 <dbl>, Total...11 <dbl>,\r\n#   Male...12 <dbl>, Female...13 <dbl>, Total...14 <dbl>,\r\n#   Male...15 <dbl>, Female...16 <dbl>, Total...17 <dbl>\r\n\r\nInterpreting the Variables\r\nThe data itself categorizes all active duty personnel according to their pay grade and current marital status. Marital status is defined as either single without children, single with children, joint service marriage, or civilian marriage with an additional category representing the summed total between all of them in that specific pay grade.\r\nThere are also 3 sub-categories included in each of the previously mentioned categories (except the grand totals column) further breaking down the data according to gender (Male & Female) and the 3rd being the total between both.\r\nI’ve included code below that renames all the respective columns to something a bit more legible with those ending in; WO representing active duty personnel that are single without children, W representing those that are single with children, J representing those in a joint service marriage, C representing those a part of a civilian marriage and the final column representing the grand total.\r\n\r\n\r\nMarital_Status <- rename(Marital_Status, Male_WO = Male...3, Fem_WO = Female...4, Total_WO = Total...5, Male_W = Male...6, Fem_W = Female...7, Total_W = Total...8, Male_J = Male...9, Fem_J = Female...10, Total_J = Total...11, Male_C = Male...12, Fem_C = Female...13, Total_C = Total...14, Male_Total = Male...15, Fem_Total = Female...16, Grand_Total = Total...17)\r\n\r\n#Checking that all categories were renamed correctly\r\nhead(Marital_Status) %>%\r\n  select(\"Pay Grade\": \"Grand_Total\")\r\n\r\n\r\n# A tibble: 6 x 16\r\n  `Pay Grade` Male_WO Fem_WO Total_WO Male_W Fem_W Total_W Male_J\r\n  <chr>         <dbl>  <dbl>    <dbl>  <dbl> <dbl>   <dbl>  <dbl>\r\n1 E-1           31229   5717    36946    563   122     685    139\r\n2 E-2           53094   8388    61482   1457   275    1732    438\r\n3 E-3          131091  21019   152110   4264  1920    6184   3579\r\n4 E-4          112710  16381   129091   9491  4662   14153   8661\r\n5 E-5           57989  11021    69010  10937  6576   17513  12459\r\n6 E-6           19125   4654    23779  10369  4962   15331   8474\r\n# ... with 8 more variables: Fem_J <dbl>, Total_J <dbl>,\r\n#   Male_C <dbl>, Fem_C <dbl>, Total_C <dbl>, Male_Total <dbl>,\r\n#   Fem_Total <dbl>, Grand_Total <dbl>\r\n\r\nAll data included in this specific data set would be considered numeric.\r\nData Wrangling\r\nThe data present within the imported set can be interpreted in many ways, but for the sake of this assignment, I’ve chosen to sort them in 2 different ways according to the male gender.\r\nTotal Males According to Pay Grade\r\nTo start I used the code present in the chunk below to sort all columns except for the male totals and the pay grade they belong to.\r\n\r\n\r\nMarital_Status %>%\r\n  select(\"Pay Grade\", \"Male_Total\")\r\n\r\n\r\n# A tibble: 30 x 2\r\n   `Pay Grade`    Male_Total\r\n   <chr>               <dbl>\r\n 1 E-1                 36991\r\n 2 E-2                 67472\r\n 3 E-3                193729\r\n 4 E-4                236418\r\n 5 E-5                212329\r\n 6 E-6                148290\r\n 7 E-7                 87042\r\n 8 E-8                 25297\r\n 9 E-9                  9633\r\n10 TOTAL ENLISTED    1017201\r\n# ... with 20 more rows\r\n\r\nThis clearly shows us the total active duty males categorized by their pay grade. Nothing fancy, the data is sorted according to the order in which the pay grades are originally listed in the respective excel document.\r\nSorting Total Males According to their Pay Grade in Descending Order\r\nTo take it a step further, I’ve included the code below that further sorts the previous data but in descending order. This code omits the “GRAND TOTAL”, “TOTAL ENLISTED”, and “TOTAL OFFICER” rows in order to tidy the data so that only each specific pay grade is shown.\r\n\r\n\r\nMarital_Status %>%\r\n  select(\"Pay Grade\", \"Male_Total\") %>%\r\n  filter(`Pay Grade` != \"GRAND TOTAL\" & `Pay Grade` != \"TOTAL ENLISTED\" & `Pay Grade` != \"TOTAL OFFICER\") %>%\r\n  ungroup() %>%\r\n  arrange(desc(Male_Total))\r\n\r\n\r\n# A tibble: 25 x 2\r\n   `Pay Grade` Male_Total\r\n   <chr>            <dbl>\r\n 1 E-4             236418\r\n 2 E-5             212329\r\n 3 E-3             193729\r\n 4 E-6             148290\r\n 5 E-7              87042\r\n 6 E-2              67472\r\n 7 O-3              57973\r\n 8 O-4              38492\r\n 9 E-1              36991\r\n10 O-5              25341\r\n# ... with 15 more rows\r\n\r\nThe filter() command removes the previously mentioned rows, the ungroup() function breaks up the format of the columns so that they may be sorted in descending order and lastly, the arrange function actually sorts the data in the aforementioned descending order. Here we can clearly see that a majority of enlisted males, regardless of marital status, belong to the E-4 pay grade.\r\nI hope that this submission meets all the required criteria, thank you for reading!\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:49-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomjnfarrell211864086/",
    "title": "Homework 2",
    "description": "Reading in and Wrangling Data",
    "author": [
      {
        "name": "Joseph Farrell",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\nInstall libraries\n\n\nlibrary(tidyverse)\nlibrary(dplyr)\n\n\n\nRead in and name data “australian_marriage_data”\n\n\nlibrary(readr)\naustralian_marriage_data <- read_csv(\"/Users/nelsonfarrell/Downloads/australian_marriage_tidy - australian_marriage_tidy.csv\")\nView(australian_marriage_data)\n\n\n\nCheck the variables and columns of “australian_marriage_data”\n\n\nstr(australian_marriage_data)\n\n\nspec_tbl_df [16 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ territory: chr [1:16] \"New South Wales\" \"New South Wales\" \"Victoria\" \"Victoria\" ...\n $ resp     : chr [1:16] \"yes\" \"no\" \"yes\" \"no\" ...\n $ count    : num [1:16] 2374362 1736838 2145629 1161098 1487060 ...\n $ percent  : num [1:16] 57.8 42.2 64.9 35.1 60.7 39.3 62.5 37.5 63.7 36.3 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   territory = col_character(),\n  ..   resp = col_character(),\n  ..   count = col_double(),\n  ..   percent = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n“australian_marriage_data” has 4 variables. The first variable (territory) is the territory of the respondent, it is a character. The second variable (resp) is the response, either “yes” or “no,” it is also a character. The third variable (count) is the total number of responses either “yes” or “no” respectively, it is numeric. The fourth variable (percent) is also numeric, it is the percent of respondents who reported either “yes” or “no.”\nFilter “yes” from “australian_marriage_data”\n\n\nfilter(australian_marriage_data, `resp` == \"yes\")\n\n\n# A tibble: 8 × 4\n  territory                       resp    count percent\n  <chr>                           <chr>   <dbl>   <dbl>\n1 New South Wales                 yes   2374362    57.8\n2 Victoria                        yes   2145629    64.9\n3 Queensland                      yes   1487060    60.7\n4 South Australia                 yes    592528    62.5\n5 Western Australia               yes    801575    63.7\n6 Tasmania                        yes    191948    63.6\n7 Northern Territory(b)           yes     48686    60.6\n8 Australian Capital Territory(c) yes    175459    74  \n\nFilter for “yes” and arrange “count” column in descending order\n\n\nfilter(australian_marriage_data, `resp` == \"yes\") %>%\narrange(desc(count))\n\n\n# A tibble: 8 × 4\n  territory                       resp    count percent\n  <chr>                           <chr>   <dbl>   <dbl>\n1 New South Wales                 yes   2374362    57.8\n2 Victoria                        yes   2145629    64.9\n3 Queensland                      yes   1487060    60.7\n4 Western Australia               yes    801575    63.7\n5 South Australia                 yes    592528    62.5\n6 Tasmania                        yes    191948    63.6\n7 Australian Capital Territory(c) yes    175459    74  \n8 Northern Territory(b)           yes     48686    60.6\n\nFilter for “yes”, remove the “count” column, and arrange “percent” column in descending order\n\n\nfilter(australian_marriage_data, `resp` == \"yes\") %>%\nselect(territory, resp, percent) %>%\narrange(desc(percent))\n\n\n# A tibble: 8 × 3\n  territory                       resp  percent\n  <chr>                           <chr>   <dbl>\n1 Australian Capital Territory(c) yes      74  \n2 Victoria                        yes      64.9\n3 Western Australia               yes      63.7\n4 Tasmania                        yes      63.6\n5 South Australia                 yes      62.5\n6 Queensland                      yes      60.7\n7 Northern Territory(b)           yes      60.6\n8 New South Wales                 yes      57.8\n\nFilter the rows below 60 and above 70 in the “percent” column, arrange in descending order\n\n\nfilter(australian_marriage_data, percent > 60 & percent < 70) %>%\n  arrange(desc(percent))\n\n\n# A tibble: 6 × 4\n  territory             resp    count percent\n  <chr>                 <chr>   <dbl>   <dbl>\n1 Victoria              yes   2145629    64.9\n2 Western Australia     yes    801575    63.7\n3 Tasmania              yes    191948    63.6\n4 South Australia       yes    592528    62.5\n5 Queensland            yes   1487060    60.7\n6 Northern Territory(b) yes     48686    60.6\n\nFilter for “yes”, select “percent” and create a new vector “percent_married”\n\n\npercent_married <- filter(australian_marriage_data, `resp` == \"yes\") %>%\nselect(percent) \n\n\n\nCreate blue boxplot for “percent_married”\n\n\n  boxplot(percent_married, horizontal = TRUE, \n          main = \"Boxplot: Australian Marriage Data: 'yes'\", \n          ylab = \"Territories\", \n          xlab = \"Percent of respondents who said 'yes' to being married\", col = (c(\"blue\")))\n\n\n\n\n\n```{.r .distill-force-highlighting-css}\n\n\n",
    "preview": "posts/httpsrpubscomjnfarrell211864086/distill-preview.png",
    "last_modified": "2022-02-09T18:38:02-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomkkimble864029/",
    "title": "Kimble HW1, Try 2",
    "description": "This is the second try for 601 HW 1",
    "author": [
      {
        "name": "Karen Kimble",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\nThis is a test for DACSS 601\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:56-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomkmuhamma860269/",
    "title": "KMuhammad HW1",
    "description": "Data Science Fundamentals - Homework 1",
    "author": [
      {
        "name": "Kalimah Muhammad",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\nDistill is a publication format for scientific and technical writing, native to the web.\r\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:06-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomlcollazohw1take2/",
    "title": "HW1",
    "description": "Take 2 :)",
    "author": [
      {
        "name": "Laura Collazo",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-09T18:36:55-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomlcollazohw2/",
    "title": "HW2",
    "description": "This assignment shows an example of reading in a dataset, explaining the variables in the dataset and then demonstrating at least 2 basic data-wrangling operations.",
    "author": [
      {
        "name": "Laura Collazo",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\nThe dataset used for this assignment is workshop_masterlist. It holds data on faculty who have participated in training offered by my office, and is being shared here with identifiers removed and permission.\r\nThe variables include:\r\nvariable\r\ndata type\r\nid\r\nchar\r\ncampus\r\nchar\r\nworkshop\r\nchar\r\nworkshop_status_id*\r\nchar\r\nworkshop_date\r\ndate\r\nsemester\r\nchar\r\nworkshop_year\r\nchar\r\n*The variable workshop_status_id was intentionally left as an id in the csv, for practice using mutate to tidy the data.\r\n\r\n\r\n#read in dataset from csv and save as object\r\n\r\nwm_csv <- read_csv(\"workshop_masterlist_2022-02-08.csv\")\r\n\r\n#create tibble\r\n\r\nworkshop_masterlist <- as_tibble(wm_csv)\r\n\r\n#create new column workshop_status \r\n\r\nwm <- workshop_masterlist %>%\r\n mutate(workshop_status = case_when(\r\n    workshop_status_id == 1 ~ \"Pass\",\r\n    workshop_status_id == 2 ~ \"No Pass\",\r\n    workshop_status_id == 3 ~ \"Withdraw\",\r\n    workshop_status_id == 4 ~ \"No Show\",\r\n    workshop_status_id == 5 ~ \"Audit\") )\r\n\r\n#check variable types\r\n\r\nstr(wm)\r\n\r\n\r\ntibble [5,844 x 8] (S3: tbl_df/tbl/data.frame)\r\n $ id                : num [1:5844] 3955 3956 3957 3958 3959 ...\r\n $ campus            : chr [1:5844] \"Brooklyn\" \"Brooklyn\" \"York\" \"Brooklyn\" ...\r\n $ workshop          : chr [1:5844] \"OTE\" \"OTE\" \"OTE\" \"OTE\" ...\r\n $ workshop_status_id: num [1:5844] 1 2 1 1 1 1 1 2 1 4 ...\r\n $ workshop_date     : Date[1:5844], format: \"2020-07-09\" ...\r\n $ semester          : chr [1:5844] \"Summer 2020\" \"Summer 2020\" \"Summer 2020\" \"Summer 2020\" ...\r\n $ workshop_year     : num [1:5844] 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\r\n $ workshop_status   : chr [1:5844] \"Pass\" \"No Pass\" \"Pass\" \"Pass\" ...\r\n\r\n#select desired columns in new order, and change incorrect variable types\r\n\r\nwm_tidy <- wm %>% select (id:workshop, workshop_status, workshop_year) %>%\r\n                  mutate(id = as.character(id),\r\n                         workshop_year = as.character(workshop_year))\r\n\r\n#check variable types\r\n\r\nstr(wm_tidy)\r\n\r\n\r\ntibble [5,844 x 5] (S3: tbl_df/tbl/data.frame)\r\n $ id             : chr [1:5844] \"3955\" \"3956\" \"3957\" \"3958\" ...\r\n $ campus         : chr [1:5844] \"Brooklyn\" \"Brooklyn\" \"York\" \"Brooklyn\" ...\r\n $ workshop       : chr [1:5844] \"OTE\" \"OTE\" \"OTE\" \"OTE\" ...\r\n $ workshop_status: chr [1:5844] \"Pass\" \"No Pass\" \"Pass\" \"Pass\" ...\r\n $ workshop_year  : chr [1:5844] \"2020\" \"2020\" \"2020\" \"2020\" ...\r\n\r\n#filter for all participants who passed, and arrange by campus and then year\r\nwm_tidy %>%\r\n  filter(workshop_status == \"Pass\") %>%\r\n  arrange(campus, workshop_year)\r\n\r\n\r\n# A tibble: 4,740 x 5\r\n   id    campus workshop workshop_status workshop_year\r\n   <chr> <chr>  <chr>    <chr>           <chr>        \r\n 1 239   Baruch PTO      Pass            2011         \r\n 2 364   Baruch PTO      Pass            2011         \r\n 3 430   Baruch PTO      Pass            2011         \r\n 4 636   Baruch PTO      Pass            2011         \r\n 5 684   Baruch PTO      Pass            2011         \r\n 6 864   Baruch PTO      Pass            2011         \r\n 7 959   Baruch PTO      Pass            2011         \r\n 8 1048  Baruch PTO      Pass            2011         \r\n 9 1061  Baruch PTO      Pass            2011         \r\n10 1063  Baruch PTO      Pass            2011         \r\n# ... with 4,730 more rows\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:52-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomlenna717860481/",
    "title": "Test Post - Take 3",
    "description": "Basic Math in R",
    "author": [
      {
        "name": "Lenna",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\nIntro to Calculating Numbers with R\nWe can do basic math using R.\nHere are the operators you’ll need for addition, subtraction, multiplication, and division, respectively: + - * /\nWe’ll start with addition.\nAddition\n\n\n4+4\n\n\n[1] 8\n\n3+5\n\n\n[1] 8\n\nSubtraction\n\n\n7-4\n\n\n[1] 3\n\n2-2\n\n\n[1] 0\n\nMultiplication\n\n\n2*2\n\n\n[1] 4\n\n3*5\n\n\n[1] 15\n\nDivision\n\n\n6/2\n\n\n[1] 3\n\n9/3\n\n\n[1] 3\n\nAnd that, my friends, is the story on doing math (albeit very basic math, with R)!\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:16-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscommderiantothdacss601hw1mdt/",
    "title": "Meredith Derian-Toth Homework 1",
    "description": "This describes MDT's HW1",
    "author": [
      {
        "name": "Meredith Derian-Toth",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:19-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomrahulgdacss601hw2/",
    "title": "HW2",
    "description": "Reading in Data",
    "author": [
      {
        "name": "Rahul Gundeti",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\n\r\n[1] month                  year                  \r\n[3] large_half_dozen       large_dozen           \r\n[5] extra_large_half_dozen extra_large_dozen     \r\n<0 rows> (or 0-length row.names)\r\n        month year large_half_dozen large_dozen\r\n1     January 2013          178.000     267.500\r\n2    February 2013          178.000     267.500\r\n3       March 2013          178.000     267.500\r\n4       April 2013          178.000     267.500\r\n5         May 2013          178.000     267.500\r\n6        June 2013          178.000     267.500\r\n7        July 2013          178.000     267.500\r\n8      August 2013          178.000     267.500\r\n9   September 2013          178.000     267.500\r\n10    October 2013          178.000     267.500\r\n11   November 2013          178.000     267.500\r\n12   December 2013          178.000     267.500\r\n13    January 2012          174.500     267.500\r\n14   February 2012          174.500     267.500\r\n15      March 2012          174.500     267.500\r\n16      April 2012          174.500     267.500\r\n17        May 2012          173.250     267.500\r\n18       June 2012          173.250     267.500\r\n19       July 2012          173.250     267.500\r\n20     August 2012          173.250     267.500\r\n21  September 2012          173.250     267.500\r\n22    October 2012          173.250     267.500\r\n23   November 2012          178.000     267.500\r\n24   December 2012          178.000     267.500\r\n25    January 2011          174.500     267.500\r\n26   February 2011          174.500     267.500\r\n27      March 2011          174.500     267.500\r\n28      April 2011          174.500     267.500\r\n29        May 2011          174.500     267.500\r\n30       June 2011          174.500     270.000\r\n31       July 2011          174.500     270.000\r\n32     August 2011          174.500     270.000\r\n33  September 2011          174.500     270.000\r\n34    October 2011          174.500     270.000\r\n35   November 2011          174.500     270.000\r\n36   December 2011          174.500     270.000\r\n37    January 2010          174.500     271.500\r\n38   February 2010          174.500     271.500\r\n39      March 2010          174.500     268.000\r\n40      April 2010          174.500     268.000\r\n41        May 2010          174.500     268.000\r\n42       June 2010          174.500     268.000\r\n43       July 2010          174.500     268.000\r\n44     August 2010          174.500     268.000\r\n45  September 2010          174.500     268.000\r\n46    October 2010          174.500     267.500\r\n47   November 2010          174.500     267.500\r\n48   December 2010          174.500     267.500\r\n49    January 2009          174.500     277.500\r\n50   February 2009          174.500     277.500\r\n51      March 2009          174.500     277.500\r\n52      April 2009          174.500     277.500\r\n53        May 2009          174.500     277.500\r\n54       June 2009          174.500     277.500\r\n55       July 2009          174.500     277.500\r\n56     August 2009          174.500     271.500\r\n57  September 2009          174.500     271.500\r\n58    October 2009          174.500     271.500\r\n59   November 2009          174.500     271.500\r\n60   December 2009          174.500     271.500\r\n61    January 2008          132.000     237.000\r\n62   February 2008          132.000     237.000\r\n63      March 2008          132.000     237.000\r\n64      April 2008          132.000     237.000\r\n65        May 2008          132.000     237.000\r\n66       June 2008          174.500     277.500\r\n67       July 2008          174.500     277.500\r\n68     August 2008          174.500     277.500\r\n69  September 2008          174.500     277.500\r\n70    October 2008          174.500     277.500\r\n71   November 2008          174.500     277.500\r\n72   December 2008          174.500     277.500\r\n73    January 2007          128.500     233.500\r\n74   February 2007          131.125     236.125\r\n75      March 2007          132.000     237.000\r\n76      April 2007          132.000     237.000\r\n77        May 2007          132.000     237.000\r\n78       June 2007          132.000     237.000\r\n79       July 2007          132.000     237.000\r\n80     August 2007          132.000     237.000\r\n81  September 2007          132.000     237.000\r\n82    October 2007          132.000     237.000\r\n83   November 2007          132.000     237.000\r\n84   December 2007          132.000     237.000\r\n85    January 2006          128.500     233.500\r\n86   February 2006          128.500     233.500\r\n87      March 2006          128.500     233.500\r\n88      April 2006          128.500     233.500\r\n89        May 2006          128.500     233.500\r\n90       June 2006          128.500     233.500\r\n91       July 2006          128.500     233.500\r\n92     August 2006          128.500     233.500\r\n93  September 2006          128.500     233.500\r\n94    October 2006          128.500     233.500\r\n95   November 2006          128.500     233.500\r\n96   December 2006          128.500     233.500\r\n97    January 2005          128.500     233.500\r\n98   February 2005          128.500     233.500\r\n99      March 2005          128.500     233.500\r\n100     April 2005          128.500     233.500\r\n101       May 2005          128.500     233.500\r\n102      June 2005          128.500     233.500\r\n103      July 2005          128.500     233.500\r\n104    August 2005          128.500     233.500\r\n105 September 2005          128.500     233.500\r\n106   October 2005          128.500     233.500\r\n107  November 2005          128.500     233.500\r\n108  December 2005          128.500     233.500\r\n109   January 2004          126.000     230.000\r\n110  February 2004          128.500     226.250\r\n111     March 2004          131.000     225.000\r\n112     April 2004          131.000     225.000\r\n113       May 2004          131.000     225.000\r\n114      June 2004          133.500     231.375\r\n115      July 2004          133.500     233.500\r\n116    August 2004          133.500     233.500\r\n117 September 2004          129.750     233.500\r\n118   October 2004          128.500     233.500\r\n119  November 2004          128.500     233.500\r\n120  December 2004          128.500     233.500\r\n    extra_large_half_dozen extra_large_dozen\r\n1                  188.130           290.000\r\n2                  188.130           290.000\r\n3                  188.130           290.000\r\n4                  188.130           290.000\r\n5                  188.130           290.000\r\n6                  188.130           290.000\r\n7                  188.130           290.000\r\n8                  188.130           290.000\r\n9                  188.130           290.000\r\n10                 188.130           290.000\r\n11                 188.130           290.000\r\n12                 188.130           290.000\r\n13                 185.500           285.500\r\n14                 185.500           288.500\r\n15                 185.500           288.500\r\n16                 185.500           288.500\r\n17                 185.500           288.500\r\n18                 185.500           288.500\r\n19                 185.500           288.500\r\n20                 185.500           288.500\r\n21                 185.500           288.500\r\n22                 185.500           288.500\r\n23                 188.130           290.000\r\n24                 188.130           290.000\r\n25                 185.500           285.500\r\n26                 185.500           285.500\r\n27                 185.500           285.500\r\n28                 185.500           285.500\r\n29                 185.500           285.500\r\n30                 185.500           285.500\r\n31                 185.500           285.500\r\n32                 185.500           285.500\r\n33                 185.500           285.500\r\n34                 185.500           285.500\r\n35                 185.500           285.500\r\n36                 185.500           285.500\r\n37                 185.500           285.500\r\n38                 185.500           285.500\r\n39                 185.500           285.500\r\n40                 185.500           285.500\r\n41                 185.500           285.500\r\n42                 185.500           285.500\r\n43                 185.500           285.500\r\n44                 185.500           285.500\r\n45                 185.500           285.500\r\n46                 185.500           285.500\r\n47                 185.500           285.500\r\n48                 185.500           285.500\r\n49                 185.500           285.500\r\n50                 185.500           285.500\r\n51                 185.500           285.500\r\n52                 185.500           285.500\r\n53                 185.500           285.500\r\n54                 185.500           285.500\r\n55                 185.500           285.500\r\n56                 185.500           285.500\r\n57                 185.500           285.500\r\n58                 185.500           285.500\r\n59                 185.500           285.500\r\n60                 185.500           285.500\r\n61                 139.000           245.000\r\n62                 139.000           245.000\r\n63                 139.000           245.000\r\n64                 139.000           245.000\r\n65                 139.000           245.000\r\n66                 185.500           285.500\r\n67                 185.500           285.500\r\n68                 185.500           285.500\r\n69                 185.500           285.500\r\n70                 185.500           285.500\r\n71                 185.500           285.500\r\n72                 185.500           285.500\r\n73                 135.500           241.500\r\n74                 138.125           244.125\r\n75                 139.000           245.000\r\n76                 139.000           245.000\r\n77                 139.000           245.000\r\n78                 139.000           245.000\r\n79                 139.000           245.000\r\n80                 139.000           245.000\r\n81                 139.000           245.000\r\n82                 139.000           245.000\r\n83                 139.000           245.000\r\n84                 139.000           245.000\r\n85                 135.500           241.000\r\n86                 135.500           241.000\r\n87                 135.500           241.375\r\n88                 135.500           241.500\r\n89                 135.500           241.500\r\n90                 135.500           241.500\r\n91                 135.500           241.500\r\n92                 135.500           241.500\r\n93                 135.500           241.500\r\n94                 135.500           241.500\r\n95                 135.500           241.500\r\n96                 135.500           241.500\r\n97                 135.500           241.000\r\n98                 135.500           241.000\r\n99                 135.500           241.000\r\n100                135.500           241.000\r\n101                135.500           241.000\r\n102                135.500           241.000\r\n103                135.500           241.000\r\n104                135.500           241.000\r\n105                135.500           241.000\r\n106                135.500           241.000\r\n107                135.500           241.000\r\n108                135.500           241.000\r\n109                132.000           230.000\r\n110                134.500           230.000\r\n111                137.000           230.000\r\n112                137.000           234.500\r\n113                137.000           236.000\r\n114                137.000           241.000\r\n115                137.000           241.000\r\n116                137.000           241.000\r\n117                135.875           241.000\r\n118                135.500           241.000\r\n119                135.500           241.000\r\n120                135.500           241.000\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:42-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomry0531862527/",
    "title": "Roy Yoon HW1",
    "description": "DACSS HW1",
    "author": [
      {
        "name": "Roy Yoon",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-09T18:37:25-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomtbartelloni862736/",
    "title": "Australian Survey About Marriage Law Change",
    "description": "This is a brief exploratory analysis regarding the results of a survey of Australians' opinions of changing the Australian marriage law to allow same sex marriage.",
    "author": [
      {
        "name": "Tory Bartelloni",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\r\nIntroduction\r\nThe following page will describe my personal journey of very briefly analyzing a survey conducted by the Australian Bureau of Statistics in the fall of 2017. This survey was done through the postal service, was completely voluntary, and was sent to all registered voters in Australia to gauge the public’s opinion of changing the law to allow same sex couples to marry. The intent of this page is to clearly outline my thought process and coding steps taken to practice reading, wrangling, and operating on a not-so-tidy data set.\r\nReading and Understanding the Avaialble Data\r\nFirst, we will read in the data from the results of the survey.\r\n\r\n\r\nam_survey <- read_xls(\"australian_marriage_law_postal_survey_2017_-_response_final.xls\") \r\nam_survey\r\n\r\n\r\n# A tibble: 23 x 3\r\n   `Australian Bureau of Statistics`                  ...2       ...3 \r\n   <chr>                                              <chr>      <chr>\r\n 1 1800.0 Australian Marriage Law Postal Survey, 2017 <NA>       <NA> \r\n 2 Released on 15 November 2017                       <NA>       <NA> \r\n 3 <NA>                                               <NA>       <NA> \r\n 4 <NA>                                               Contents   <NA> \r\n 5 <NA>                                               Tables     <NA> \r\n 6 <NA>                                               Table 1    Resp~\r\n 7 <NA>                                               Table 2    Resp~\r\n 8 <NA>                                               <NA>       <NA> \r\n 9 <NA>                                               Explanato~ <NA> \r\n10 <NA>                                               <NA>       <NA> \r\n# ... with 13 more rows\r\n\r\nAfter reading and viewing the imported data we notice that the table that was read looks to be a title page for additional pages. There are three referenced links on this page including references to “Table 1” and “Table 2”, which are likely of interest. Now we will read in each of these sheets and review them as well.\r\n\r\n\r\nam_survey_tbl1 <- read_xls(\"australian_marriage_law_postal_survey_2017_-_response_final.xls\", sheet = \"Table 1\")\r\nam_survey_tbl2 <- read_xls(\"australian_marriage_law_postal_survey_2017_-_response_final.xls\", sheet = \"Table 2\")\r\n\r\nam_survey_tbl1\r\n\r\n\r\n# A tibble: 21 x 16\r\n   `Australian Burea~` ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9 \r\n   <chr>               <chr> <chr> <chr> <chr> <chr> <chr> <lgl> <chr>\r\n 1 1800.0 Australian ~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 2 Released on 15 Nov~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 3 Table 1 Response b~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 4 <NA>                Resp~ <NA>  <NA>  <NA>  <NA>  <NA>  NA    Elig~\r\n 5 <NA>                Yes   <NA>  No    <NA>  Total <NA>  NA    Resp~\r\n 6 <NA>                no.   %     no.   %     no.   %     NA    no.  \r\n 7 New South Wales     2374~ 57.7~ 1736~ 42.2~ 4111~ 100   NA    4111~\r\n 8 Victoria            2145~ 64.9~ 1161~ 35.1~ 3306~ 100   NA    3306~\r\n 9 Queensland          1487~ 60.7~ 9610~ 39.2~ 2448~ 100   NA    2448~\r\n10 South Australia     5925~ 62.5  3562~ 37.5  9487~ 100   NA    9487~\r\n# ... with 11 more rows, and 7 more variables: ...10 <chr>,\r\n#   ...11 <chr>, ...12 <chr>, ...13 <chr>, ...14 <chr>, ...15 <chr>,\r\n#   ...16 <chr>\r\n\r\nam_survey_tbl2\r\n\r\n\r\n# A tibble: 190 x 16\r\n   `Australian Burea~` ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9 \r\n   <chr>               <chr> <chr> <chr> <chr> <chr> <chr> <lgl> <chr>\r\n 1 1800.0 Australian ~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 2 Released on 15 Nov~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 3 Table 2 Response b~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 4 <NA>                Resp~ <NA>  <NA>  <NA>  <NA>  <NA>  NA    Elig~\r\n 5 <NA>                Yes   <NA>  No    <NA>  Total <NA>  NA    Resp~\r\n 6 <NA>                no.   %     no.   %     no.   %     NA    no.  \r\n 7 New South Wales Di~ <NA>  <NA>  <NA>  <NA>  <NA>  <NA>  NA    <NA> \r\n 8 Banks               37736 44.8~ 46343 55.1~ 84079 100   NA    84079\r\n 9 Barton              37153 43.6~ 47984 56.3~ 85137 100   NA    85137\r\n10 Bennelong           42943 49.7~ 43215 50.2~ 86158 100   NA    86158\r\n# ... with 180 more rows, and 7 more variables: ...10 <chr>,\r\n#   ...11 <chr>, ...12 <chr>, ...13 <chr>, ...14 <chr>, ...15 <chr>,\r\n#   ...16 <chr>\r\n\r\nReviewing the table sheets and their associated data we now see that Table 1 is an aggregate of data from Table 2 by State/Territory. From here on we can focus on Table 2 as it has all of the underlying data that we will be interested in.\r\nWrangling and Cleaning the Data\r\nFocusing on Table 2, we see that several of the first rows are used for description, several more rows are used to describe groups of variables, several columns are duplicates or aggregates, and it includes title and sub-total lines for each State/Territory.\r\nTo deal with this we will 1) re-read the data and skip the descriptive rows, 2) select only the columns that we will need, 3) add a State/Territory variable to identify the Divisions, and 4) remove the title and sub-total lines. We will also take this opportunity to assign appropriate names to our variables.\r\n\r\n\r\n# Read in and skip first 7  rows with miscellaneous information\r\nam_survey_final <- read_xls(\"australian_marriage_law_postal_survey_2017_-_response_final.xls\", \r\n                           sheet = \"Table 2\", skip=7)\r\n# Subset to only the columns we're interested in. Will be keeping: Yes answers, No answers,\r\n# Eligible participants with clear responses, without clear responses, and non-responders.\r\nam_survey_final <- am_survey_final[,c(1,2,4,6,11,13)]\r\n\r\n# Add a State_Territory variable\r\nam_survey_final$State_Territory <- NA\r\n\r\n# Assign appropriate values to the State_Territory variable\r\nam_survey_final[1:47,]$State_Territory <- \"New South Wales\"\r\nam_survey_final[51:87,]$State_Territory <- \"Victoria\"\r\nam_survey_final[91:120,]$State_Territory <- \"Queensland\"\r\nam_survey_final[124:134,]$State_Territory <- \"South Australia\"\r\nam_survey_final[138:153,]$State_Territory <- \"Western Australia\"\r\nam_survey_final[157:161,]$State_Territory <- \"Tasmania\"\r\nam_survey_final[165:166,]$State_Territory <- \"Northern Territory\"\r\nam_survey_final[170:171,]$State_Territory <- \"Australian Capital\"\r\n\r\n# Remove all total and title lines\r\nam_survey_final <- am_survey_final %>% filter(!is.na(State_Territory))\r\n\r\n# Add clear column names\r\ncolnames(am_survey_final) <- c(\"Division\",\"Yes\",\"No\",\"Clear Responses\",\"Not Clear Responses\",\"Non-Responders\",\"State_Territory\")\r\n\r\n\r\n\r\nAlright, let’s check it out.\r\n\r\n\r\nstr(am_survey_final)\r\n\r\n\r\ntibble [150 x 7] (S3: tbl_df/tbl/data.frame)\r\n $ Division           : chr [1:150] \"Banks\" \"Barton\" \"Bennelong\" \"Berowra\" ...\r\n $ Yes                : num [1:150] 37736 37153 42943 48471 20406 ...\r\n $ No                 : num [1:150] 46343 47984 43215 40369 57926 ...\r\n $ Clear Responses    : num [1:150] 84079 85137 86158 88840 78332 ...\r\n $ Not Clear Responses: num [1:150] 247 226 244 212 220 202 285 263 229 315 ...\r\n $ Non-Responders     : num [1:150] 20928 24008 19973 16038 25883 ...\r\n $ State_Territory    : chr [1:150] \"New South Wales\" \"New South Wales\" \"New South Wales\" \"New South Wales\" ...\r\n\r\nrmarkdown::paged_table(am_survey_final)\r\n\r\n\r\n\r\n\r\n{\"columns\":[{\"label\":[\"Division\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Yes\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"No\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Clear Responses\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Not Clear Responses\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Non-Responders\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"State_Territory\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Banks\",\"2\":\"37736\",\"3\":\"46343\",\"4\":\"84079\",\"5\":\"247\",\"6\":\"20928\",\"7\":\"New South Wales\"},{\"1\":\"Barton\",\"2\":\"37153\",\"3\":\"47984\",\"4\":\"85137\",\"5\":\"226\",\"6\":\"24008\",\"7\":\"New South Wales\"},{\"1\":\"Bennelong\",\"2\":\"42943\",\"3\":\"43215\",\"4\":\"86158\",\"5\":\"244\",\"6\":\"19973\",\"7\":\"New South Wales\"},{\"1\":\"Berowra\",\"2\":\"48471\",\"3\":\"40369\",\"4\":\"88840\",\"5\":\"212\",\"6\":\"16038\",\"7\":\"New South Wales\"},{\"1\":\"Blaxland\",\"2\":\"20406\",\"3\":\"57926\",\"4\":\"78332\",\"5\":\"220\",\"6\":\"25883\",\"7\":\"New South Wales\"},{\"1\":\"Bradfield\",\"2\":\"53681\",\"3\":\"34927\",\"4\":\"88608\",\"5\":\"202\",\"6\":\"17261\",\"7\":\"New South Wales\"},{\"1\":\"Calare\",\"2\":\"54091\",\"3\":\"35779\",\"4\":\"89870\",\"5\":\"285\",\"6\":\"25342\",\"7\":\"New South Wales\"},{\"1\":\"Chifley\",\"2\":\"32871\",\"3\":\"46702\",\"4\":\"79573\",\"5\":\"263\",\"6\":\"28180\",\"7\":\"New South Wales\"},{\"1\":\"Cook\",\"2\":\"47505\",\"3\":\"38804\",\"4\":\"86309\",\"5\":\"229\",\"6\":\"18713\",\"7\":\"New South Wales\"},{\"1\":\"Cowper\",\"2\":\"57493\",\"3\":\"38317\",\"4\":\"95810\",\"5\":\"315\",\"6\":\"25197\",\"7\":\"New South Wales\"},{\"1\":\"Cunningham\",\"2\":\"60906\",\"3\":\"31840\",\"4\":\"92746\",\"5\":\"268\",\"6\":\"20607\",\"7\":\"New South Wales\"},{\"1\":\"Dobell\",\"2\":\"59475\",\"3\":\"30987\",\"4\":\"90462\",\"5\":\"255\",\"6\":\"24275\",\"7\":\"New South Wales\"},{\"1\":\"Eden-Monaro\",\"2\":\"57223\",\"3\":\"30926\",\"4\":\"88149\",\"5\":\"249\",\"6\":\"22139\",\"7\":\"New South Wales\"},{\"1\":\"Farrer\",\"2\":\"48432\",\"3\":\"39297\",\"4\":\"87729\",\"5\":\"277\",\"6\":\"25669\",\"7\":\"New South Wales\"},{\"1\":\"Fowler\",\"2\":\"27847\",\"3\":\"48782\",\"4\":\"76629\",\"5\":\"228\",\"6\":\"29251\",\"7\":\"New South Wales\"},{\"1\":\"Gilmore\",\"2\":\"59322\",\"3\":\"36386\",\"4\":\"95708\",\"5\":\"303\",\"6\":\"23109\",\"7\":\"New South Wales\"},{\"1\":\"Grayndler\",\"2\":\"73208\",\"3\":\"18429\",\"4\":\"91637\",\"5\":\"136\",\"6\":\"16074\",\"7\":\"New South Wales\"},{\"1\":\"Greenway\",\"2\":\"38016\",\"3\":\"43980\",\"4\":\"81996\",\"5\":\"217\",\"6\":\"25253\",\"7\":\"New South Wales\"},{\"1\":\"Hughes\",\"2\":\"51337\",\"3\":\"36558\",\"4\":\"87895\",\"5\":\"185\",\"6\":\"17038\",\"7\":\"New South Wales\"},{\"1\":\"Hume\",\"2\":\"51284\",\"3\":\"36271\",\"4\":\"87555\",\"5\":\"213\",\"6\":\"23457\",\"7\":\"New South Wales\"},{\"1\":\"Hunter\",\"2\":\"59137\",\"3\":\"32723\",\"4\":\"91860\",\"5\":\"251\",\"6\":\"25253\",\"7\":\"New South Wales\"},{\"1\":\"Kingsford Smith\",\"2\":\"56297\",\"3\":\"31510\",\"4\":\"87807\",\"5\":\"225\",\"6\":\"22399\",\"7\":\"New South Wales\"},{\"1\":\"Lindsay\",\"2\":\"49071\",\"3\":\"38295\",\"4\":\"87366\",\"5\":\"234\",\"6\":\"26955\",\"7\":\"New South Wales\"},{\"1\":\"Lyne\",\"2\":\"51416\",\"3\":\"41539\",\"4\":\"92955\",\"5\":\"316\",\"6\":\"21426\",\"7\":\"New South Wales\"},{\"1\":\"Macarthur\",\"2\":\"43323\",\"3\":\"39907\",\"4\":\"83230\",\"5\":\"228\",\"6\":\"27271\",\"7\":\"New South Wales\"},{\"1\":\"Mackellar\",\"2\":\"62350\",\"3\":\"29330\",\"4\":\"91680\",\"5\":\"208\",\"6\":\"17500\",\"7\":\"New South Wales\"},{\"1\":\"Macquarie\",\"2\":\"56180\",\"3\":\"31778\",\"4\":\"87958\",\"5\":\"235\",\"6\":\"18490\",\"7\":\"New South Wales\"},{\"1\":\"McMahon\",\"2\":\"29146\",\"3\":\"53967\",\"4\":\"83113\",\"5\":\"242\",\"6\":\"23721\",\"7\":\"New South Wales\"},{\"1\":\"Mitchell\",\"2\":\"42112\",\"3\":\"43652\",\"4\":\"85764\",\"5\":\"176\",\"6\":\"19436\",\"7\":\"New South Wales\"},{\"1\":\"Newcastle\",\"2\":\"71158\",\"3\":\"23999\",\"4\":\"95157\",\"5\":\"232\",\"6\":\"19970\",\"7\":\"New South Wales\"},{\"1\":\"New England\",\"2\":\"44608\",\"3\":\"40324\",\"4\":\"84932\",\"5\":\"256\",\"6\":\"25581\",\"7\":\"New South Wales\"},{\"1\":\"North Sydney\",\"2\":\"64813\",\"3\":\"25473\",\"4\":\"90286\",\"5\":\"193\",\"6\":\"17538\",\"7\":\"New South Wales\"},{\"1\":\"Page\",\"2\":\"55943\",\"3\":\"37727\",\"4\":\"93670\",\"5\":\"291\",\"6\":\"25645\",\"7\":\"New South Wales\"},{\"1\":\"Parkes\",\"2\":\"41408\",\"3\":\"37108\",\"4\":\"78516\",\"5\":\"241\",\"6\":\"29777\",\"7\":\"New South Wales\"},{\"1\":\"Parramatta\",\"2\":\"29299\",\"3\":\"47038\",\"4\":\"76337\",\"5\":\"197\",\"6\":\"25757\",\"7\":\"New South Wales\"},{\"1\":\"Paterson\",\"2\":\"60915\",\"3\":\"32059\",\"4\":\"92974\",\"5\":\"279\",\"6\":\"24264\",\"7\":\"New South Wales\"},{\"1\":\"Reid\",\"2\":\"43567\",\"3\":\"39061\",\"4\":\"82628\",\"5\":\"203\",\"6\":\"23786\",\"7\":\"New South Wales\"},{\"1\":\"Richmond\",\"2\":\"62591\",\"3\":\"29625\",\"4\":\"92216\",\"5\":\"274\",\"6\":\"22719\",\"7\":\"New South Wales\"},{\"1\":\"Riverina\",\"2\":\"47333\",\"3\":\"39308\",\"4\":\"86641\",\"5\":\"265\",\"6\":\"25632\",\"7\":\"New South Wales\"},{\"1\":\"Robertson\",\"2\":\"58689\",\"3\":\"30614\",\"4\":\"89303\",\"5\":\"231\",\"6\":\"20431\",\"7\":\"New South Wales\"},{\"1\":\"Shortland\",\"2\":\"62455\",\"3\":\"29836\",\"4\":\"92291\",\"5\":\"255\",\"6\":\"19675\",\"7\":\"New South Wales\"},{\"1\":\"Sydney\",\"2\":\"76144\",\"3\":\"14860\",\"4\":\"91004\",\"5\":\"146\",\"6\":\"22093\",\"7\":\"New South Wales\"},{\"1\":\"Warringah\",\"2\":\"64999\",\"3\":\"21660\",\"4\":\"86659\",\"5\":\"172\",\"6\":\"16630\",\"7\":\"New South Wales\"},{\"1\":\"Watson\",\"2\":\"24915\",\"3\":\"57160\",\"4\":\"82075\",\"5\":\"205\",\"6\":\"24634\",\"7\":\"New South Wales\"},{\"1\":\"Wentworth\",\"2\":\"69279\",\"3\":\"16410\",\"4\":\"85689\",\"5\":\"162\",\"6\":\"18121\",\"7\":\"New South Wales\"},{\"1\":\"Werriwa\",\"2\":\"30252\",\"3\":\"53174\",\"4\":\"83426\",\"5\":\"269\",\"6\":\"29282\",\"7\":\"New South Wales\"},{\"1\":\"Whitlam\",\"2\":\"57562\",\"3\":\"34879\",\"4\":\"92441\",\"5\":\"276\",\"6\":\"23064\",\"7\":\"New South Wales\"},{\"1\":\"Aston\",\"2\":\"48455\",\"3\":\"29730\",\"4\":\"78185\",\"5\":\"234\",\"6\":\"17664\",\"7\":\"Victoria\"},{\"1\":\"Ballarat\",\"2\":\"65613\",\"3\":\"27405\",\"4\":\"93018\",\"5\":\"333\",\"6\":\"20923\",\"7\":\"Victoria\"},{\"1\":\"Batman\",\"2\":\"66383\",\"3\":\"26906\",\"4\":\"93289\",\"5\":\"287\",\"6\":\"17901\",\"7\":\"Victoria\"},{\"1\":\"Bendigo\",\"2\":\"63412\",\"3\":\"28852\",\"4\":\"92264\",\"5\":\"333\",\"6\":\"19360\",\"7\":\"Victoria\"},{\"1\":\"Bruce\",\"2\":\"34644\",\"3\":\"39203\",\"4\":\"73847\",\"5\":\"257\",\"6\":\"21261\",\"7\":\"Victoria\"},{\"1\":\"Calwell\",\"2\":\"37839\",\"3\":\"49823\",\"4\":\"87662\",\"5\":\"331\",\"6\":\"23588\",\"7\":\"Victoria\"},{\"1\":\"Casey\",\"2\":\"59959\",\"3\":\"28144\",\"4\":\"88103\",\"5\":\"316\",\"6\":\"16807\",\"7\":\"Victoria\"},{\"1\":\"Chisholm\",\"2\":\"49448\",\"3\":\"30844\",\"4\":\"80292\",\"5\":\"271\",\"6\":\"17188\",\"7\":\"Victoria\"},{\"1\":\"Corangamite\",\"2\":\"69723\",\"3\":\"27708\",\"4\":\"97431\",\"5\":\"326\",\"6\":\"17123\",\"7\":\"Victoria\"},{\"1\":\"Corio\",\"2\":\"62658\",\"3\":\"29865\",\"4\":\"92523\",\"5\":\"359\",\"6\":\"18255\",\"7\":\"Victoria\"},{\"1\":\"Deakin\",\"2\":\"55464\",\"3\":\"28973\",\"4\":\"84437\",\"5\":\"276\",\"6\":\"15389\",\"7\":\"Victoria\"},{\"1\":\"Dunkley\",\"2\":\"62840\",\"3\":\"24471\",\"4\":\"87311\",\"5\":\"285\",\"6\":\"19322\",\"7\":\"Victoria\"},{\"1\":\"Flinders\",\"2\":\"68291\",\"3\":\"29275\",\"4\":\"97566\",\"5\":\"336\",\"6\":\"21407\",\"7\":\"Victoria\"},{\"1\":\"Gellibrand\",\"2\":\"62045\",\"3\":\"29065\",\"4\":\"91110\",\"5\":\"278\",\"6\":\"19771\",\"7\":\"Victoria\"},{\"1\":\"Gippsland\",\"2\":\"51196\",\"3\":\"33910\",\"4\":\"85106\",\"5\":\"338\",\"6\":\"20370\",\"7\":\"Victoria\"},{\"1\":\"Goldstein\",\"2\":\"69726\",\"3\":\"21663\",\"4\":\"91389\",\"5\":\"238\",\"6\":\"14857\",\"7\":\"Victoria\"},{\"1\":\"Gorton\",\"2\":\"49834\",\"3\":\"43587\",\"4\":\"93421\",\"5\":\"347\",\"6\":\"27479\",\"7\":\"Victoria\"},{\"1\":\"Higgins\",\"2\":\"70059\",\"3\":\"19375\",\"4\":\"89434\",\"5\":\"180\",\"6\":\"16615\",\"7\":\"Victoria\"},{\"1\":\"Holt\",\"2\":\"47147\",\"3\":\"45875\",\"4\":\"93022\",\"5\":\"289\",\"6\":\"28260\",\"7\":\"Victoria\"},{\"1\":\"Hotham\",\"2\":\"47986\",\"3\":\"32524\",\"4\":\"80510\",\"5\":\"303\",\"6\":\"19732\",\"7\":\"Victoria\"},{\"1\":\"Indi\",\"2\":\"54563\",\"3\":\"31925\",\"4\":\"86488\",\"5\":\"324\",\"6\":\"18934\",\"7\":\"Victoria\"},{\"1\":\"Isaacs\",\"2\":\"56645\",\"3\":\"30063\",\"4\":\"86708\",\"5\":\"275\",\"6\":\"20692\",\"7\":\"Victoria\"},{\"1\":\"Jagajaga\",\"2\":\"65098\",\"3\":\"23453\",\"4\":\"88551\",\"5\":\"255\",\"6\":\"15363\",\"7\":\"Victoria\"},{\"1\":\"Kooyong\",\"2\":\"63592\",\"3\":\"22729\",\"4\":\"86321\",\"5\":\"231\",\"6\":\"14147\",\"7\":\"Victoria\"},{\"1\":\"Lalor\",\"2\":\"57062\",\"3\":\"43429\",\"4\":\"100491\",\"5\":\"345\",\"6\":\"30127\",\"7\":\"Victoria\"},{\"1\":\"La Trobe\",\"2\":\"61807\",\"3\":\"29826\",\"4\":\"91633\",\"5\":\"268\",\"6\":\"19002\",\"7\":\"Victoria\"},{\"1\":\"Mallee\",\"2\":\"42495\",\"3\":\"35795\",\"4\":\"78290\",\"5\":\"359\",\"6\":\"21207\",\"7\":\"Victoria\"},{\"1\":\"Maribyrnong\",\"2\":\"53208\",\"3\":\"35658\",\"4\":\"88866\",\"5\":\"360\",\"6\":\"23762\",\"7\":\"Victoria\"},{\"1\":\"McEwen\",\"2\":\"73705\",\"3\":\"39007\",\"4\":\"112712\",\"5\":\"377\",\"6\":\"26966\",\"7\":\"Victoria\"},{\"1\":\"McMillan\",\"2\":\"61479\",\"3\":\"36500\",\"4\":\"97979\",\"5\":\"372\",\"6\":\"22403\",\"7\":\"Victoria\"},{\"1\":\"Melbourne\",\"2\":\"81287\",\"3\":\"15839\",\"4\":\"97126\",\"5\":\"182\",\"6\":\"20154\",\"7\":\"Victoria\"},{\"1\":\"Melbourne Ports\",\"2\":\"70589\",\"3\":\"15523\",\"4\":\"86112\",\"5\":\"198\",\"6\":\"18745\",\"7\":\"Victoria\"},{\"1\":\"Menzies\",\"2\":\"47137\",\"3\":\"35626\",\"4\":\"82763\",\"5\":\"258\",\"6\":\"15745\",\"7\":\"Victoria\"},{\"1\":\"Murray\",\"2\":\"48205\",\"3\":\"35452\",\"4\":\"83657\",\"5\":\"357\",\"6\":\"21560\",\"7\":\"Victoria\"},{\"1\":\"Scullin\",\"2\":\"48245\",\"3\":\"42147\",\"4\":\"90392\",\"5\":\"357\",\"6\":\"22817\",\"7\":\"Victoria\"},{\"1\":\"Wannon\",\"2\":\"49340\",\"3\":\"31529\",\"4\":\"80869\",\"5\":\"343\",\"6\":\"18569\",\"7\":\"Victoria\"},{\"1\":\"Wills\",\"2\":\"68450\",\"3\":\"29399\",\"4\":\"97849\",\"5\":\"250\",\"6\":\"20169\",\"7\":\"Victoria\"},{\"1\":\"Blair\",\"2\":\"47194\",\"3\":\"31433\",\"4\":\"78627\",\"5\":\"256\",\"6\":\"23975\",\"7\":\"Queensland\"},{\"1\":\"Bonner\",\"2\":\"52139\",\"3\":\"31891\",\"4\":\"84030\",\"5\":\"209\",\"6\":\"17981\",\"7\":\"Queensland\"},{\"1\":\"Bowman\",\"2\":\"53529\",\"3\":\"32627\",\"4\":\"86156\",\"5\":\"220\",\"6\":\"19691\",\"7\":\"Queensland\"},{\"1\":\"Brisbane\",\"2\":\"72812\",\"3\":\"18762\",\"4\":\"91574\",\"5\":\"159\",\"6\":\"20656\",\"7\":\"Queensland\"},{\"1\":\"Capricornia\",\"2\":\"39917\",\"3\":\"33917\",\"4\":\"73834\",\"5\":\"230\",\"6\":\"24896\",\"7\":\"Queensland\"},{\"1\":\"Dawson\",\"2\":\"42539\",\"3\":\"34599\",\"4\":\"77138\",\"5\":\"205\",\"6\":\"26943\",\"7\":\"Queensland\"},{\"1\":\"Dickson\",\"2\":\"54206\",\"3\":\"28988\",\"4\":\"83194\",\"5\":\"190\",\"6\":\"18527\",\"7\":\"Queensland\"},{\"1\":\"Fadden\",\"2\":\"52154\",\"3\":\"32218\",\"4\":\"84372\",\"5\":\"215\",\"6\":\"26234\",\"7\":\"Queensland\"},{\"1\":\"Fairfax\",\"2\":\"58510\",\"3\":\"32451\",\"4\":\"90961\",\"5\":\"277\",\"6\":\"21335\",\"7\":\"Queensland\"},{\"1\":\"Fisher\",\"2\":\"52023\",\"3\":\"30783\",\"4\":\"82806\",\"5\":\"258\",\"6\":\"19625\",\"7\":\"Queensland\"},{\"1\":\"Flynn\",\"2\":\"39020\",\"3\":\"36783\",\"4\":\"75803\",\"5\":\"262\",\"6\":\"24529\",\"7\":\"Queensland\"},{\"1\":\"Forde\",\"2\":\"46937\",\"3\":\"30585\",\"4\":\"77522\",\"5\":\"231\",\"6\":\"24423\",\"7\":\"Queensland\"},{\"1\":\"Griffith\",\"2\":\"69171\",\"3\":\"21132\",\"4\":\"90303\",\"5\":\"184\",\"6\":\"20133\",\"7\":\"Queensland\"},{\"1\":\"Groom\",\"2\":\"40536\",\"3\":\"41915\",\"4\":\"82451\",\"5\":\"262\",\"6\":\"20717\",\"7\":\"Queensland\"},{\"1\":\"Herbert\",\"2\":\"48110\",\"3\":\"28441\",\"4\":\"76551\",\"5\":\"207\",\"6\":\"29665\",\"7\":\"Queensland\"},{\"1\":\"Hinkler\",\"2\":\"40649\",\"3\":\"39548\",\"4\":\"80197\",\"5\":\"308\",\"6\":\"22425\",\"7\":\"Queensland\"},{\"1\":\"Kennedy\",\"2\":\"33160\",\"3\":\"37784\",\"4\":\"70944\",\"5\":\"263\",\"6\":\"29794\",\"7\":\"Queensland\"},{\"1\":\"Leichhardt\",\"2\":\"47750\",\"3\":\"27606\",\"4\":\"75356\",\"5\":\"239\",\"6\":\"35841\",\"7\":\"Queensland\"},{\"1\":\"Lilley\",\"2\":\"59991\",\"3\":\"28671\",\"4\":\"88662\",\"5\":\"218\",\"6\":\"20249\",\"7\":\"Queensland\"},{\"1\":\"Longman\",\"2\":\"51268\",\"3\":\"33576\",\"4\":\"84844\",\"5\":\"258\",\"6\":\"24250\",\"7\":\"Queensland\"},{\"1\":\"Maranoa\",\"2\":\"35475\",\"3\":\"45308\",\"4\":\"80783\",\"5\":\"352\",\"6\":\"22553\",\"7\":\"Queensland\"},{\"1\":\"McPherson\",\"2\":\"54034\",\"3\":\"28486\",\"4\":\"82520\",\"5\":\"229\",\"6\":\"23214\",\"7\":\"Queensland\"},{\"1\":\"Moncrieff\",\"2\":\"50566\",\"3\":\"28717\",\"4\":\"79283\",\"5\":\"214\",\"6\":\"25232\",\"7\":\"Queensland\"},{\"1\":\"Moreton\",\"2\":\"47418\",\"3\":\"30413\",\"4\":\"77831\",\"5\":\"220\",\"6\":\"20020\",\"7\":\"Queensland\"},{\"1\":\"Oxley\",\"2\":\"44655\",\"3\":\"29365\",\"4\":\"74020\",\"5\":\"224\",\"6\":\"23348\",\"7\":\"Queensland\"},{\"1\":\"Petrie\",\"2\":\"53144\",\"3\":\"33067\",\"4\":\"86211\",\"5\":\"200\",\"6\":\"23323\",\"7\":\"Queensland\"},{\"1\":\"Rankin\",\"2\":\"41570\",\"3\":\"34621\",\"4\":\"76191\",\"5\":\"237\",\"6\":\"26119\",\"7\":\"Queensland\"},{\"1\":\"Ryan\",\"2\":\"64967\",\"3\":\"24451\",\"4\":\"89418\",\"5\":\"162\",\"6\":\"16223\",\"7\":\"Queensland\"},{\"1\":\"Wide Bay\",\"2\":\"46507\",\"3\":\"37065\",\"4\":\"83572\",\"5\":\"319\",\"6\":\"21645\",\"7\":\"Queensland\"},{\"1\":\"Wright\",\"2\":\"47109\",\"3\":\"35812\",\"4\":\"82921\",\"5\":\"280\",\"6\":\"22144\",\"7\":\"Queensland\"},{\"1\":\"Adelaide\",\"2\":\"62769\",\"3\":\"26771\",\"4\":\"89540\",\"5\":\"217\",\"6\":\"20477\",\"7\":\"South Australia\"},{\"1\":\"Barker\",\"2\":\"42498\",\"3\":\"38827\",\"4\":\"81325\",\"5\":\"243\",\"6\":\"24297\",\"7\":\"South Australia\"},{\"1\":\"Boothby\",\"2\":\"62139\",\"3\":\"28556\",\"4\":\"90695\",\"5\":\"234\",\"6\":\"16919\",\"7\":\"South Australia\"},{\"1\":\"Grey\",\"2\":\"40811\",\"3\":\"35750\",\"4\":\"76561\",\"5\":\"260\",\"6\":\"25327\",\"7\":\"South Australia\"},{\"1\":\"Hindmarsh\",\"2\":\"57947\",\"3\":\"33613\",\"4\":\"91560\",\"5\":\"273\",\"6\":\"20548\",\"7\":\"South Australia\"},{\"1\":\"Kingston\",\"2\":\"58863\",\"3\":\"27567\",\"4\":\"86430\",\"5\":\"252\",\"6\":\"20764\",\"7\":\"South Australia\"},{\"1\":\"Makin\",\"2\":\"51547\",\"3\":\"33743\",\"4\":\"85290\",\"5\":\"242\",\"6\":\"21991\",\"7\":\"South Australia\"},{\"1\":\"Mayo\",\"2\":\"57361\",\"3\":\"31247\",\"4\":\"88608\",\"5\":\"261\",\"6\":\"17239\",\"7\":\"South Australia\"},{\"1\":\"Port Adelaide\",\"2\":\"53649\",\"3\":\"33869\",\"4\":\"87518\",\"5\":\"276\",\"6\":\"27253\",\"7\":\"South Australia\"},{\"1\":\"Sturt\",\"2\":\"52308\",\"3\":\"32655\",\"4\":\"84963\",\"5\":\"252\",\"6\":\"19410\",\"7\":\"South Australia\"},{\"1\":\"Wakefield\",\"2\":\"52636\",\"3\":\"33649\",\"4\":\"86285\",\"5\":\"268\",\"6\":\"27802\",\"7\":\"South Australia\"},{\"1\":\"Brand\",\"2\":\"51953\",\"3\":\"25481\",\"4\":\"77434\",\"5\":\"194\",\"6\":\"24466\",\"7\":\"Western Australia\"},{\"1\":\"Burt\",\"2\":\"44058\",\"3\":\"33275\",\"4\":\"77333\",\"5\":\"169\",\"6\":\"24197\",\"7\":\"Western Australia\"},{\"1\":\"Canning\",\"2\":\"48486\",\"3\":\"32019\",\"4\":\"80505\",\"5\":\"214\",\"6\":\"22157\",\"7\":\"Western Australia\"},{\"1\":\"Cowan\",\"2\":\"44388\",\"3\":\"31075\",\"4\":\"75463\",\"5\":\"184\",\"6\":\"21330\",\"7\":\"Western Australia\"},{\"1\":\"Curtin\",\"2\":\"59638\",\"3\":\"22943\",\"4\":\"82581\",\"5\":\"178\",\"6\":\"15706\",\"7\":\"Western Australia\"},{\"1\":\"Durack\",\"2\":\"39304\",\"3\":\"27128\",\"4\":\"66432\",\"5\":\"194\",\"6\":\"31428\",\"7\":\"Western Australia\"},{\"1\":\"Forrest\",\"2\":\"51612\",\"3\":\"29285\",\"4\":\"80897\",\"5\":\"225\",\"6\":\"21752\",\"7\":\"Western Australia\"},{\"1\":\"Fremantle\",\"2\":\"57541\",\"3\":\"24559\",\"4\":\"82100\",\"5\":\"236\",\"6\":\"19878\",\"7\":\"Western Australia\"},{\"1\":\"Hasluck\",\"2\":\"47880\",\"3\":\"28836\",\"4\":\"76716\",\"5\":\"230\",\"6\":\"19570\",\"7\":\"Western Australia\"},{\"1\":\"Moore\",\"2\":\"56690\",\"3\":\"26690\",\"4\":\"83380\",\"5\":\"195\",\"6\":\"16916\",\"7\":\"Western Australia\"},{\"1\":\"O'Connor\",\"2\":\"43554\",\"3\":\"33987\",\"4\":\"77541\",\"5\":\"234\",\"6\":\"24925\",\"7\":\"Western Australia\"},{\"1\":\"Pearce\",\"2\":\"54305\",\"3\":\"30699\",\"4\":\"85004\",\"5\":\"209\",\"6\":\"26401\",\"7\":\"Western Australia\"},{\"1\":\"Perth\",\"2\":\"57510\",\"3\":\"22967\",\"4\":\"80477\",\"5\":\"177\",\"6\":\"19479\",\"7\":\"Western Australia\"},{\"1\":\"Stirling\",\"2\":\"47225\",\"3\":\"30060\",\"4\":\"77285\",\"5\":\"190\",\"6\":\"21345\",\"7\":\"Western Australia\"},{\"1\":\"Swan\",\"2\":\"49093\",\"3\":\"26830\",\"4\":\"75923\",\"5\":\"185\",\"6\":\"21857\",\"7\":\"Western Australia\"},{\"1\":\"Tangney\",\"2\":\"48338\",\"3\":\"30090\",\"4\":\"78428\",\"5\":\"174\",\"6\":\"14926\",\"7\":\"Western Australia\"},{\"1\":\"Bass\",\"2\":\"36249\",\"3\":\"22510\",\"4\":\"58759\",\"5\":\"145\",\"6\":\"15487\",\"7\":\"Tasmania\"},{\"1\":\"Braddon\",\"2\":\"30054\",\"3\":\"25573\",\"4\":\"55627\",\"5\":\"154\",\"6\":\"17632\",\"7\":\"Tasmania\"},{\"1\":\"Denison\",\"2\":\"45005\",\"3\":\"15992\",\"4\":\"60997\",\"5\":\"167\",\"6\":\"13092\",\"7\":\"Tasmania\"},{\"1\":\"Franklin\",\"2\":\"44746\",\"3\":\"20322\",\"4\":\"65068\",\"5\":\"163\",\"6\":\"13605\",\"7\":\"Tasmania\"},{\"1\":\"Lyons\",\"2\":\"35894\",\"3\":\"25258\",\"4\":\"61152\",\"5\":\"176\",\"6\":\"17204\",\"7\":\"Tasmania\"},{\"1\":\"Lingiari(c)\",\"2\":\"19026\",\"3\":\"15898\",\"4\":\"34924\",\"5\":\"106\",\"6\":\"34854\",\"7\":\"Northern Territory\"},{\"1\":\"Solomon\",\"2\":\"29660\",\"3\":\"15792\",\"4\":\"45452\",\"5\":\"123\",\"6\":\"22642\",\"7\":\"Northern Territory\"},{\"1\":\"Canberra(d)\",\"2\":\"89590\",\"3\":\"31361\",\"4\":\"120951\",\"5\":\"281\",\"6\":\"24399\",\"7\":\"Australian Capital\"},{\"1\":\"Fenner(e)\",\"2\":\"85869\",\"3\":\"30159\",\"4\":\"116028\",\"5\":\"253\",\"6\":\"26196\",\"7\":\"Australian Capital\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\r\n  \r\n\r\nYay! We have a decent data set to work with!\r\nFinalized Variable Definitions\r\nBelow is a list of variable definitions to better understand what variables we have decided to take.\r\nDivision: This is an identifier of what State/Territory Division the other variables are referencing.\r\nYes: This is a count of how many responses from the Division were clearly “Yes”.\r\nNo: This is a count of how many responses from the Division were clearly “No”.\r\nClear Responses: This is a total count of how many responses were clear and used.\r\nNot Clear Responses: This is a total count of how many responses were received, but not clear and therefore not used.\r\nNon-Responders: This is s count of how many eligible persons did not respond to the survey.\r\nState_Territory: This is an identifier of the Federal State/Territory that the other variables are referencing.\r\nExplore the Data\r\nNow we will perform some operations on the data to explore it.\r\n\r\n\r\nam_survey_NSW <- am_survey_final %>% filter(State_Territory == \"New South Wales\") %>%\r\n  arrange(-Yes)\r\n\r\nrmarkdown::paged_table(am_survey_NSW)\r\n\r\n\r\n\r\n\r\n{\"columns\":[{\"label\":[\"Division\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Yes\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"No\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Clear Responses\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Not Clear Responses\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Non-Responders\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"State_Territory\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Sydney\",\"2\":\"76144\",\"3\":\"14860\",\"4\":\"91004\",\"5\":\"146\",\"6\":\"22093\",\"7\":\"New South Wales\"},{\"1\":\"Grayndler\",\"2\":\"73208\",\"3\":\"18429\",\"4\":\"91637\",\"5\":\"136\",\"6\":\"16074\",\"7\":\"New South Wales\"},{\"1\":\"Newcastle\",\"2\":\"71158\",\"3\":\"23999\",\"4\":\"95157\",\"5\":\"232\",\"6\":\"19970\",\"7\":\"New South Wales\"},{\"1\":\"Wentworth\",\"2\":\"69279\",\"3\":\"16410\",\"4\":\"85689\",\"5\":\"162\",\"6\":\"18121\",\"7\":\"New South Wales\"},{\"1\":\"Warringah\",\"2\":\"64999\",\"3\":\"21660\",\"4\":\"86659\",\"5\":\"172\",\"6\":\"16630\",\"7\":\"New South Wales\"},{\"1\":\"North Sydney\",\"2\":\"64813\",\"3\":\"25473\",\"4\":\"90286\",\"5\":\"193\",\"6\":\"17538\",\"7\":\"New South Wales\"},{\"1\":\"Richmond\",\"2\":\"62591\",\"3\":\"29625\",\"4\":\"92216\",\"5\":\"274\",\"6\":\"22719\",\"7\":\"New South Wales\"},{\"1\":\"Shortland\",\"2\":\"62455\",\"3\":\"29836\",\"4\":\"92291\",\"5\":\"255\",\"6\":\"19675\",\"7\":\"New South Wales\"},{\"1\":\"Mackellar\",\"2\":\"62350\",\"3\":\"29330\",\"4\":\"91680\",\"5\":\"208\",\"6\":\"17500\",\"7\":\"New South Wales\"},{\"1\":\"Paterson\",\"2\":\"60915\",\"3\":\"32059\",\"4\":\"92974\",\"5\":\"279\",\"6\":\"24264\",\"7\":\"New South Wales\"},{\"1\":\"Cunningham\",\"2\":\"60906\",\"3\":\"31840\",\"4\":\"92746\",\"5\":\"268\",\"6\":\"20607\",\"7\":\"New South Wales\"},{\"1\":\"Dobell\",\"2\":\"59475\",\"3\":\"30987\",\"4\":\"90462\",\"5\":\"255\",\"6\":\"24275\",\"7\":\"New South Wales\"},{\"1\":\"Gilmore\",\"2\":\"59322\",\"3\":\"36386\",\"4\":\"95708\",\"5\":\"303\",\"6\":\"23109\",\"7\":\"New South Wales\"},{\"1\":\"Hunter\",\"2\":\"59137\",\"3\":\"32723\",\"4\":\"91860\",\"5\":\"251\",\"6\":\"25253\",\"7\":\"New South Wales\"},{\"1\":\"Robertson\",\"2\":\"58689\",\"3\":\"30614\",\"4\":\"89303\",\"5\":\"231\",\"6\":\"20431\",\"7\":\"New South Wales\"},{\"1\":\"Whitlam\",\"2\":\"57562\",\"3\":\"34879\",\"4\":\"92441\",\"5\":\"276\",\"6\":\"23064\",\"7\":\"New South Wales\"},{\"1\":\"Cowper\",\"2\":\"57493\",\"3\":\"38317\",\"4\":\"95810\",\"5\":\"315\",\"6\":\"25197\",\"7\":\"New South Wales\"},{\"1\":\"Eden-Monaro\",\"2\":\"57223\",\"3\":\"30926\",\"4\":\"88149\",\"5\":\"249\",\"6\":\"22139\",\"7\":\"New South Wales\"},{\"1\":\"Kingsford Smith\",\"2\":\"56297\",\"3\":\"31510\",\"4\":\"87807\",\"5\":\"225\",\"6\":\"22399\",\"7\":\"New South Wales\"},{\"1\":\"Macquarie\",\"2\":\"56180\",\"3\":\"31778\",\"4\":\"87958\",\"5\":\"235\",\"6\":\"18490\",\"7\":\"New South Wales\"},{\"1\":\"Page\",\"2\":\"55943\",\"3\":\"37727\",\"4\":\"93670\",\"5\":\"291\",\"6\":\"25645\",\"7\":\"New South Wales\"},{\"1\":\"Calare\",\"2\":\"54091\",\"3\":\"35779\",\"4\":\"89870\",\"5\":\"285\",\"6\":\"25342\",\"7\":\"New South Wales\"},{\"1\":\"Bradfield\",\"2\":\"53681\",\"3\":\"34927\",\"4\":\"88608\",\"5\":\"202\",\"6\":\"17261\",\"7\":\"New South Wales\"},{\"1\":\"Lyne\",\"2\":\"51416\",\"3\":\"41539\",\"4\":\"92955\",\"5\":\"316\",\"6\":\"21426\",\"7\":\"New South Wales\"},{\"1\":\"Hughes\",\"2\":\"51337\",\"3\":\"36558\",\"4\":\"87895\",\"5\":\"185\",\"6\":\"17038\",\"7\":\"New South Wales\"},{\"1\":\"Hume\",\"2\":\"51284\",\"3\":\"36271\",\"4\":\"87555\",\"5\":\"213\",\"6\":\"23457\",\"7\":\"New South Wales\"},{\"1\":\"Lindsay\",\"2\":\"49071\",\"3\":\"38295\",\"4\":\"87366\",\"5\":\"234\",\"6\":\"26955\",\"7\":\"New South Wales\"},{\"1\":\"Berowra\",\"2\":\"48471\",\"3\":\"40369\",\"4\":\"88840\",\"5\":\"212\",\"6\":\"16038\",\"7\":\"New South Wales\"},{\"1\":\"Farrer\",\"2\":\"48432\",\"3\":\"39297\",\"4\":\"87729\",\"5\":\"277\",\"6\":\"25669\",\"7\":\"New South Wales\"},{\"1\":\"Cook\",\"2\":\"47505\",\"3\":\"38804\",\"4\":\"86309\",\"5\":\"229\",\"6\":\"18713\",\"7\":\"New South Wales\"},{\"1\":\"Riverina\",\"2\":\"47333\",\"3\":\"39308\",\"4\":\"86641\",\"5\":\"265\",\"6\":\"25632\",\"7\":\"New South Wales\"},{\"1\":\"New England\",\"2\":\"44608\",\"3\":\"40324\",\"4\":\"84932\",\"5\":\"256\",\"6\":\"25581\",\"7\":\"New South Wales\"},{\"1\":\"Reid\",\"2\":\"43567\",\"3\":\"39061\",\"4\":\"82628\",\"5\":\"203\",\"6\":\"23786\",\"7\":\"New South Wales\"},{\"1\":\"Macarthur\",\"2\":\"43323\",\"3\":\"39907\",\"4\":\"83230\",\"5\":\"228\",\"6\":\"27271\",\"7\":\"New South Wales\"},{\"1\":\"Bennelong\",\"2\":\"42943\",\"3\":\"43215\",\"4\":\"86158\",\"5\":\"244\",\"6\":\"19973\",\"7\":\"New South Wales\"},{\"1\":\"Mitchell\",\"2\":\"42112\",\"3\":\"43652\",\"4\":\"85764\",\"5\":\"176\",\"6\":\"19436\",\"7\":\"New South Wales\"},{\"1\":\"Parkes\",\"2\":\"41408\",\"3\":\"37108\",\"4\":\"78516\",\"5\":\"241\",\"6\":\"29777\",\"7\":\"New South Wales\"},{\"1\":\"Greenway\",\"2\":\"38016\",\"3\":\"43980\",\"4\":\"81996\",\"5\":\"217\",\"6\":\"25253\",\"7\":\"New South Wales\"},{\"1\":\"Banks\",\"2\":\"37736\",\"3\":\"46343\",\"4\":\"84079\",\"5\":\"247\",\"6\":\"20928\",\"7\":\"New South Wales\"},{\"1\":\"Barton\",\"2\":\"37153\",\"3\":\"47984\",\"4\":\"85137\",\"5\":\"226\",\"6\":\"24008\",\"7\":\"New South Wales\"},{\"1\":\"Chifley\",\"2\":\"32871\",\"3\":\"46702\",\"4\":\"79573\",\"5\":\"263\",\"6\":\"28180\",\"7\":\"New South Wales\"},{\"1\":\"Werriwa\",\"2\":\"30252\",\"3\":\"53174\",\"4\":\"83426\",\"5\":\"269\",\"6\":\"29282\",\"7\":\"New South Wales\"},{\"1\":\"Parramatta\",\"2\":\"29299\",\"3\":\"47038\",\"4\":\"76337\",\"5\":\"197\",\"6\":\"25757\",\"7\":\"New South Wales\"},{\"1\":\"McMahon\",\"2\":\"29146\",\"3\":\"53967\",\"4\":\"83113\",\"5\":\"242\",\"6\":\"23721\",\"7\":\"New South Wales\"},{\"1\":\"Fowler\",\"2\":\"27847\",\"3\":\"48782\",\"4\":\"76629\",\"5\":\"228\",\"6\":\"29251\",\"7\":\"New South Wales\"},{\"1\":\"Watson\",\"2\":\"24915\",\"3\":\"57160\",\"4\":\"82075\",\"5\":\"205\",\"6\":\"24634\",\"7\":\"New South Wales\"},{\"1\":\"Blaxland\",\"2\":\"20406\",\"3\":\"57926\",\"4\":\"78332\",\"5\":\"220\",\"6\":\"25883\",\"7\":\"New South Wales\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\r\n  \r\n\r\nAnd, for fun, let’s plot some of the results. I am interested to see how the population responded in terms of proportion of YES and NO responses and how that distribution may be impacted by the State/Territory of the populations.\r\nSo what we will do is calculate the proportions of responses, plot the distribution, and highlight the results by State/Territory to see what, if any, patterns emerge.\r\n\r\n\r\nam_survey_ST_grouped <- am_survey_final %>% group_by(State_Territory,Division) %>%\r\n  summarise(Total_Responses = sum(`Clear Responses`,`Not Clear Responses`),\r\n            Married_Perc = sum(Yes)/sum((Yes+No))) %>%\r\n  arrange(-Total_Responses)\r\nrmarkdown::paged_table(am_survey_ST_grouped)\r\n\r\n\r\n\r\n\r\n{\"columns\":[{\"label\":[\"State_Territory\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Division\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Total_Responses\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Married_Perc\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Australian Capital\",\"2\":\"Canberra(d)\",\"3\":\"121232\",\"4\":\"0.7407132\"},{\"1\":\"Australian Capital\",\"2\":\"Fenner(e)\",\"3\":\"116281\",\"4\":\"0.7400714\"},{\"1\":\"Victoria\",\"2\":\"McEwen\",\"3\":\"113089\",\"4\":\"0.6539233\"},{\"1\":\"Victoria\",\"2\":\"Lalor\",\"3\":\"100836\",\"4\":\"0.5678319\"},{\"1\":\"Victoria\",\"2\":\"McMillan\",\"3\":\"98351\",\"4\":\"0.6274712\"},{\"1\":\"Victoria\",\"2\":\"Wills\",\"3\":\"98099\",\"4\":\"0.6995473\"},{\"1\":\"Victoria\",\"2\":\"Flinders\",\"3\":\"97902\",\"4\":\"0.6999467\"},{\"1\":\"Victoria\",\"2\":\"Corangamite\",\"3\":\"97757\",\"4\":\"0.7156141\"},{\"1\":\"Victoria\",\"2\":\"Melbourne\",\"3\":\"97308\",\"4\":\"0.8369232\"},{\"1\":\"New South Wales\",\"2\":\"Cowper\",\"3\":\"96125\",\"4\":\"0.6000731\"},{\"1\":\"New South Wales\",\"2\":\"Gilmore\",\"3\":\"96011\",\"4\":\"0.6198228\"},{\"1\":\"New South Wales\",\"2\":\"Newcastle\",\"3\":\"95389\",\"4\":\"0.7477957\"},{\"1\":\"New South Wales\",\"2\":\"Page\",\"3\":\"93961\",\"4\":\"0.5972350\"},{\"1\":\"Victoria\",\"2\":\"Gorton\",\"3\":\"93768\",\"4\":\"0.5334347\"},{\"1\":\"Victoria\",\"2\":\"Batman\",\"3\":\"93576\",\"4\":\"0.7115844\"},{\"1\":\"Victoria\",\"2\":\"Ballarat\",\"3\":\"93351\",\"4\":\"0.7053796\"},{\"1\":\"Victoria\",\"2\":\"Holt\",\"3\":\"93311\",\"4\":\"0.5068371\"},{\"1\":\"New South Wales\",\"2\":\"Lyne\",\"3\":\"93271\",\"4\":\"0.5531279\"},{\"1\":\"New South Wales\",\"2\":\"Paterson\",\"3\":\"93253\",\"4\":\"0.6551832\"},{\"1\":\"New South Wales\",\"2\":\"Cunningham\",\"3\":\"93014\",\"4\":\"0.6566968\"},{\"1\":\"Victoria\",\"2\":\"Corio\",\"3\":\"92882\",\"4\":\"0.6772154\"},{\"1\":\"New South Wales\",\"2\":\"Whitlam\",\"3\":\"92717\",\"4\":\"0.6226891\"},{\"1\":\"Victoria\",\"2\":\"Bendigo\",\"3\":\"92597\",\"4\":\"0.6872886\"},{\"1\":\"New South Wales\",\"2\":\"Shortland\",\"3\":\"92546\",\"4\":\"0.6767182\"},{\"1\":\"New South Wales\",\"2\":\"Richmond\",\"3\":\"92490\",\"4\":\"0.6787434\"},{\"1\":\"New South Wales\",\"2\":\"Hunter\",\"3\":\"92111\",\"4\":\"0.6437731\"},{\"1\":\"Victoria\",\"2\":\"La Trobe\",\"3\":\"91901\",\"4\":\"0.6745059\"},{\"1\":\"New South Wales\",\"2\":\"Mackellar\",\"3\":\"91888\",\"4\":\"0.6800829\"},{\"1\":\"South Australia\",\"2\":\"Hindmarsh\",\"3\":\"91833\",\"4\":\"0.6328855\"},{\"1\":\"New South Wales\",\"2\":\"Grayndler\",\"3\":\"91773\",\"4\":\"0.7988913\"},{\"1\":\"Queensland\",\"2\":\"Brisbane\",\"3\":\"91733\",\"4\":\"0.7951165\"},{\"1\":\"Victoria\",\"2\":\"Goldstein\",\"3\":\"91627\",\"4\":\"0.7629583\"},{\"1\":\"Victoria\",\"2\":\"Gellibrand\",\"3\":\"91388\",\"4\":\"0.6809900\"},{\"1\":\"Queensland\",\"2\":\"Fairfax\",\"3\":\"91238\",\"4\":\"0.6432427\"},{\"1\":\"New South Wales\",\"2\":\"Sydney\",\"3\":\"91150\",\"4\":\"0.8367105\"},{\"1\":\"South Australia\",\"2\":\"Boothby\",\"3\":\"90929\",\"4\":\"0.6851425\"},{\"1\":\"Victoria\",\"2\":\"Scullin\",\"3\":\"90749\",\"4\":\"0.5337309\"},{\"1\":\"New South Wales\",\"2\":\"Dobell\",\"3\":\"90717\",\"4\":\"0.6574584\"},{\"1\":\"Queensland\",\"2\":\"Griffith\",\"3\":\"90487\",\"4\":\"0.7659878\"},{\"1\":\"New South Wales\",\"2\":\"North Sydney\",\"3\":\"90479\",\"4\":\"0.7178632\"},{\"1\":\"New South Wales\",\"2\":\"Calare\",\"3\":\"90155\",\"4\":\"0.6018805\"},{\"1\":\"South Australia\",\"2\":\"Adelaide\",\"3\":\"89757\",\"4\":\"0.7010163\"},{\"1\":\"Victoria\",\"2\":\"Higgins\",\"3\":\"89614\",\"4\":\"0.7833598\"},{\"1\":\"Queensland\",\"2\":\"Ryan\",\"3\":\"89580\",\"4\":\"0.7265539\"},{\"1\":\"New South Wales\",\"2\":\"Robertson\",\"3\":\"89534\",\"4\":\"0.6571896\"},{\"1\":\"Victoria\",\"2\":\"Maribyrnong\",\"3\":\"89226\",\"4\":\"0.5987442\"},{\"1\":\"New South Wales\",\"2\":\"Berowra\",\"3\":\"89052\",\"4\":\"0.5455988\"},{\"1\":\"Queensland\",\"2\":\"Lilley\",\"3\":\"88880\",\"4\":\"0.6766258\"},{\"1\":\"South Australia\",\"2\":\"Mayo\",\"3\":\"88869\",\"4\":\"0.6473569\"},{\"1\":\"New South Wales\",\"2\":\"Bradfield\",\"3\":\"88810\",\"4\":\"0.6058257\"},{\"1\":\"Victoria\",\"2\":\"Jagajaga\",\"3\":\"88806\",\"4\":\"0.7351470\"},{\"1\":\"Victoria\",\"2\":\"Casey\",\"3\":\"88419\",\"4\":\"0.6805557\"},{\"1\":\"New South Wales\",\"2\":\"Eden-Monaro\",\"3\":\"88398\",\"4\":\"0.6491622\"},{\"1\":\"New South Wales\",\"2\":\"Macquarie\",\"3\":\"88193\",\"4\":\"0.6387139\"},{\"1\":\"New South Wales\",\"2\":\"Hughes\",\"3\":\"88080\",\"4\":\"0.5840719\"},{\"1\":\"New South Wales\",\"2\":\"Kingsford Smith\",\"3\":\"88032\",\"4\":\"0.6411448\"},{\"1\":\"New South Wales\",\"2\":\"Farrer\",\"3\":\"88006\",\"4\":\"0.5520637\"},{\"1\":\"Victoria\",\"2\":\"Calwell\",\"3\":\"87993\",\"4\":\"0.4316466\"},{\"1\":\"South Australia\",\"2\":\"Port Adelaide\",\"3\":\"87794\",\"4\":\"0.6130053\"},{\"1\":\"New South Wales\",\"2\":\"Hume\",\"3\":\"87768\",\"4\":\"0.5857347\"},{\"1\":\"New South Wales\",\"2\":\"Lindsay\",\"3\":\"87600\",\"4\":\"0.5616716\"},{\"1\":\"Victoria\",\"2\":\"Dunkley\",\"3\":\"87596\",\"4\":\"0.7197260\"},{\"1\":\"Victoria\",\"2\":\"Isaacs\",\"3\":\"86983\",\"4\":\"0.6532846\"},{\"1\":\"New South Wales\",\"2\":\"Riverina\",\"3\":\"86906\",\"4\":\"0.5463118\"},{\"1\":\"New South Wales\",\"2\":\"Warringah\",\"3\":\"86831\",\"4\":\"0.7500548\"},{\"1\":\"Victoria\",\"2\":\"Indi\",\"3\":\"86812\",\"4\":\"0.6308736\"},{\"1\":\"South Australia\",\"2\":\"Kingston\",\"3\":\"86682\",\"4\":\"0.6810482\"},{\"1\":\"South Australia\",\"2\":\"Wakefield\",\"3\":\"86553\",\"4\":\"0.6100249\"},{\"1\":\"Victoria\",\"2\":\"Kooyong\",\"3\":\"86552\",\"4\":\"0.7366921\"},{\"1\":\"New South Wales\",\"2\":\"Cook\",\"3\":\"86538\",\"4\":\"0.5504061\"},{\"1\":\"Queensland\",\"2\":\"Petrie\",\"3\":\"86411\",\"4\":\"0.6164411\"},{\"1\":\"New South Wales\",\"2\":\"Bennelong\",\"3\":\"86402\",\"4\":\"0.4984215\"},{\"1\":\"Queensland\",\"2\":\"Bowman\",\"3\":\"86376\",\"4\":\"0.6213032\"},{\"1\":\"Victoria\",\"2\":\"Melbourne Ports\",\"3\":\"86310\",\"4\":\"0.8197348\"},{\"1\":\"New South Wales\",\"2\":\"Mitchell\",\"3\":\"85940\",\"4\":\"0.4910219\"},{\"1\":\"New South Wales\",\"2\":\"Wentworth\",\"3\":\"85851\",\"4\":\"0.8084935\"},{\"1\":\"South Australia\",\"2\":\"Makin\",\"3\":\"85532\",\"4\":\"0.6043733\"},{\"1\":\"Victoria\",\"2\":\"Gippsland\",\"3\":\"85444\",\"4\":\"0.6015557\"},{\"1\":\"New South Wales\",\"2\":\"Barton\",\"3\":\"85363\",\"4\":\"0.4363908\"},{\"1\":\"South Australia\",\"2\":\"Sturt\",\"3\":\"85215\",\"4\":\"0.6156562\"},{\"1\":\"Western Australia\",\"2\":\"Pearce\",\"3\":\"85213\",\"4\":\"0.6388523\"},{\"1\":\"New South Wales\",\"2\":\"New England\",\"3\":\"85188\",\"4\":\"0.5252202\"},{\"1\":\"Queensland\",\"2\":\"Longman\",\"3\":\"85102\",\"4\":\"0.6042619\"},{\"1\":\"Victoria\",\"2\":\"Deakin\",\"3\":\"84713\",\"4\":\"0.6568684\"},{\"1\":\"Queensland\",\"2\":\"Fadden\",\"3\":\"84587\",\"4\":\"0.6181435\"},{\"1\":\"New South Wales\",\"2\":\"Banks\",\"3\":\"84326\",\"4\":\"0.4488160\"},{\"1\":\"Queensland\",\"2\":\"Bonner\",\"3\":\"84239\",\"4\":\"0.6204808\"},{\"1\":\"Victoria\",\"2\":\"Murray\",\"3\":\"84014\",\"4\":\"0.5762220\"},{\"1\":\"Queensland\",\"2\":\"Wide Bay\",\"3\":\"83891\",\"4\":\"0.5564902\"},{\"1\":\"New South Wales\",\"2\":\"Werriwa\",\"3\":\"83695\",\"4\":\"0.3626208\"},{\"1\":\"Western Australia\",\"2\":\"Moore\",\"3\":\"83575\",\"4\":\"0.6798993\"},{\"1\":\"New South Wales\",\"2\":\"Macarthur\",\"3\":\"83458\",\"4\":\"0.5205214\"},{\"1\":\"Queensland\",\"2\":\"Dickson\",\"3\":\"83384\",\"4\":\"0.6515614\"},{\"1\":\"New South Wales\",\"2\":\"McMahon\",\"3\":\"83355\",\"4\":\"0.3506792\"},{\"1\":\"Queensland\",\"2\":\"Wright\",\"3\":\"83201\",\"4\":\"0.5681191\"},{\"1\":\"Queensland\",\"2\":\"Fisher\",\"3\":\"83064\",\"4\":\"0.6282516\"},{\"1\":\"Victoria\",\"2\":\"Menzies\",\"3\":\"83021\",\"4\":\"0.5695419\"},{\"1\":\"New South Wales\",\"2\":\"Reid\",\"3\":\"82831\",\"4\":\"0.5272668\"},{\"1\":\"Western Australia\",\"2\":\"Curtin\",\"3\":\"82759\",\"4\":\"0.7221758\"},{\"1\":\"Queensland\",\"2\":\"McPherson\",\"3\":\"82749\",\"4\":\"0.6547988\"},{\"1\":\"Queensland\",\"2\":\"Groom\",\"3\":\"82713\",\"4\":\"0.4916375\"},{\"1\":\"Western Australia\",\"2\":\"Fremantle\",\"3\":\"82336\",\"4\":\"0.7008648\"},{\"1\":\"New South Wales\",\"2\":\"Watson\",\"3\":\"82280\",\"4\":\"0.3035638\"},{\"1\":\"New South Wales\",\"2\":\"Greenway\",\"3\":\"82213\",\"4\":\"0.4636324\"},{\"1\":\"South Australia\",\"2\":\"Barker\",\"3\":\"81568\",\"4\":\"0.5225699\"},{\"1\":\"Victoria\",\"2\":\"Wannon\",\"3\":\"81212\",\"4\":\"0.6101225\"},{\"1\":\"Queensland\",\"2\":\"Maranoa\",\"3\":\"81135\",\"4\":\"0.4391394\"},{\"1\":\"Western Australia\",\"2\":\"Forrest\",\"3\":\"81122\",\"4\":\"0.6379965\"},{\"1\":\"Victoria\",\"2\":\"Hotham\",\"3\":\"80813\",\"4\":\"0.5960253\"},{\"1\":\"Western Australia\",\"2\":\"Canning\",\"3\":\"80719\",\"4\":\"0.6022732\"},{\"1\":\"Western Australia\",\"2\":\"Perth\",\"3\":\"80654\",\"4\":\"0.7146141\"},{\"1\":\"Victoria\",\"2\":\"Chisholm\",\"3\":\"80563\",\"4\":\"0.6158521\"},{\"1\":\"Queensland\",\"2\":\"Hinkler\",\"3\":\"80505\",\"4\":\"0.5068643\"},{\"1\":\"New South Wales\",\"2\":\"Chifley\",\"3\":\"79836\",\"4\":\"0.4130924\"},{\"1\":\"Queensland\",\"2\":\"Moncrieff\",\"3\":\"79497\",\"4\":\"0.6377912\"},{\"1\":\"Queensland\",\"2\":\"Blair\",\"3\":\"78883\",\"4\":\"0.6002264\"},{\"1\":\"New South Wales\",\"2\":\"Parkes\",\"3\":\"78757\",\"4\":\"0.5273830\"},{\"1\":\"Victoria\",\"2\":\"Mallee\",\"3\":\"78649\",\"4\":\"0.5427896\"},{\"1\":\"Western Australia\",\"2\":\"Tangney\",\"3\":\"78602\",\"4\":\"0.6163360\"},{\"1\":\"New South Wales\",\"2\":\"Blaxland\",\"3\":\"78552\",\"4\":\"0.2605066\"},{\"1\":\"Victoria\",\"2\":\"Aston\",\"3\":\"78419\",\"4\":\"0.6197480\"},{\"1\":\"Queensland\",\"2\":\"Moreton\",\"3\":\"78051\",\"4\":\"0.6092431\"},{\"1\":\"Western Australia\",\"2\":\"O'Connor\",\"3\":\"77775\",\"4\":\"0.5616899\"},{\"1\":\"Queensland\",\"2\":\"Forde\",\"3\":\"77753\",\"4\":\"0.6054668\"},{\"1\":\"Western Australia\",\"2\":\"Brand\",\"3\":\"77628\",\"4\":\"0.6709327\"},{\"1\":\"Western Australia\",\"2\":\"Burt\",\"3\":\"77502\",\"4\":\"0.5697180\"},{\"1\":\"Western Australia\",\"2\":\"Stirling\",\"3\":\"77475\",\"4\":\"0.6110500\"},{\"1\":\"Queensland\",\"2\":\"Dawson\",\"3\":\"77343\",\"4\":\"0.5514662\"},{\"1\":\"Western Australia\",\"2\":\"Hasluck\",\"3\":\"76946\",\"4\":\"0.6241201\"},{\"1\":\"New South Wales\",\"2\":\"Fowler\",\"3\":\"76857\",\"4\":\"0.3634003\"},{\"1\":\"South Australia\",\"2\":\"Grey\",\"3\":\"76821\",\"4\":\"0.5330521\"},{\"1\":\"Queensland\",\"2\":\"Herbert\",\"3\":\"76758\",\"4\":\"0.6284699\"},{\"1\":\"New South Wales\",\"2\":\"Parramatta\",\"3\":\"76534\",\"4\":\"0.3838113\"},{\"1\":\"Queensland\",\"2\":\"Rankin\",\"3\":\"76428\",\"4\":\"0.5456025\"},{\"1\":\"Western Australia\",\"2\":\"Swan\",\"3\":\"76108\",\"4\":\"0.6466157\"},{\"1\":\"Queensland\",\"2\":\"Flynn\",\"3\":\"76065\",\"4\":\"0.5147554\"},{\"1\":\"Western Australia\",\"2\":\"Cowan\",\"3\":\"75647\",\"4\":\"0.5882088\"},{\"1\":\"Queensland\",\"2\":\"Leichhardt\",\"3\":\"75595\",\"4\":\"0.6336589\"},{\"1\":\"Queensland\",\"2\":\"Oxley\",\"3\":\"74244\",\"4\":\"0.6032829\"},{\"1\":\"Victoria\",\"2\":\"Bruce\",\"3\":\"74104\",\"4\":\"0.4691321\"},{\"1\":\"Queensland\",\"2\":\"Capricornia\",\"3\":\"74064\",\"4\":\"0.5406317\"},{\"1\":\"Queensland\",\"2\":\"Kennedy\",\"3\":\"71207\",\"4\":\"0.4674109\"},{\"1\":\"Western Australia\",\"2\":\"Durack\",\"3\":\"66626\",\"4\":\"0.5916426\"},{\"1\":\"Tasmania\",\"2\":\"Franklin\",\"3\":\"65231\",\"4\":\"0.6876806\"},{\"1\":\"Tasmania\",\"2\":\"Lyons\",\"3\":\"61328\",\"4\":\"0.5869636\"},{\"1\":\"Tasmania\",\"2\":\"Denison\",\"3\":\"61164\",\"4\":\"0.7378232\"},{\"1\":\"Tasmania\",\"2\":\"Bass\",\"3\":\"58904\",\"4\":\"0.6169097\"},{\"1\":\"Tasmania\",\"2\":\"Braddon\",\"3\":\"55781\",\"4\":\"0.5402772\"},{\"1\":\"Northern Territory\",\"2\":\"Solomon\",\"3\":\"45575\",\"4\":\"0.6525565\"},{\"1\":\"Northern Territory\",\"2\":\"Lingiari(c)\",\"3\":\"35030\",\"4\":\"0.5447830\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\r\n  \r\n\r\nam_survey_ST_grouped %>% ggplot(aes(x=Married_Perc)) +\r\n  geom_histogram(color=\"black\",aes(fill=State_Territory),binwidth = 0.025) +\r\n  labs(title = \"Survey of Australians About Marriage Law Change\",\r\n       subtitle = \"Should the law be changed to allow same sex couples to marry?\",\r\n       x=\"Percent of Population Who Responded YES\",\r\n       y=\"Count of Divisions\")\r\n\r\n\r\n\r\n\r\nInteresting…No conclusions today and a lot of unanswered questions, but a good start to understanding the opinions of eligible Australian voters on the topic of the legality of same-sex marriage.\r\nSome notes before we leave.\r\nI would like to better understand and apply formatting within Rmarkdown/Distill documents. This page is not as clear as I would want it to be without additional adjustments.\r\nThere are a couple of cleaning/wrangling operations that I would like to learn to perform in a more efficient manner. For instance, assigning the State_Territory variable was entirely manual and not scalable.\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomtbartelloni862736/distill-preview.png",
    "last_modified": "2022-02-09T18:37:31-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomtcwilso3hw2dacss601/",
    "title": "Homework2_Wilson",
    "description": "HW2 - Reading in data and dplyr practice",
    "author": [
      {
        "name": "Thomas Wilson",
        "url": {}
      }
    ],
    "date": "2022-02-09",
    "categories": [],
    "contents": "\n\n\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nrailroad_2012_clean_county_tidy <- read_csv(\".//./railroad_2012_clean_county_tidy.csv\")\n\ndim(railroad_2012_clean_county_tidy)\n\n\n[1] 2930    3\n\n#Filter out counties with less than 100 employees and list from highest to lowest\nrailroad_2012_clean_county_tidy %>%\n  filter(total_employees > 100) %>%\n  arrange(desc(total_employees)) \n\n\n# A tibble: 530 x 3\n   state county           total_employees\n   <chr> <chr>                      <dbl>\n 1 IL    COOK                        8207\n 2 TX    TARRANT                     4235\n 3 NE    DOUGLAS                     3797\n 4 NY    SUFFOLK                     3685\n 5 VA    INDEPENDENT CITY            3249\n 6 FL    DUVAL                       3073\n 7 CA    SAN BERNARDINO              2888\n 8 CA    LOS ANGELES                 2545\n 9 TX    HARRIS                      2535\n10 NE    LINCOLN                     2289\n# … with 520 more rows\n\n```{.r .distill-force-highlighting-css}\n\n\n",
    "preview": {},
    "last_modified": "2022-02-09T18:36:58-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httprpubscomamerleaux861483/",
    "title": "HW1",
    "description": "third attempt :)",
    "author": [
      {
        "name": "April Merleaux",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:12-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httprpubscommeade68861931/",
    "title": "Distill Test 2",
    "description": "Distill test; take 2",
    "author": [
      {
        "name": "Justin Meade",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\nR Markdown\r\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\r\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\r\n\r\n\r\nsummary(cars)\r\n\r\n\r\n     speed           dist       \r\n Min.   : 4.0   Min.   :  2.00  \r\n 1st Qu.:12.0   1st Qu.: 26.00  \r\n Median :15.0   Median : 36.00  \r\n Mean   :15.4   Mean   : 42.98  \r\n 3rd Qu.:19.0   3rd Qu.: 56.00  \r\n Max.   :25.0   Max.   :120.00  \r\n\r\nIncluding Plots\r\nYou can also embed plots, for example:\r\n\r\n\r\n\r\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\r\n\r\n\r\n\r\n",
    "preview": "posts/httprpubscommeade68861931/distill-preview.png",
    "last_modified": "2022-02-03T21:54:06-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httprpubscomniharika861660/",
    "title": "HW1",
    "description": "This is an example of RMarkdown",
    "author": [
      {
        "name": "Niharika Pola",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\nThis is an example of calculating Speed from given data of distance and time and generating the speed Graph\r\n\r\n\r\ndistance<-c(24,78,564,55,600)\r\ntime<-c(3,12,90,10,100)\r\nspeed<-distance/time\r\nspeed\r\n\r\n\r\n[1] 8.000000 6.500000 6.266667 5.500000 6.000000\r\n\r\nbarplot(speed, main='Speed Graph in kms/hr',xlab='distance in kms',ylab='time in hours')\r\n\r\n\r\n\r\n\r\n##Thank You\r\n\r\n\r\n\r\n",
    "preview": "posts/httprpubscomniharika861660/distill-preview.png",
    "last_modified": "2022-02-03T21:54:02-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httprpubscomsnehalhw/",
    "title": "DACSS 601: HW1",
    "description": "Introduction to R",
    "author": [
      {
        "name": "Snehal Prabhu",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\n\r\n\r\nlibrary(readr)\r\ndata <- read_csv(file=\"C:/Users/sneha/Downloads/railroad_2012_clean_state.csv\")\r\nhead(data)\r\n\r\n\r\n# A tibble: 6 x 2\r\n  state total_employees\r\n  <chr>           <dbl>\r\n1 AE                  2\r\n2 AK                103\r\n3 AL               4257\r\n4 AP                  1\r\n5 AR               3871\r\n6 AZ               3153\r\n\r\n\r\n\r\ncolnames(data)\r\n\r\n\r\n[1] \"state\"           \"total_employees\"\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:05-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httprpubscomsnoutsnake860945/",
    "title": "Sasi Tansaraviput HW1",
    "description": "Test for RPubs DACSS601",
    "author": [
      {
        "name": "Sasi Tansaraviput",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:34-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsdamionperrygithubiodcss601postswelcome/",
    "title": "Homework 1",
    "description": "Pilot post for developing a blog through R via distill for DCSS601",
    "author": [
      {
        "name": "Damion Perry",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\nHW1\nHere is some text.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:22-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomethancampbell860941/",
    "title": "EthanCampbellHW1",
    "description": "First Assignment for DACSS.",
    "author": [
      {
        "name": "Ethan Campbell",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\nBasic Visualization\r\nHere we visulize the data set MPG and look into tank size and mpg on the hwy.\r\n\r\n\r\nggplot(data = mpg) +\r\n  geom_point(mapping = aes(x = displ, y = hwy))\r\n\r\n\r\n\r\n\r\nHere we start using a second aes function. (Size and Color)\r\n\r\n\r\nggplot(data = mpg) +\r\n  geom_point(mapping = aes(x = displ, y = hwy, size = cty, color = hwy))\r\n\r\n\r\n\r\n\r\nAdding and removing the legend. Change show.legend to False to turn it off.\r\n\r\n\r\nggplot(data = mpg) +\r\n  geom_smooth(mapping = aes(x = displ, y = hwy, color = drv),\r\n    show.legend = TRUE)\r\n\r\n\r\n\r\n\r\nHere is the combination of the above sets.\r\n\r\n\r\nggplot(data = mpg) + \r\n  geom_point(mapping = aes(x = displ, y = hwy, color = drv)) +\r\n  geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv, color = drv),\r\n              show.legend = TRUE\r\n              )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomethancampbell860941/distill-preview.png",
    "last_modified": "2022-02-03T21:53:25-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomhenryfnp860386/",
    "title": "Henry Nguyen, HW1",
    "description": "rpubs test for HW1",
    "author": [
      {
        "name": "Henry Nguyen",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:52-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomhmuleyumass861476/",
    "title": "Mulveyhw1",
    "description": "try #2",
    "author": [
      {
        "name": "Henry Mulvey",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\nR Markdown\r\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\r\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\r\n\r\n\r\nsummary(cars)\r\n\r\n\r\n     speed           dist       \r\n Min.   : 4.0   Min.   :  2.00  \r\n 1st Qu.:12.0   1st Qu.: 26.00  \r\n Median :15.0   Median : 36.00  \r\n Mean   :15.4   Mean   : 42.98  \r\n 3rd Qu.:19.0   3rd Qu.: 56.00  \r\n Max.   :25.0   Max.   :120.00  \r\n\r\nIncluding Plots\r\nYou can also embed plots, for example:\r\n\r\n\r\n\r\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\r\n\r\n\r\n\r\n",
    "preview": "posts/httpsrpubscomhmuleyumass861476/distill-preview.png",
    "last_modified": "2022-02-03T21:53:09-05:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/httpsrpubscomjnfarrell211861485/",
    "title": "HW1",
    "description": "HW 1 Resubmission",
    "author": [
      {
        "name": "Joseph Farrell",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:15-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscommanikanta860644/",
    "title": "HW1",
    "description": "Learning R",
    "author": [
      {
        "name": "Mani kanta Gogula",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:37-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomnorthonum859557/",
    "title": "HW1-ThirdTry",
    "description": "HW1-ThirdTry",
    "author": [
      {
        "name": "Jason OConnell",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:46-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomrahulg861591/",
    "title": "HW1",
    "description": "Retry",
    "author": [
      {
        "name": "Rahul Gundeti",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:44-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomrahulghw1retry/",
    "title": "HW1",
    "description": "Retry",
    "author": [
      {
        "name": "Rahul Gundeti",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:40-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomsshelke861618/",
    "title": "HW1 Shruti Shelke",
    "description": "This is DACSS601 HW1",
    "author": [
      {
        "name": "Shruti Shelke",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:55-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomtbartelloni860564/",
    "title": "Tory Bartelloni HW1 - Test Distill Article",
    "description": "How to complete the first homework assignment of the course.",
    "author": [
      {
        "name": "Tory Bartelloni",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\nPublish and post.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:58-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsrpubscomtcwilso3860290/",
    "title": "HW1",
    "description": "HW1 - Practice with RPubs",
    "author": [
      {
        "name": "Thomas Wilson",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\n#RPubs practice\nAdd a new chunk by clicking the Insert Chunk button on the toolbar or by pressing Cmd+Option+I.\nWhen you save the notebook, an HTML file containing the code and output will be saved alongside it (click the Preview button or press Cmd+Shift+K to preview the HTML file).\nThe preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike Knit, Preview does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-03T21:52:59-05:00",
    "input_file": {}
  },
  {
    "path": "posts/httpsshayehalleegithubiocoursework2022-01-30-dacss-601-hw01/",
    "title": "Shaye Hallee - DACSS 601 HW01",
    "description": "Post for HW01 for DACSS 601.",
    "author": [
      {
        "name": "Shaye Hallee",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:53:31-05:00",
    "input_file": {}
  },
  {
    "path": "posts/hw1/",
    "title": "HW1",
    "description": "DACSS 603",
    "author": [
      {
        "name": "Katie Popiela",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:57:17-05:00",
    "input_file": {}
  },
  {
    "path": "posts/sasi-tansaraviput-hw1/",
    "title": "Sasi Tansaraviput HW1",
    "description": "Test for RPubs DACSS601",
    "author": [
      {
        "name": "Sasi Tansaraviput",
        "url": {}
      }
    ],
    "date": "2022-02-03",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-03T21:57:58-05:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to DACSS 601",
    "description": "Welcome to DACSS 601: Foundations of Data Science. We hope you enjoy \nour student projects.",
    "author": [
      {
        "name": "Meredith Rolfe",
        "url": "http://umass.edu/sbs/dacss"
      }
    ],
    "date": "2022-01-26",
    "categories": [
      "welcome"
    ],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-01-31T21:49:59-05:00",
    "input_file": {}
  }
]
